{"id":"5704be51aa7423ca7f0f2d5ae95f51bd","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in ERC-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) internal virtual {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n * power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224 oldValue, uint224 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224 oldValue, uint224 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint224 storage last = _unsafeAccess(self, pos - 1);\n            uint32 lastKey = last._key;\n            uint224 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace208 storage self,\n        uint48 key,\n        uint208 value\n    ) internal returns (uint208 oldValue, uint208 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint208 value\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint208 storage last = _unsafeAccess(self, pos - 1);\n            uint48 lastKey = last._key;\n            uint208 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160 oldValue, uint160 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160 oldValue, uint160 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint160 storage last = _unsafeAccess(self, pos - 1);\n            uint96 lastKey = last._key;\n            uint160 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(\n        Delay self,\n        uint48 timepoint\n    ) private pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        (valueBefore, valueAfter, effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/Blocklist.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows to implement a blocklist\n * mechanism that can be managed by an authorized account with the\n * {_blockUser} and {_unblockUser} functions.\n *\n * The blocklist provides the guarantee to the contract owner\n * (e.g. a DAO or a well-configured multisig) that any account won't be\n * able to execute transfers or approvals to other entities to operate\n * on its behalf if {_blockUser} was not called with such account as an\n * argument. Similarly, the account will be unblocked again if\n * {_unblockUser} is called.\n */\nabstract contract ERC20Blocklist is ERC20 {\n    /**\n     * @dev Blocked status of addresses. True if blocked, False otherwise.\n     */\n    mapping(address user => bool) internal _blocked;\n\n    /**\n     * @dev Emitted when a user is blocked.\n     */\n    event UserBlocked(address indexed user);\n\n    /**\n     * @dev Emitted when a user is unblocked.\n     */\n    event UserUnblocked(address indexed user);\n\n    /**\n     * @dev The operation failed because the user is blocked.\n     */\n    error ERC20Blocked(address user);\n\n    /**\n     * @dev Returns the blocked status of an account.\n     */\n    function blocked(address account) public virtual returns (bool) {\n        return _blocked[account];\n    }\n\n    /**\n     * @dev Blocks a user from receiving and transferring tokens, including minting and burning.\n     */\n    function _blockUser(address user) internal virtual returns (bool) {\n        bool isBlocked = blocked(user);\n        if (!isBlocked) {\n            _blocked[user] = true;\n            emit UserBlocked(user);\n        }\n        return isBlocked;\n    }\n\n    /**\n     * @dev Unblocks a user from receiving and transferring tokens, including minting and burning.\n     */\n    function _unblockUser(address user) internal virtual returns (bool) {\n        bool isBlocked = blocked(user);\n        if (isBlocked) {\n            _blocked[user] = false;\n            emit UserUnblocked(user);\n        }\n        return isBlocked;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        if (blocked(from)) revert ERC20Blocked(from);\n        if (blocked(to)) revert ERC20Blocked(to);\n        super._update(from, to, value);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual override {\n        if (blocked(owner)) revert ERC20Blocked(owner);\n        super._approve(owner, spender, value, emitEvent);\n    }\n}"},"contracts/Custodian.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows to implement a custodian\n * mechanism that can be managed by an authorized account with the\n * {freeze} and {unfreeze} functions.\n *\n * This mechanism allows a custodian (e.g. a DAO or a\n * well-configured multisig) to freeze and unfreeze the balance\n * of a user.\n *\n * The frozen balance is not available for transfers or approvals\n * to other entities to operate on its behalf if {freeze} was not\n * called with such account as an argument. Similarly, the account\n * will be unfrozen again if {unfreeze} is called.\n */\nabstract contract ERC20Custodian is ERC20 {\n    /**\n     * @dev The amount of tokens frozen by user address.\n     */\n    mapping(address user => uint256 amount) internal _frozen;\n\n    /**\n     * @dev Emitted when tokens are frozen for a user.\n     * @param user The address of the user whose tokens were frozen.\n     * @param amount The amount of tokens that were frozen.\n     */\n    event TokensFrozen(address indexed user, uint256 amount);\n\n    /**\n     * @dev Emitted when tokens are unfrozen for a user.\n     * @param user The address of the user whose tokens were unfrozen.\n     * @param amount The amount of tokens that were unfrozen.\n     */\n    event TokensUnfrozen(address indexed user, uint256 amount);\n\n    /**\n     * @dev The operation failed because the user has insufficient unfrozen balance.\n     */\n    error ERC20InsufficientUnfrozenBalance(address user);\n\n    /**\n     * @dev The operation failed because the user has insufficient frozen balance.\n     */\n    error ERC20InsufficientFrozenBalance(address user);\n\n    /**\n     * @dev Error thrown when a non-custodian account attempts to perform a custodian-only operation.\n     */\n    error ERC20NotCustodian();\n\n    /**\n     * @dev Error thrown when trying to freeze tokens for address zero.\n     */\n    error ERC20FreezeAddressZero();\n\n    /**\n     * @dev Modifier to restrict access to custodian accounts only.\n     */\n    modifier onlyCustodian() {\n        if (!_isCustodian(_msgSender())) revert ERC20NotCustodian();\n        _;\n    }\n\n    /**\n     * @dev Returns the amount of tokens frozen for a user.\n     */\n    function frozen(address user) public view virtual returns (uint256) {\n        return _frozen[user];\n    }\n\n    /**\n     * @dev Adjusts the amount of tokens frozen for a user.\n     * @param user The address of the user whose tokens to freeze.\n     * @param amount The amount of tokens frozen.\n     *\n     * Requirements:\n     *\n     * - The user must have sufficient unfrozen balance.\n     * - The user cannot be address(0).\n     */\n    function freeze(address user, uint256 amount) external virtual onlyCustodian {\n        if (user == address(0)) revert ERC20FreezeAddressZero();\n        if (availableBalance(user) < amount) revert ERC20InsufficientUnfrozenBalance(user);\n        _frozen[user] = amount;\n        emit TokensFrozen(user, amount);\n    }\n\n    /**\n     * @dev Unfreezes tokens for a user.\n     * @param user The address of the user whose tokens to unfreeze.\n     * @param amount The amount of tokens to unfreeze.\n     *\n     * Requirements:\n     *\n     * - The user must have sufficient frozen balance.\n     * - The user cannot be address(0).\n     */\n    function unfreeze(address user, uint256 amount) external virtual onlyCustodian {\n        if (user == address(0)) revert ERC20FreezeAddressZero();\n        uint256 frozenAmount = frozen(user);\n        if (frozenAmount < amount) revert ERC20InsufficientFrozenBalance(user);\n        _frozen[user] = frozenAmount - amount;\n        emit TokensUnfrozen(user, amount);\n    }\n\n    /**\n     * @dev Returns the available (unfrozen) balance of an account.\n     * @param account The address to query the available balance of.\n     * @return available The amount of tokens available for transfer.\n     */\n    function availableBalance(address account) public view returns (uint256 available) {\n        available = balanceOf(account) - frozen(account);\n    }\n\n    /**\n     * @dev Checks if the user is a custodian.\n     * @param user The address of the user to check.\n     * @return True if the user is authorized, false otherwise.\n     */\n    function _isCustodian(address user) internal view virtual returns (bool);\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        if (from != address(0) && availableBalance(from) < value) {\n            revert ERC20InsufficientUnfrozenBalance(from);\n        }\n        super._update(from, to, value);\n    }\n}"},"contracts/USVP.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Blocklist} from \"./Blocklist.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Custodian} from \"./Custodian.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport {ERC20Votes} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport {Nonces} from \"@openzeppelin/contracts/utils/Nonces.sol\";\n\n/// @custom:security-contact guardcolombia@gmail.com, telegram @wanagrow \ncontract USVP is \n    ERC20, \n    ERC20Burnable, \n    ERC20Pausable, \n    AccessControl, \n    ERC20Blocklist, \n    ERC20Custodian, \n    ERC20Permit, \n    ERC20Votes \n{\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant LIMITER_ROLE = keccak256(\"LIMITER_ROLE\");\n    bytes32 public constant CUSTODIAN_ROLE = keccak256(\"CUSTODIAN_ROLE\");\n\n    // Máximo suministro como constante\n    uint256 public constant MAX_SUPPLY = 1000000000 * 10 ** 18; // 1 billón de tokens\n    \n    // Evento para tracking de mint\n    event TokensMinted(address indexed to, uint256 amount, uint256 totalSupply);\n\n    constructor(\n        address defaultAdmin, \n        address pauser, \n        address minter, \n        address limiter, \n        address custodian\n    )\n        ERC20(\"USVP\", \"USVP\")\n        ERC20Permit(\"USVP\")\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(MINTER_ROLE, minter);\n        _grantRole(LIMITER_ROLE, limiter);\n        _grantRole(CUSTODIAN_ROLE, custodian);\n        \n        // Mint inicial de 200 millones de tokens\n        _mint(msg.sender, 200000000 * 10 ** decimals());\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        require(totalSupply() + amount <= MAX_SUPPLY, \"USVP: Max supply exceeded\");\n        _mint(to, amount);\n        emit TokensMinted(to, amount, totalSupply());\n    }\n\n    function blockUser(address user) public onlyRole(LIMITER_ROLE) {\n        _blockUser(user);\n    }\n\n    function unblockUser(address user) public onlyRole(LIMITER_ROLE) {\n        _unblockUser(user);\n    }\n\n    function _isCustodian(address user) internal view override returns (bool) {\n        return hasRole(CUSTODIAN_ROLE, user);\n    }\n\n    // Función para consultar el restante que se puede mintear\n    function remainingSupply() public view returns (uint256) {\n        return MAX_SUPPLY - totalSupply();\n    }\n\n    // The following functions are overrides required by Solidity.\n    function _update(\n        address from, \n        address to, \n        uint256 value\n    ) internal override(ERC20, ERC20Pausable, ERC20Blocklist, ERC20Custodian, ERC20Votes) {\n        super._update(from, to, value);\n    }\n\n    function _approve(\n        address owner, \n        address spender, \n        uint256 value, \n        bool emitEvent\n    ) internal override(ERC20, ERC20Blocklist) {\n        super._approve(owner, spender, value, emitEvent);\n    }\n\n    function nonces(\n        address owner\n    ) public view override(ERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200,"details":{"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf"}}},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2247],"ERC165":[3818],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2248,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3819,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3818,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3818,3830,378,2247],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3817],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3817,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[461]},"id":462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"136:102:2","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":461,"linearizedBaseContracts":[461],"name":"IVotes","nameLocation":"249:6:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"262:55:2","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":386,"name":"VotesExpiredSignature","nameLocation":"328:21:2","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"expiry","nameLocation":"358:6:2","nodeType":"VariableDeclaration","scope":386,"src":"350:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:2"},"src":"322:44:2"},{"anonymous":false,"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"372:71:2","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":395,"name":"DelegateChanged","nameLocation":"454:15:2","nodeType":"EventDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:2","nodeType":"VariableDeclaration","scope":395,"src":"470:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:2","nodeType":"VariableDeclaration","scope":395,"src":"497:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:2","nodeType":"VariableDeclaration","scope":395,"src":"527:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:2"},"src":"448:107:2"},{"anonymous":false,"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"561:131:2","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":404,"name":"DelegateVotesChanged","nameLocation":"703:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:2","nodeType":"VariableDeclaration","scope":404,"src":"724:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:2","nodeType":"VariableDeclaration","scope":404,"src":"750:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:2","nodeType":"VariableDeclaration","scope":404,"src":"773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:2"},"src":"697:94:2"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"797:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":412,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:2","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"account","nameLocation":"907:7:2","nodeType":"VariableDeclaration","scope":412,"src":"899:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:2"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"939:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:2"},"scope":461,"src":"881:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"954:230:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":422,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:2","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"account","nameLocation":"1219:7:2","nodeType":"VariableDeclaration","scope":422,"src":"1211:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:2","nodeType":"VariableDeclaration","scope":422,"src":"1228:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:2"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"1270:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:2"},"scope":461,"src":"1189:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"1285:481:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":430,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:2","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:2","nodeType":"VariableDeclaration","scope":430,"src":"1799:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:2"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"1841:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:2"},"scope":461,"src":"1771:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1856:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"1959:7:2","nodeType":"VariableDeclaration","scope":438,"src":"1951:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:2"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"1991:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:2"},"scope":461,"src":"1932:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"2006:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":444,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:2","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:2","nodeType":"VariableDeclaration","scope":444,"src":"2100:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"2127:0:2"},"scope":461,"src":"2082:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2134:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:2","nodeType":"VariableDeclaration","scope":460,"src":"2229:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:2","nodeType":"VariableDeclaration","scope":460,"src":"2248:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:2","nodeType":"VariableDeclaration","scope":460,"src":"2263:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"v","nameLocation":"2285:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2279:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":452,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"r","nameLocation":"2296:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2288:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"s","nameLocation":"2307:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2299:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2318:0:2"},"scope":461,"src":"2206:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":462,"src":"239:2082:2","usedErrors":[386],"usedEvents":[395,404]}],"src":"110:2212:2"},"id":2},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[8926],"Context":[2247],"ECDSA":[3493],"EIP712":[3720],"IERC5805":[1044],"Nonces":[2315],"SafeCast":[7201],"Time":[9200],"Votes":[1008]},"id":1009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":1045,"src":"135:55:3","symbolAliases":[{"foreign":{"id":464,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":2248,"src":"191:48:3","symbolAliases":[{"foreign":{"id":466,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"199:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":2316,"src":"240:46:3","symbolAliases":[{"foreign":{"id":468,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"248:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":3721,"src":"287:59:3","symbolAliases":[{"foreign":{"id":470,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"295:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":8927,"src":"347:64:3","symbolAliases":[{"foreign":{"id":472,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8926,"src":"355:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":7202,"src":"412:55:3","symbolAliases":[{"foreign":{"id":474,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"420:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":3494,"src":"468:57:3","symbolAliases":[{"foreign":{"id":476,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"476:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":9201,"src":"526:48:3","symbolAliases":[{"foreign":{"id":478,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"534:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":481,"name":"Context","nameLocations":["1919:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"1919:7:3"},"id":482,"nodeType":"InheritanceSpecifier","src":"1919:7:3"},{"baseName":{"id":483,"name":"EIP712","nameLocations":["1928:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3720,"src":"1928:6:3"},"id":484,"nodeType":"InheritanceSpecifier","src":"1928:6:3"},{"baseName":{"id":485,"name":"Nonces","nameLocations":["1936:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"1936:6:3"},"id":486,"nodeType":"InheritanceSpecifier","src":"1936:6:3"},{"baseName":{"id":487,"name":"IERC5805","nameLocations":["1944:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1044,"src":"1944:8:3"},"id":488,"nodeType":"InheritanceSpecifier","src":"1944:8:3"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"576:1315:3","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":1008,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[1008,1044,461,1059,2315,3720,1033,2247],"name":"Votes","nameLocation":"1910:5:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":492,"libraryName":{"id":489,"name":"Checkpoints","nameLocations":["1965:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":8926,"src":"1965:11:3"},"nodeType":"UsingForDirective","src":"1959:43:3","typeName":{"id":491,"nodeType":"UserDefinedTypeName","pathNode":{"id":490,"name":"Checkpoints.Trace208","nameLocations":["1981:11:3","1993:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"1981:20:3"},"referencedDeclaration":7882,"src":"1981:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":497,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:3","nodeType":"VariableDeclaration","scope":1008,"src":"2008:126:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":494,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":501,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:3","nodeType":"VariableDeclaration","scope":1008,"src":"2141:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":500,"keyName":"account","keyNameLocation":"2157:7:3","keyType":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":506,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:3","nodeType":"VariableDeclaration","scope":1008,"src":"2202:79:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":505,"keyName":"delegatee","keyNameLocation":"2218:9:3","keyType":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"Checkpoints.Trace208","nameLocations":["2231:11:3","2243:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"2231:20:3"},"referencedDeclaration":7882,"src":"2231:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":509,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:3","nodeType":"VariableDeclaration","scope":1008,"src":"2288:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"Checkpoints.Trace208","nameLocations":["2288:11:3","2300:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"2288:20:3"},"referencedDeclaration":7882,"src":"2288:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"2341:59:3","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":512,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:3","nodeType":"ErrorDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2435:2:3"},"src":"2405:33:3"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2444:64:3","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":519,"name":"ERC5805FutureLookup","nameLocation":"2519:19:3","nodeType":"ErrorDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:3","nodeType":"VariableDeclaration","scope":519,"src":"2539:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"clock","nameLocation":"2565:5:3","nodeType":"VariableDeclaration","scope":519,"src":"2558:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":516,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:3"},"src":"2513:59:3"},{"baseFunctions":[1052],"body":{"id":529,"nodeType":"Block","src":"2843:42:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":525,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"2860:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9200_$","typeString":"type(library Time)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:3","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8961,"src":"2860:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":524,"id":528,"nodeType":"Return","src":"2853:25:3"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"2578:206:3","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:3","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"2803:2:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"2835:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":522,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:3"},"scope":1008,"src":"2789:96:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1058],"body":{"id":549,"nodeType":"Block","src":"3106:206:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3169:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":538,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9200,"src":"3180:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9200_$","typeString":"type(library Time)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:3","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8961,"src":"3180:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"3165:93:3","trueBody":{"id":545,"nodeType":"Block","src":"3200:58:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3221:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"3214:33:3"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":535,"id":548,"nodeType":"Return","src":"3267:38:3"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2891:91:3","text":" @dev Machine-readable description of the clock as specified in ERC-6372."},"functionSelector":"4bf5d7e9","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:3","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"3059:2:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"3091:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:3"},"scope":1008,"src":"3040:272:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[412],"body":{"id":564,"nodeType":"Block","src":"3475:62:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":558,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3492:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":560,"indexExpression":{"id":559,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3513:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8107,"src":"3492:36:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":557,"id":563,"nodeType":"Return","src":"3485:45:3"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"3318:79:3","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:3","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"account","nameLocation":"3428:7:3","nodeType":"VariableDeclaration","scope":565,"src":"3420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:3"},"scope":1008,"src":"3402:135:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[422],"body":{"id":600,"nodeType":"Block","src":"4018:268:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:3","nodeType":"VariableDeclaration","scope":600,"src":"4028:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":575,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":579,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":577,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4054:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4075:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":581,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4088:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"4071:115:3","trueBody":{"id":588,"nodeType":"Block","src":"4106:80:3","statements":[{"errorCall":{"arguments":[{"id":584,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4147:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":585,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4158:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":583,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4127:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"RevertStatement","src":"4120:55:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":596,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4268:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":594,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"4250:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:3","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6191,"src":"4250:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":590,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4202:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":592,"indexExpression":{"id":591,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4223:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:3","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8077,"src":"4202:47:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":574,"id":599,"nodeType":"Return","src":"4195:84:3"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"3543:374:3","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:3","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"account","nameLocation":"3952:7:3","nodeType":"VariableDeclaration","scope":601,"src":"3944:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:3","nodeType":"VariableDeclaration","scope":601,"src":"3961:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"4009:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:3"},"scope":1008,"src":"3922:364:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[430],"body":{"id":632,"nodeType":"Block","src":"5007:256:3","statements":[{"assignments":[610],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:3","nodeType":"VariableDeclaration","scope":632,"src":"5017:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":609,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":613,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5043:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5064:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":615,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5077:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"5060:115:3","trueBody":{"id":622,"nodeType":"Block","src":"5095:80:3","statements":[{"errorCall":{"arguments":[{"id":618,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5136:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":619,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5147:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":617,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5116:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"RevertStatement","src":"5109:55:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":628,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5245:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"5227:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:3","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6191,"src":"5227:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":624,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"5191:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:3","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8077,"src":"5191:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":608,"id":631,"nodeType":"Return","src":"5184:72:3"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4292:625:3","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:3","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:3","nodeType":"VariableDeclaration","scope":633,"src":"4950:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"4998:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:3"},"scope":1008,"src":"4922:341:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5407:50:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":639,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"5424:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8107,"src":"5424:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":638,"id":642,"nodeType":"Return","src":"5417:33:3"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"5269:66:3","text":" @dev Returns the current total supply of votes."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:3","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"5364:2:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5398:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:3"},"scope":1008,"src":"5340:117:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[438],"body":{"id":656,"nodeType":"Block","src":"5613:43:3","statements":[{"expression":{"baseExpression":{"id":652,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5630:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":654,"indexExpression":{"id":653,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5641:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":651,"id":655,"nodeType":"Return","src":"5623:26:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5463:71:3","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:3","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"account","nameLocation":"5566:7:3","nodeType":"VariableDeclaration","scope":657,"src":"5558:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:3"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"5604:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:3"},"scope":1008,"src":"5539:117:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[444],"body":{"id":673,"nodeType":"Block","src":"5790:86:3","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"account","nameLocation":"5808:7:3","nodeType":"VariableDeclaration","scope":673,"src":"5800:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"5818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:3"},{"expression":{"arguments":[{"id":669,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5850:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"5859:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"5840:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"5840:29:3"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"5662:71:3","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":674,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:3","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:3","nodeType":"VariableDeclaration","scope":674,"src":"5756:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"5790:0:3"},"scope":1008,"src":"5738:138:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[460],"body":{"id":730,"nodeType":"Block","src":"6127:381:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":692,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6159:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":699,"nodeType":"IfStatement","src":"6137:91:3","trueBody":{"id":698,"nodeType":"Block","src":"6167:61:3","statements":[{"errorCall":{"arguments":[{"id":695,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6210:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6188:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"RevertStatement","src":"6181:36:3"}]}},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"signer","nameLocation":"6245:6:3","nodeType":"VariableDeclaration","scope":730,"src":"6237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":719,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":708,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"6319:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":709,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6340:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6351:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":711,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6358:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:3","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":705,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":704,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"6281:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":715,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6381:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":716,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6396:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":717,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6411:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":702,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6254:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3493_$","typeString":"type(library ECDSA)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:3","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"6254:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:3"},{"expression":{"arguments":[{"id":721,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6449:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6457:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"6432:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"6432:31:3"},{"expression":{"arguments":[{"id":726,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6483:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6491:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":725,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6473:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"6473:28:3"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"5882:67:3","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":731,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:3","nodeType":"VariableDeclaration","scope":731,"src":"5986:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:3","nodeType":"VariableDeclaration","scope":731,"src":"6013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:3","nodeType":"VariableDeclaration","scope":731,"src":"6036:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"v","nameLocation":"6066:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6060:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":682,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"r","nameLocation":"6085:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6077:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"s","nameLocation":"6104:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6096:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:3"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"6127:0:3"},"scope":1008,"src":"5954:554:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":765,"nodeType":"Block","src":"6758:240:3","statements":[{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:3","nodeType":"VariableDeclaration","scope":765,"src":"6768:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6800:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6790:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:3"},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":745,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6818:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":747,"indexExpression":{"id":746,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6829:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":748,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6840:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":750,"nodeType":"ExpressionStatement","src":"6818:31:3"},{"eventCall":{"arguments":[{"id":752,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6890:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6903:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":751,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6865:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"EmitStatement","src":"6860:53:3"},{"expression":{"arguments":[{"id":758,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6942:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6955:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":761,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6982:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6966:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":757,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6923:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"6923:68:3"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"6514:167:3","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"account","nameLocation":"6713:7:3","nodeType":"VariableDeclaration","scope":766,"src":"6705:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:3","nodeType":"VariableDeclaration","scope":766,"src":"6722:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:3"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"6758:0:3"},"scope":1008,"src":"6686:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7321:310:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7335:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:3","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"7331:107:3","trueBody":{"id":791,"nodeType":"Block","src":"7355:83:3","statements":[{"expression":{"arguments":[{"id":783,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7375:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":784,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"7394:4:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7419:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"7400:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"7400:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":782,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7369:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7882_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":790,"nodeType":"ExpressionStatement","src":"7369:58:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7451:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:3","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"7447:110:3","trueBody":{"id":808,"nodeType":"Block","src":"7469:88:3","statements":[{"expression":{"arguments":[{"id":800,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7489:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":801,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"7508:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7538:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"7519:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"7519:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":799,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7483:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7882_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":807,"nodeType":"ExpressionStatement","src":"7483:63:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7595:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":811,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7585:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7612:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":814,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7602:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7617:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7566:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"7566:58:3"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"7004:223:3","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"from","nameLocation":"7270:4:3","nodeType":"VariableDeclaration","scope":821,"src":"7262:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"to","nameLocation":"7284:2:3","nodeType":"VariableDeclaration","scope":821,"src":"7276:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"amount","nameLocation":"7296:6:3","nodeType":"VariableDeclaration","scope":821,"src":"7288:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"7321:0:3"},"scope":1008,"src":"7232:399:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":898,"nodeType":"Block","src":"7804:702:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7818:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"7826:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7818:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7832:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7832:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7818:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":897,"nodeType":"IfStatement","src":"7814:686:3","trueBody":{"id":896,"nodeType":"Block","src":"7844:656:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7862:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7870:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7870:7:3","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7862:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":866,"nodeType":"IfStatement","src":"7858:315:3","trueBody":{"id":865,"nodeType":"Block","src":"7882:291:3","statements":[{"assignments":[845,847],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"oldValue","nameLocation":"7909:8:3","nodeType":"VariableDeclaration","scope":865,"src":"7901:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7901:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"newValue","nameLocation":"7927:8:3","nodeType":"VariableDeclaration","scope":865,"src":"7919:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"7919:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":858,"initialValue":{"arguments":[{"baseExpression":{"id":849,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"7966:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":851,"indexExpression":{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7987:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7966:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":852,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"8014:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8064:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"8045:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8054:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"8045:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":848,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7939:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7882_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:150:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7900:189:3"},{"eventCall":{"arguments":[{"id":860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"8133:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8139:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":862,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8149:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8112:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8112:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"EmitStatement","src":"8107:51:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8190:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8204:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8196:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"8196:7:3","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8196:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8190:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"IfStatement","src":"8186:304:3","trueBody":{"id":894,"nodeType":"Block","src":"8208:282:3","statements":[{"assignments":[874,876],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"oldValue","nameLocation":"8235:8:3","nodeType":"VariableDeclaration","scope":894,"src":"8227:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8227:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"newValue","nameLocation":"8253:8:3","nodeType":"VariableDeclaration","scope":894,"src":"8245:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"baseExpression":{"id":878,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8292:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":880,"indexExpression":{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8313:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8292:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":881,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8338:4:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8383:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"8364:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8373:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"8364:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8364:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":877,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"8265:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7882_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8265:143:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8226:182:3"},{"eventCall":{"arguments":[{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8452:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"8456:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":891,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"8466:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8431:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"EmitStatement","src":"8426:49:3"}]}}]}}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"7637:75:3","text":" @dev Moves delegated votes from one delegate to another."},"id":899,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:3","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"from","nameLocation":"7753:4:3","nodeType":"VariableDeclaration","scope":899,"src":"7745:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"to","nameLocation":"7767:2:3","nodeType":"VariableDeclaration","scope":899,"src":"7759:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"amount","nameLocation":"7779:6:3","nodeType":"VariableDeclaration","scope":899,"src":"7771:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:3"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"7804:0:3"},"scope":1008,"src":"7717:789:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"8662:81:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":909,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8697:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":911,"indexExpression":{"id":910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"8718:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8697:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8727:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"8697:36:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":907,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"8679:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8688:8:3","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6247,"src":"8679:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8679:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":906,"id":915,"nodeType":"Return","src":"8672:64:3"}]},"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"8512:64:3","text":" @dev Get number of checkpoints for `account`."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8590:15:3","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"account","nameLocation":"8614:7:3","nodeType":"VariableDeclaration","scope":917,"src":"8606:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"8606:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8605:17:3"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"8654:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":904,"name":"uint32","nodeType":"ElementaryTypeName","src":"8654:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8653:8:3"},"scope":1008,"src":"8581:162:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"8958:61:3","statements":[{"expression":{"arguments":[{"id":932,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9008:3:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":928,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8975:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$7882_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":930,"indexExpression":{"id":929,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8996:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8975:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9005:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"8975:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7887_memory_ptr_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8975:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":927,"id":934,"nodeType":"Return","src":"8968:44:3"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"8749:66:3","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8829:12:3","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"account","nameLocation":"8859:7:3","nodeType":"VariableDeclaration","scope":936,"src":"8851:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"8851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"pos","nameLocation":"8883:3:3","nodeType":"VariableDeclaration","scope":936,"src":"8876:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":921,"name":"uint32","nodeType":"ElementaryTypeName","src":"8876:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8841:51:3"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"8924:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":925,"nodeType":"UserDefinedTypeName","pathNode":{"id":924,"name":"Checkpoints.Checkpoint208","nameLocations":["8924:11:3","8936:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"8924:25:3"},"referencedDeclaration":7887,"src":"8924:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8923:34:3"},"scope":1008,"src":"8820:199:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"9228:70:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9256:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9256:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":963,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9268:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9274:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8107,"src":"9268:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$7882_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9268:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":966,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"9284:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":962,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9265:2:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9265:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":958,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9245:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9251:4:3","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":7910,"src":"9245:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$7882_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$7882_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9245:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":957,"id":969,"nodeType":"Return","src":"9238:53:3"}]},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9034:5:3","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"store","nameLocation":"9078:5:3","nodeType":"VariableDeclaration","scope":971,"src":"9049:34:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":938,"nodeType":"UserDefinedTypeName","pathNode":{"id":937,"name":"Checkpoints.Trace208","nameLocations":["9049:11:3","9061:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"9049:20:3"},"referencedDeclaration":7882,"src":"9049:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"op","nameLocation":"9143:2:3","nodeType":"VariableDeclaration","scope":971,"src":"9093:52:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":948,"nodeType":"FunctionTypeName","parameterTypes":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9102:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":940,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9111:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":942,"name":"uint208","nodeType":"ElementaryTypeName","src":"9111:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9101:18:3"},"returnParameterTypes":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9134:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":945,"name":"uint208","nodeType":"ElementaryTypeName","src":"9134:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9133:9:3"},"src":"9093:52:3","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"delta","nameLocation":"9163:5:3","nodeType":"VariableDeclaration","scope":971,"src":"9155:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":950,"name":"uint208","nodeType":"ElementaryTypeName","src":"9155:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9039:135:3"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"oldValue","nameLocation":"9200:8:3","nodeType":"VariableDeclaration","scope":971,"src":"9192:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":953,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"newValue","nameLocation":"9218:8:3","nodeType":"VariableDeclaration","scope":971,"src":"9210:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":955,"name":"uint208","nodeType":"ElementaryTypeName","src":"9210:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9191:36:3"},"scope":1008,"src":"9025:273:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":984,"nodeType":"Block","src":"9371:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"9388:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9392:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9388:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":979,"id":983,"nodeType":"Return","src":"9381:12:3"}]},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9313:4:3","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"a","nameLocation":"9326:1:3","nodeType":"VariableDeclaration","scope":985,"src":"9318:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":972,"name":"uint208","nodeType":"ElementaryTypeName","src":"9318:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"b","nameLocation":"9337:1:3","nodeType":"VariableDeclaration","scope":985,"src":"9329:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":974,"name":"uint208","nodeType":"ElementaryTypeName","src":"9329:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9317:22:3"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"9362:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":977,"name":"uint208","nodeType":"ElementaryTypeName","src":"9362:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9361:9:3"},"scope":1008,"src":"9304:96:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":998,"nodeType":"Block","src":"9478:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9495:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":995,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9499:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9495:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":993,"id":997,"nodeType":"Return","src":"9488:12:3"}]},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9415:9:3","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"a","nameLocation":"9433:1:3","nodeType":"VariableDeclaration","scope":999,"src":"9425:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":986,"name":"uint208","nodeType":"ElementaryTypeName","src":"9425:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"b","nameLocation":"9444:1:3","nodeType":"VariableDeclaration","scope":999,"src":"9436:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":988,"name":"uint208","nodeType":"ElementaryTypeName","src":"9436:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9424:22:3"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"9469:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":991,"name":"uint208","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9468:9:3"},"scope":1008,"src":"9406:101:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"9513:72:3","text":" @dev Must return the voting units held by an account."},"id":1007,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9599:15:3","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"9615:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9614:9:3"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"9655:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9654:9:3"},"scope":1008,"src":"9590:74:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1009,"src":"1892:7774:3","usedErrors":[386,512,519,2257,2498,2500,3156,3161,3166,5446,7353],"usedEvents":[395,404,1013]}],"src":"109:9558:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1033]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1033,"linearizedBaseContracts":[1033],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1013,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":1032,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1016,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":1032,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1018,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":1032,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":1032,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":1032,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":1032,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":1032,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":1033,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1034,"src":"133:605:4","usedErrors":[],"usedEvents":[1013]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[1044],"IERC6372":[1059],"IVotes":[461]},"id":1045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1035,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":1037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1045,"sourceUnit":462,"src":"133:54:5","symbolAliases":[{"foreign":{"id":1036,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"141:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":1039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1045,"sourceUnit":1060,"src":"188:40:5","symbolAliases":[{"foreign":{"id":1038,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"196:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1040,"name":"IERC6372","nameLocations":["252:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"252:8:5"},"id":1041,"nodeType":"InheritanceSpecifier","src":"252:8:5"},{"baseName":{"id":1042,"name":"IVotes","nameLocations":["262:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":461,"src":"262:6:5"},"id":1043,"nodeType":"InheritanceSpecifier","src":"262:6:5"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1044,"linearizedBaseContracts":[1044,461,1059],"name":"IERC5805","nameLocation":"240:8:5","nodeType":"ContractDefinition","nodes":[],"scope":1045,"src":"230:41:5","usedErrors":[386],"usedEvents":[395,404]}],"src":"107:165:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[1059]},"id":1060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1046,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1059,"linearizedBaseContracts":[1059],"name":"IERC6372","nameLocation":"143:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"158:133:6","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:6","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"310:2:6"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"336:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1049,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:6"},"scope":1059,"src":"296:48:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"350:48:6","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1058,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:6","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"475:2:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"501:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:6"},"scope":1059,"src":"456:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1060,"src":"133:385:6","usedErrors":[],"usedEvents":[]}],"src":"107:412:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1196],"IERC20Errors":[1101],"IERC721Errors":[1149]},"id":1197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"138:141:7","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1101,"linearizedBaseContracts":[1101],"name":"IERC20Errors","nameLocation":"290:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"309:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1071,"name":"ERC20InsufficientBalance","nameLocation":"629:24:7","nodeType":"ErrorDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"sender","nameLocation":"662:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"654:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"balance","nameLocation":"678:7:7","nodeType":"VariableDeclaration","scope":1071,"src":"670:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"needed","nameLocation":"695:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"687:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:7"},"src":"623:80:7"},{"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"709:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1076,"name":"ERC20InvalidSender","nameLocation":"872:18:7","nodeType":"ErrorDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"sender","nameLocation":"899:6:7","nodeType":"VariableDeclaration","scope":1076,"src":"891:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:7"},"src":"866:41:7"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"913:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1081,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:7","nodeType":"ErrorDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:7","nodeType":"VariableDeclaration","scope":1081,"src":"1104:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:7"},"src":"1077:45:7"},{"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1128:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1090,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:7","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"spender","nameLocation":"1519:7:7","nodeType":"VariableDeclaration","scope":1090,"src":"1511:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:7","nodeType":"VariableDeclaration","scope":1090,"src":"1528:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"needed","nameLocation":"1555:6:7","nodeType":"VariableDeclaration","scope":1090,"src":"1547:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:7"},"src":"1478:85:7"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"1569:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1095,"name":"ERC20InvalidApprover","nameLocation":"1754:20:7","nodeType":"ErrorDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"approver","nameLocation":"1783:8:7","nodeType":"VariableDeclaration","scope":1095,"src":"1775:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:7"},"src":"1748:45:7"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"1799:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1100,"name":"ERC20InvalidSpender","nameLocation":"2005:19:7","nodeType":"ErrorDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"spender","nameLocation":"2033:7:7","nodeType":"VariableDeclaration","scope":1100,"src":"2025:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:7"},"src":"1999:43:7"}],"scope":1197,"src":"280:1764:7","usedErrors":[1071,1076,1081,1090,1095,1100],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"2046:143:7","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1149,"linearizedBaseContracts":[1149],"name":"IERC721Errors","nameLocation":"2200:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"2220:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1107,"name":"ERC721InvalidOwner","nameLocation":"2450:18:7","nodeType":"ErrorDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"owner","nameLocation":"2477:5:7","nodeType":"VariableDeclaration","scope":1107,"src":"2469:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:7"},"src":"2444:40:7"},{"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"2490:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1112,"name":"ERC721NonexistentToken","nameLocation":"2633:22:7","nodeType":"ErrorDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:7","nodeType":"VariableDeclaration","scope":1112,"src":"2656:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:7"},"src":"2627:46:7"},{"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"2679:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1121,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:7","nodeType":"ErrorDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"sender","nameLocation":"3008:6:7","nodeType":"VariableDeclaration","scope":1121,"src":"3000:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:7","nodeType":"VariableDeclaration","scope":1121,"src":"3016:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"owner","nameLocation":"3041:5:7","nodeType":"VariableDeclaration","scope":1121,"src":"3033:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:7"},"src":"2973:75:7"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"3054:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1126,"name":"ERC721InvalidSender","nameLocation":"3217:19:7","nodeType":"ErrorDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"sender","nameLocation":"3245:6:7","nodeType":"VariableDeclaration","scope":1126,"src":"3237:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:7"},"src":"3211:42:7"},{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"3259:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1131,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:7","nodeType":"ErrorDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:7","nodeType":"VariableDeclaration","scope":1131,"src":"3451:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:7"},"src":"3423:46:7"},{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"3475:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1138,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:7","nodeType":"ErrorDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"operator","nameLocation":"3768:8:7","nodeType":"VariableDeclaration","scope":1138,"src":"3760:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:7","nodeType":"VariableDeclaration","scope":1138,"src":"3778:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:7"},"src":"3727:68:7"},{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"3801:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1143,"name":"ERC721InvalidApprover","nameLocation":"3986:21:7","nodeType":"ErrorDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"approver","nameLocation":"4016:8:7","nodeType":"VariableDeclaration","scope":1143,"src":"4008:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:7"},"src":"3980:46:7"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"4032:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1148,"name":"ERC721InvalidOperator","nameLocation":"4240:21:7","nodeType":"ErrorDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"operator","nameLocation":"4270:8:7","nodeType":"VariableDeclaration","scope":1148,"src":"4262:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:7"},"src":"4234:46:7"}],"scope":1197,"src":"2190:2092:7","usedErrors":[1107,1112,1121,1126,1131,1138,1143,1148],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"4284:145:7","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1196,"linearizedBaseContracts":[1196],"name":"IERC1155Errors","nameLocation":"4440:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"4461:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1161,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:7","nodeType":"ErrorDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"sender","nameLocation":"4868:6:7","nodeType":"VariableDeclaration","scope":1161,"src":"4860:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"balance","nameLocation":"4884:7:7","nodeType":"VariableDeclaration","scope":1161,"src":"4876:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"needed","nameLocation":"4901:6:7","nodeType":"VariableDeclaration","scope":1161,"src":"4893:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:7","nodeType":"VariableDeclaration","scope":1161,"src":"4909:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:7"},"src":"4827:99:7"},{"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"4932:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1166,"name":"ERC1155InvalidSender","nameLocation":"5095:20:7","nodeType":"ErrorDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"sender","nameLocation":"5124:6:7","nodeType":"VariableDeclaration","scope":1166,"src":"5116:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:7"},"src":"5089:43:7"},{"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"5138:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1171,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:7","nodeType":"ErrorDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:7","nodeType":"VariableDeclaration","scope":1171,"src":"5331:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:7"},"src":"5302:47:7"},{"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"5355:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1178,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:7","nodeType":"ErrorDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"operator","nameLocation":"5659:8:7","nodeType":"VariableDeclaration","scope":1178,"src":"5651:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"owner","nameLocation":"5677:5:7","nodeType":"VariableDeclaration","scope":1178,"src":"5669:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:7"},"src":"5616:68:7"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"5690:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1183,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:7","nodeType":"ErrorDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"approver","nameLocation":"5906:8:7","nodeType":"VariableDeclaration","scope":1183,"src":"5898:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:7"},"src":"5869:47:7"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"5922:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1188,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:7","nodeType":"ErrorDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"operator","nameLocation":"6161:8:7","nodeType":"VariableDeclaration","scope":1188,"src":"6153:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:7"},"src":"6124:47:7"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"6177:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1195,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:7","nodeType":"ErrorDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:7","nodeType":"VariableDeclaration","scope":1195,"src":"6494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:7","nodeType":"VariableDeclaration","scope":1195,"src":"6513:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:7"},"src":"6462:73:7"}],"scope":1197,"src":"4430:2107:7","usedErrors":[1161,1166,1171,1178,1183,1188,1195],"usedEvents":[]}],"src":"112:6426:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2247],"ERC20":[1711],"IERC20":[1789],"IERC20Errors":[1101],"IERC20Metadata":[2181]},"id":1712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1198,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":1790,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1199,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":2182,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1201,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":2248,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1203,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":1197,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1205,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1208,"name":"Context","nameLocations":["1133:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"1133:7:8"},"id":1209,"nodeType":"InheritanceSpecifier","src":"1133:7:8"},{"baseName":{"id":1210,"name":"IERC20","nameLocations":["1142:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1789,"src":"1142:6:8"},"id":1211,"nodeType":"InheritanceSpecifier","src":"1142:6:8"},{"baseName":{"id":1212,"name":"IERC20Metadata","nameLocations":["1150:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"1150:14:8"},"id":1213,"nodeType":"InheritanceSpecifier","src":"1150:14:8"},{"baseName":{"id":1214,"name":"IERC20Errors","nameLocations":["1166:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1101,"src":"1166:12:8"},"id":1215,"nodeType":"InheritanceSpecifier","src":"1166:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"348:757:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1711,"linearizedBaseContracts":[1711,1101,2181,1789,2247],"name":"ERC20","nameLocation":"1124:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1219,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:8","nodeType":"VariableDeclaration","scope":1711,"src":"1185:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1218,"keyName":"account","keyNameLocation":"1201:7:8","keyType":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1225,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:8","nodeType":"VariableDeclaration","scope":1711,"src":"1245:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1224,"keyName":"account","keyNameLocation":"1261:7:8","keyType":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1223,"keyName":"spender","keyNameLocation":"1288:7:8","keyType":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1227,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:8","nodeType":"VariableDeclaration","scope":1711,"src":"1335:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1229,"mutability":"mutable","name":"_name","nameLocation":"1385:5:8","nodeType":"VariableDeclaration","scope":1711,"src":"1370:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1231,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:8","nodeType":"VariableDeclaration","scope":1711,"src":"1396:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1230,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1247,"nodeType":"Block","src":"1657:57:8","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1239,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1667:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1240,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1675:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1242,"nodeType":"ExpressionStatement","src":"1667:13:8"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1690:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1244,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1700:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1246,"nodeType":"ExpressionStatement","src":"1690:17:8"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1425:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1248,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"name_","nameLocation":"1627:5:8","nodeType":"VariableDeclaration","scope":1248,"src":"1613:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1233,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:8","nodeType":"VariableDeclaration","scope":1248,"src":"1634:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:8"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"1657:0:8"},"scope":1711,"src":"1601:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2168],"body":{"id":1256,"nodeType":"Block","src":"1839:29:8","statements":[{"expression":{"id":1254,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1856:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1253,"id":1255,"nodeType":"Return","src":"1849:12:8"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"1720:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:8","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[],"src":"1792:2:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"1824:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1251,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:8"},"scope":1711,"src":"1779:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2174],"body":{"id":1265,"nodeType":"Block","src":"2043:31:8","statements":[{"expression":{"id":1263,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2060:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1262,"id":1264,"nodeType":"Return","src":"2053:14:8"}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"1874:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:8","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"1996:2:8"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"2028:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:8"},"scope":1711,"src":"1981:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2180],"body":{"id":1274,"nodeType":"Block","src":"2763:26:8","statements":[{"expression":{"hexValue":"3138","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1271,"id":1273,"nodeType":"Return","src":"2773:9:8"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"2080:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:8","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"2724:2:8"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2756:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1269,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:8"},"scope":1711,"src":"2707:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1738],"body":{"id":1283,"nodeType":"Block","src":"2910:36:8","statements":[{"expression":{"id":1281,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2927:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1280,"id":1282,"nodeType":"Return","src":"2920:19:8"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2795:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:8","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"2869:2:8"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"2901:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:8"},"scope":1711,"src":"2849:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1746],"body":{"id":1296,"nodeType":"Block","src":"3078:42:8","statements":[{"expression":{"baseExpression":{"id":1292,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3095:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1294,"indexExpression":{"id":1293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3105:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1291,"id":1295,"nodeType":"Return","src":"3088:25:8"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"2952:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:8","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"account","nameLocation":"3031:7:8","nodeType":"VariableDeclaration","scope":1297,"src":"3023:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:8"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"3069:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:8"},"scope":1711,"src":"3004:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1756],"body":{"id":1320,"nodeType":"Block","src":"3390:103:8","statements":[{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"owner","nameLocation":"3408:5:8","nodeType":"VariableDeclaration","scope":1320,"src":"3400:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1309,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3416:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:8"},{"expression":{"arguments":[{"id":1313,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"3448:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3455:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3459:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"3438:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"3438:27:8"},{"expression":{"hexValue":"74727565","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1306,"id":1319,"nodeType":"Return","src":"3475:11:8"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"3126:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:8","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"to","nameLocation":"3341:2:8","nodeType":"VariableDeclaration","scope":1321,"src":"3333:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3353:5:8","nodeType":"VariableDeclaration","scope":1321,"src":"3345:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:8"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"3384:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:8"},"scope":1711,"src":"3315:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1766],"body":{"id":1337,"nodeType":"Block","src":"3640:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1331,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3657:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1333,"indexExpression":{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3669:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1335,"indexExpression":{"id":1334,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3676:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1330,"id":1336,"nodeType":"Return","src":"3650:34:8"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"3499:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:8","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"owner","nameLocation":"3578:5:8","nodeType":"VariableDeclaration","scope":1338,"src":"3570:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"spender","nameLocation":"3593:7:8","nodeType":"VariableDeclaration","scope":1338,"src":"3585:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:8"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1338,"src":"3631:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:8"},"scope":1711,"src":"3551:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1776],"body":{"id":1361,"nodeType":"Block","src":"4077:107:8","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"owner","nameLocation":"4095:5:8","nodeType":"VariableDeclaration","scope":1361,"src":"4087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1352,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4103:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:8"},{"expression":{"arguments":[{"id":1354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4134:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4141:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4150:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1602,"src":"4125:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"4125:31:8"},{"expression":{"hexValue":"74727565","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1347,"id":1360,"nodeType":"Return","src":"4166:11:8"}]},"documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"3697:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:8","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"spender","nameLocation":"4023:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"4015:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"value","nameLocation":"4040:5:8","nodeType":"VariableDeclaration","scope":1362,"src":"4032:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:8"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"4071:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1345,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:8"},"scope":1711,"src":"3998:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1788],"body":{"id":1393,"nodeType":"Block","src":"4869:151:8","statements":[{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"spender","nameLocation":"4887:7:8","nodeType":"VariableDeclaration","scope":1393,"src":"4879:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1378,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1376,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4897:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:8"},{"expression":{"arguments":[{"id":1380,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4935:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"4941:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4950:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"4919:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1384,"nodeType":"ExpressionStatement","src":"4919:37:8"},{"expression":{"arguments":[{"id":1386,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4976:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4982:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4986:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"4966:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"4966:26:8"},{"expression":{"hexValue":"74727565","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1373,"id":1392,"nodeType":"Return","src":"5002:11:8"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"4190:581:8","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:8","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"from","nameLocation":"4806:4:8","nodeType":"VariableDeclaration","scope":1394,"src":"4798:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"to","nameLocation":"4820:2:8","nodeType":"VariableDeclaration","scope":1394,"src":"4812:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"4832:5:8","nodeType":"VariableDeclaration","scope":1394,"src":"4824:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:8"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"4863:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1371,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:8"},"scope":1711,"src":"4776:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1440,"nodeType":"Block","src":"5462:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5476:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:8","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"5472:86:8","trueBody":{"id":1417,"nodeType":"Block","src":"5496:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:8","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5517:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"5510:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"5571:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:8","typeDescriptions":{}}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1433,"nodeType":"IfStatement","src":"5567:86:8","trueBody":{"id":1432,"nodeType":"Block","src":"5589:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:8","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5610:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"5603:39:8"}]}},{"expression":{"arguments":[{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5670:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"5676:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"5680:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5662:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"5662:24:8"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"5026:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:8","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"from","nameLocation":"5420:4:8","nodeType":"VariableDeclaration","scope":1441,"src":"5412:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"to","nameLocation":"5434:2:8","nodeType":"VariableDeclaration","scope":1441,"src":"5426:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"value","nameLocation":"5446:5:8","nodeType":"VariableDeclaration","scope":1441,"src":"5438:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:8"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"5462:0:8"},"scope":1711,"src":"5393:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1517,"nodeType":"Block","src":"6083:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6097:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:8","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1488,"nodeType":"Block","src":"6271:362:8","statements":[{"assignments":[1463],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:8","nodeType":"VariableDeclaration","scope":1488,"src":"6285:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"baseExpression":{"id":1464,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6307:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1466,"indexExpression":{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6317:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6340:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6354:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"6336:115:8","trueBody":{"id":1477,"nodeType":"Block","src":"6361:90:8","statements":[{"errorCall":{"arguments":[{"id":1472,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6411:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6417:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6430:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"6386:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"RevertStatement","src":"6379:57:8"}]}},{"id":1487,"nodeType":"UncheckedBlock","src":"6464:159:8","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1479,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6571:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1481,"indexExpression":{"id":1480,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6581:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6589:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6603:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"6571:37:8"}]}]},"id":1489,"nodeType":"IfStatement","src":"6093:540:8","trueBody":{"id":1461,"nodeType":"Block","src":"6117:148:8","statements":[{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1457,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6233:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1460,"nodeType":"ExpressionStatement","src":"6233:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"6647:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:8","typeDescriptions":{}}},"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1509,"nodeType":"Block","src":"6862:206:8","statements":[{"id":1508,"nodeType":"UncheckedBlock","src":"6876:182:8","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1502,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"7021:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1504,"indexExpression":{"id":1503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7031:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"7021:22:8"}]}]},"id":1510,"nodeType":"IfStatement","src":"6643:425:8","trueBody":{"id":1501,"nodeType":"Block","src":"6665:191:8","statements":[{"id":1500,"nodeType":"UncheckedBlock","src":"6679:167:8","statements":[{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6810:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6826:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ExpressionStatement","src":"6810:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7092:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7098:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7102:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"7083:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"EmitStatement","src":"7078:30:8"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"5699:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:8","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"6033:4:8","nodeType":"VariableDeclaration","scope":1518,"src":"6025:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"6047:2:8","nodeType":"VariableDeclaration","scope":1518,"src":"6039:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"value","nameLocation":"6059:5:8","nodeType":"VariableDeclaration","scope":1518,"src":"6051:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:8"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"6083:0:8"},"scope":1711,"src":"6008:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"7514:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7528:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:8","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"IfStatement","src":"7524:91:8","trueBody":{"id":1539,"nodeType":"Block","src":"7551:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:8","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1532,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7572:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"RevertStatement","src":"7565:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:8","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7644:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"7653:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"7624:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"7624:35:8"}]},"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"7121:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:8","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"account","nameLocation":"7481:7:8","nodeType":"VariableDeclaration","scope":1551,"src":"7473:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"value","nameLocation":"7498:5:8","nodeType":"VariableDeclaration","scope":1551,"src":"7490:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:8"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[],"src":"7514:0:8"},"scope":1711,"src":"7458:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"8040:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8054:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:8","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"8050:89:8","trueBody":{"id":1572,"nodeType":"Block","src":"8077:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:8","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1565,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8098:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"RevertStatement","src":"8091:37:8"}]}},{"expression":{"arguments":[{"id":1575,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8156:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"8177:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1574,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"8148:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"8148:35:8"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"7672:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:8","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"account","nameLocation":"8007:7:8","nodeType":"VariableDeclaration","scope":1584,"src":"7999:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"value","nameLocation":"8024:5:8","nodeType":"VariableDeclaration","scope":1584,"src":"8016:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:8"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"8040:0:8"},"scope":1711,"src":"7984:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"8800:54:8","statements":[{"expression":{"arguments":[{"id":1595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8819:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8826:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"8835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1594,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1662,"src":"8810:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"8810:37:8"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"8196:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:8","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"owner","nameLocation":"8752:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"8744:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"spender","nameLocation":"8767:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"8759:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"value","nameLocation":"8784:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"8776:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:8"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[],"src":"8800:0:8"},"scope":1711,"src":"8726:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1661,"nodeType":"Block","src":"9799:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"9813:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:8","typeDescriptions":{}}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"9809:89:8","trueBody":{"id":1627,"nodeType":"Block","src":"9834:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:8","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"9855:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"RevertStatement","src":"9848:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"9911:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:8","typeDescriptions":{}}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"IfStatement","src":"9907:90:8","trueBody":{"id":1642,"nodeType":"Block","src":"9934:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:8","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1635,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9955:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"9948:38:8"}]}},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1644,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"10006:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1647,"indexExpression":{"id":1645,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10018:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1648,"indexExpression":{"id":1646,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10025:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10036:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"10006:35:8"},{"condition":{"id":1652,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10055:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"10051:76:8","trueBody":{"id":1659,"nodeType":"Block","src":"10066:61:8","statements":[{"eventCall":{"arguments":[{"id":1654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10094:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10101:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10110:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1653,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"10085:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"EmitStatement","src":"10080:36:8"}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"8860:836:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:8","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"9727:5:8","nodeType":"VariableDeclaration","scope":1662,"src":"9719:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"9742:7:8","nodeType":"VariableDeclaration","scope":1662,"src":"9734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"9759:5:8","nodeType":"VariableDeclaration","scope":1662,"src":"9751:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:8","nodeType":"VariableDeclaration","scope":1662,"src":"9766:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:8"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"9799:0:8"},"scope":1711,"src":"9701:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"10504:388:8","statements":[{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:8","nodeType":"VariableDeclaration","scope":1709,"src":"10514:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"arguments":[{"id":1675,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"10551:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10558:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1674,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"10541:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10580:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:8","memberName":"max","nodeType":"MemberAccess","src":"10600:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1708,"nodeType":"IfStatement","src":"10576:310:8","trueBody":{"id":1707,"nodeType":"Block","src":"10619:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10637:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10656:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"10633:130:8","trueBody":{"id":1695,"nodeType":"Block","src":"10663:100:8","statements":[{"errorCall":{"arguments":[{"id":1690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10715:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10724:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10742:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"10688:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"RevertStatement","src":"10681:67:8"}]}},{"id":1706,"nodeType":"UncheckedBlock","src":"10776:100:8","statements":[{"expression":{"arguments":[{"id":1698,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"10813:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1699,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10820:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10829:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10848:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1697,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1662,"src":"10804:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"10804:57:8"}]}]}}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"10139:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:8","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"owner","nameLocation":"10448:5:8","nodeType":"VariableDeclaration","scope":1710,"src":"10440:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"spender","nameLocation":"10463:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"10455:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"value","nameLocation":"10480:5:8","nodeType":"VariableDeclaration","scope":1710,"src":"10472:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:8"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"10504:0:8"},"scope":1711,"src":"10415:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1712,"src":"1106:9788:8","usedErrors":[1071,1076,1081,1090,1095,1100],"usedEvents":[1723,1732]}],"src":"105:10790:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1789]},"id":1790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1713,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"132:71:9","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1789,"linearizedBaseContracts":[1789],"name":"IERC20","nameLocation":"214:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"227:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1723,"name":"Transfer","nameLocation":"396:8:9","nodeType":"EventDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:9","nodeType":"VariableDeclaration","scope":1723,"src":"405:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:9","nodeType":"VariableDeclaration","scope":1723,"src":"427:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:9","nodeType":"VariableDeclaration","scope":1723,"src":"447:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:9"},"src":"390:72:9"},{"anonymous":false,"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"468:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1732,"name":"Approval","nameLocation":"627:8:9","nodeType":"EventDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:9","nodeType":"VariableDeclaration","scope":1732,"src":"636:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:9","nodeType":"VariableDeclaration","scope":1732,"src":"659:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:9","nodeType":"VariableDeclaration","scope":1732,"src":"684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:9"},"src":"621:78:9"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"705:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1738,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:9","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"795:2:9"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1738,"src":"821:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:9"},"scope":1789,"src":"775:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"836:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1746,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:9","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"account","nameLocation":"939:7:9","nodeType":"VariableDeclaration","scope":1746,"src":"931:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:9"},"returnParameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"971:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:9"},"scope":1789,"src":"912:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"986:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:9","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"to","nameLocation":"1230:2:9","nodeType":"VariableDeclaration","scope":1756,"src":"1222:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"value","nameLocation":"1242:5:9","nodeType":"VariableDeclaration","scope":1756,"src":"1234:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:9"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"1267:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:9"},"scope":1789,"src":"1204:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"1279:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1766,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:9","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"owner","nameLocation":"1575:5:9","nodeType":"VariableDeclaration","scope":1766,"src":"1567:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"spender","nameLocation":"1590:7:9","nodeType":"VariableDeclaration","scope":1766,"src":"1582:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:9"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"1622:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:9"},"scope":1789,"src":"1548:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"1637:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1776,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:9","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"spender","nameLocation":"2334:7:9","nodeType":"VariableDeclaration","scope":1776,"src":"2326:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"value","nameLocation":"2351:5:9","nodeType":"VariableDeclaration","scope":1776,"src":"2343:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:9"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"2376:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:9"},"scope":1789,"src":"2309:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"2388:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:9","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"from","nameLocation":"2720:4:9","nodeType":"VariableDeclaration","scope":1788,"src":"2712:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"to","nameLocation":"2734:2:9","nodeType":"VariableDeclaration","scope":1788,"src":"2726:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"value","nameLocation":"2746:5:9","nodeType":"VariableDeclaration","scope":1788,"src":"2738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"2771:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:9"},"scope":1789,"src":"2690:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1790,"src":"204:2575:9","usedErrors":[],"usedEvents":[1723,1732]}],"src":"106:2674:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2247],"ERC20":[1711],"ERC20Burnable":[1835]},"id":1836,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1791,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1836,"sourceUnit":1712,"src":"150:35:10","symbolAliases":[{"foreign":{"id":1792,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"158:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1836,"sourceUnit":2248,"src":"186:51:10","symbolAliases":[{"foreign":{"id":1794,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"194:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1797,"name":"Context","nameLocations":["483:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"483:7:10"},"id":1798,"nodeType":"InheritanceSpecifier","src":"483:7:10"},{"baseName":{"id":1799,"name":"ERC20","nameLocations":["492:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"492:5:10"},"id":1800,"nodeType":"InheritanceSpecifier","src":"492:5:10"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"239:208:10","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,1711,1101,2181,1789,2247],"name":"ERC20Burnable","nameLocation":"466:13:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1812,"nodeType":"Block","src":"662:43:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1807,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"678:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"692:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1806,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1811,"nodeType":"ExpressionStatement","src":"672:26:10"}]},"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"504:109:10","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:10","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"value","nameLocation":"640:5:10","nodeType":"VariableDeclaration","scope":1813,"src":"632:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:10"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[],"src":"662:0:10"},"scope":1835,"src":"618:87:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"1086:93:10","statements":[{"expression":{"arguments":[{"id":1822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"1112:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1823,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"1121:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1135:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1821,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1096:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"1096:45:10"},{"expression":{"arguments":[{"id":1829,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"1157:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1166:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1828,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1151:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"1151:21:10"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"711:305:10","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:10","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"account","nameLocation":"1047:7:10","nodeType":"VariableDeclaration","scope":1834,"src":"1039:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"value","nameLocation":"1064:5:10","nodeType":"VariableDeclaration","scope":1834,"src":"1056:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:10"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"1086:0:10"},"scope":1835,"src":"1021:158:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1836,"src":"448:733:10","usedErrors":[1071,1076,1081,1090,1095,1100],"usedEvents":[1723,1732]}],"src":"124:1058:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1711],"ERC20Pausable":[1869],"Pausable":[2484]},"id":1870,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1837,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1870,"sourceUnit":1712,"src":"150:35:11","symbolAliases":[{"foreign":{"id":1838,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"158:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1870,"sourceUnit":2485,"src":"186:53:11","symbolAliases":[{"foreign":{"id":1840,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"194:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1843,"name":"ERC20","nameLocations":["965:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"965:5:11"},"id":1844,"nodeType":"InheritanceSpecifier","src":"965:5:11"},{"baseName":{"id":1845,"name":"Pausable","nameLocations":["972:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2484,"src":"972:8:11"},"id":1846,"nodeType":"InheritanceSpecifier","src":"972:8:11"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"241:688:11","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1869,"linearizedBaseContracts":[1869,2484,1711,1101,2181,1789,2247],"name":"ERC20Pausable","nameLocation":"948:13:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1518],"body":{"id":1867,"nodeType":"Block","src":"1211:47:11","statements":[{"expression":{"arguments":[{"id":1862,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"1235:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"1241:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1245:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1859,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1869_$","typeString":"type(contract super ERC20Pausable)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:11","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"1221:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"1221:30:11"}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"987:121:11","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1868,"implemented":true,"kind":"function","modifiers":[{"id":1857,"kind":"modifierInvocation","modifierName":{"id":1856,"name":"whenNotPaused","nameLocations":["1197:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2409,"src":"1197:13:11"},"nodeType":"ModifierInvocation","src":"1197:13:11"}],"name":"_update","nameLocation":"1122:7:11","nodeType":"FunctionDefinition","overrides":{"id":1855,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:11"},"parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"from","nameLocation":"1138:4:11","nodeType":"VariableDeclaration","scope":1868,"src":"1130:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"to","nameLocation":"1152:2:11","nodeType":"VariableDeclaration","scope":1868,"src":"1144:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"value","nameLocation":"1164:5:11","nodeType":"VariableDeclaration","scope":1868,"src":"1156:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:11"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"1211:0:11"},"scope":1869,"src":"1113:145:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1870,"src":"930:330:11","usedErrors":[1071,1076,1081,1090,1095,1100,2389,2392],"usedEvents":[1723,1732,2381,2386]}],"src":"124:1137:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3493],"EIP712":[3720],"ERC20":[1711],"ERC20Permit":[2023],"IERC20Permit":[2217],"Nonces":[2315]},"id":2024,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1871,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":2218,"src":"148:48:12","symbolAliases":[{"foreign":{"id":1872,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"156:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":1712,"src":"197:35:12","symbolAliases":[{"foreign":{"id":1874,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"205:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":3494,"src":"233:60:12","symbolAliases":[{"foreign":{"id":1876,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"241:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":3721,"src":"294:62:12","symbolAliases":[{"foreign":{"id":1878,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"302:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2024,"sourceUnit":2316,"src":"357:49:12","symbolAliases":[{"foreign":{"id":1880,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"365:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1883,"name":"ERC20","nameLocations":["931:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"931:5:12"},"id":1884,"nodeType":"InheritanceSpecifier","src":"931:5:12"},{"baseName":{"id":1885,"name":"IERC20Permit","nameLocations":["938:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2217,"src":"938:12:12"},"id":1886,"nodeType":"InheritanceSpecifier","src":"938:12:12"},{"baseName":{"id":1887,"name":"EIP712","nameLocations":["952:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":3720,"src":"952:6:12"},"id":1888,"nodeType":"InheritanceSpecifier","src":"952:6:12"},{"baseName":{"id":1889,"name":"Nonces","nameLocations":["960:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"960:6:12"},"id":1890,"nodeType":"InheritanceSpecifier","src":"960:6:12"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"408:489:12","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2023,"linearizedBaseContracts":[2023,2315,3720,1033,2217,1711,1101,2181,1789,2247],"name":"ERC20Permit","nameLocation":"916:11:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1895,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:12","nodeType":"VariableDeclaration","scope":2023,"src":"973:146:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1892,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"1126:52:12","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1900,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:12","nodeType":"ErrorDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:12","nodeType":"VariableDeclaration","scope":1900,"src":"1213:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:12"},"src":"1183:48:12"},{"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"1237:45:12","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1907,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:12","nodeType":"ErrorDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"signer","nameLocation":"1322:6:12","nodeType":"VariableDeclaration","scope":1907,"src":"1314:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"owner","nameLocation":"1338:5:12","nodeType":"VariableDeclaration","scope":1907,"src":"1330:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:12"},"src":"1287:58:12"},{"body":{"id":1917,"nodeType":"Block","src":"1627:2:12","statements":[]},"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"1351:221:12","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1918,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1913,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1616:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1915,"kind":"baseConstructorSpecifier","modifierName":{"id":1912,"name":"EIP712","nameLocations":["1609:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":3720,"src":"1609:6:12"},"nodeType":"ModifierInvocation","src":"1609:17:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"name","nameLocation":"1603:4:12","nodeType":"VariableDeclaration","scope":1918,"src":"1589:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1909,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:12"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"1627:0:12"},"scope":2023,"src":"1577:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2202],"body":{"id":1994,"nodeType":"Block","src":"1872:483:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1936,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1938,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1904:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1945,"nodeType":"IfStatement","src":"1882:97:12","trueBody":{"id":1944,"nodeType":"Block","src":"1914:65:12","statements":[{"errorCall":{"arguments":[{"id":1941,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1959:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1935:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"RevertStatement","src":"1928:40:12"}]}},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:12","nodeType":"VariableDeclaration","scope":1994,"src":"1989:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[{"arguments":[{"id":1951,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"2031:15:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1952,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2048:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"2055:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2064:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1956,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2081:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1955,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2071:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1958,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"2089:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1949,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:12","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:12"},{"assignments":[1963],"declarations":[{"constant":false,"id":1963,"mutability":"mutable","name":"hash","nameLocation":"2118:4:12","nodeType":"VariableDeclaration","scope":1994,"src":"2110:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1967,"initialValue":{"arguments":[{"id":1965,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"2142:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1964,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"2125:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:12"},{"assignments":[1969],"declarations":[{"constant":false,"id":1969,"mutability":"mutable","name":"signer","nameLocation":"2172:6:12","nodeType":"VariableDeclaration","scope":1994,"src":"2164:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1972,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2195:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1973,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2201:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1974,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2204:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1975,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2207:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1970,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"2181:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3493_$","typeString":"type(library ECDSA)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:12","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"2181:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2223:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1979,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2233:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1987,"nodeType":"IfStatement","src":"2219:88:12","trueBody":{"id":1986,"nodeType":"Block","src":"2240:67:12","statements":[{"errorCall":{"arguments":[{"id":1982,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2282:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1983,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2290:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1981,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2261:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"RevertStatement","src":"2254:42:12"}]}},{"expression":{"arguments":[{"id":1989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2326:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1990,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"2333:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1602,"src":"2317:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1993,"nodeType":"ExpressionStatement","src":"2317:31:12"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"1635:43:12","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:12","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"owner","nameLocation":"1716:5:12","nodeType":"VariableDeclaration","scope":1995,"src":"1708:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"spender","nameLocation":"1739:7:12","nodeType":"VariableDeclaration","scope":1995,"src":"1731:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"1764:5:12","nodeType":"VariableDeclaration","scope":1995,"src":"1756:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:12","nodeType":"VariableDeclaration","scope":1995,"src":"1779:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"v","nameLocation":"1811:1:12","nodeType":"VariableDeclaration","scope":1995,"src":"1805:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1928,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"r","nameLocation":"1830:1:12","nodeType":"VariableDeclaration","scope":1995,"src":"1822:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"s","nameLocation":"1849:1:12","nodeType":"VariableDeclaration","scope":1995,"src":"1841:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:12"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"1872:0:12"},"scope":2023,"src":"1683:672:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2210,2274],"body":{"id":2011,"nodeType":"Block","src":"2509:43:12","statements":[{"expression":{"arguments":[{"id":2008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2539:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2006,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2023_$","typeString":"type(contract super ERC20Permit)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:12","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2274,"src":"2526:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2005,"id":2010,"nodeType":"Return","src":"2519:26:12"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"2361:43:12","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2012,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:12","nodeType":"FunctionDefinition","overrides":{"id":2002,"nodeType":"OverrideSpecifier","overrides":[{"id":2000,"name":"IERC20Permit","nameLocations":["2469:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2217,"src":"2469:12:12"},{"id":2001,"name":"Nonces","nameLocations":["2483:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"2483:6:12"}],"src":"2460:30:12"},"parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"owner","nameLocation":"2433:5:12","nodeType":"VariableDeclaration","scope":2012,"src":"2425:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:12"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2012,"src":"2500:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:12"},"scope":2023,"src":"2409:143:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2216],"body":{"id":2021,"nodeType":"Block","src":"2727:44:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2018,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"2744:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2017,"id":2020,"nodeType":"Return","src":"2737:27:12"}]},"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"2558:43:12","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:12","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"2684:2:12"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"2718:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:12"},"scope":2023,"src":"2659:112:12","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2024,"src":"898:1875:12","usedErrors":[1071,1076,1081,1090,1095,1100,1900,1907,2257,2498,2500,3156,3161,3166],"usedEvents":[1013,1723,1732]}],"src":"122:2652:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[8926],"ERC20":[1711],"ERC20Votes":[2155],"Votes":[1008]},"id":2156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2025,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2156,"sourceUnit":1712,"src":"147:35:13","symbolAliases":[{"foreign":{"id":2026,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"155:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":2029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2156,"sourceUnit":1009,"src":"183:58:13","symbolAliases":[{"foreign":{"id":2028,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"191:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":2031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2156,"sourceUnit":8927,"src":"242:67:13","symbolAliases":[{"foreign":{"id":2030,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8926,"src":"250:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2033,"name":"ERC20","nameLocations":["1226:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1226:5:13"},"id":2034,"nodeType":"InheritanceSpecifier","src":"1226:5:13"},{"baseName":{"id":2035,"name":"Votes","nameLocations":["1233:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1008,"src":"1233:5:13"},"id":2036,"nodeType":"InheritanceSpecifier","src":"1233:5:13"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"311:882:13","text":" @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2155,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[2155,1008,1044,461,1059,2315,3720,1033,1711,1101,2181,1789,2247],"name":"ERC20Votes","nameLocation":"1212:10:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"1245:100:13","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":2043,"name":"ERC20ExceededSafeSupply","nameLocation":"1356:23:13","nodeType":"ErrorDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"increasedSupply","nameLocation":"1388:15:13","nodeType":"VariableDeclaration","scope":2043,"src":"1380:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"cap","nameLocation":"1413:3:13","nodeType":"VariableDeclaration","scope":2043,"src":"1405:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:38:13"},"src":"1350:68:13"},{"body":{"id":2055,"nodeType":"Block","src":"2175:41:13","statements":[{"expression":{"expression":{"arguments":[{"id":2051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2050,"name":"uint208","nodeType":"ElementaryTypeName","src":"2197:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2192:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2206:3:13","memberName":"max","nodeType":"MemberAccess","src":"2192:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2048,"id":2054,"nodeType":"Return","src":"2185:24:13"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1424:684:13","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2122:10:13","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[],"src":"2132:2:13"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"2166:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:13"},"scope":2155,"src":"2113:103:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1518],"body":{"id":2109,"nodeType":"Block","src":"2440:329:13","statements":[{"expression":{"arguments":[{"id":2070,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2464:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2470:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2474:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2067,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2450:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2155_$","typeString":"type(contract super ERC20Votes)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:13","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"2450:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"ExpressionStatement","src":"2450:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2494:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:13","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"2490:226:13","trueBody":{"id":2101,"nodeType":"Block","src":"2514:202:13","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"supply","nameLocation":"2536:6:13","nodeType":"VariableDeclaration","scope":2101,"src":"2528:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2085,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2083,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2545:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2528:30:13"},{"assignments":[2087],"declarations":[{"constant":false,"id":2087,"mutability":"mutable","name":"cap","nameLocation":"2580:3:13","nodeType":"VariableDeclaration","scope":2101,"src":"2572:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2090,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2088,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2586:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"2616:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2092,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2625:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"2612:94:13","trueBody":{"id":2099,"nodeType":"Block","src":"2630:76:13","statements":[{"errorCall":{"arguments":[{"id":2095,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"2679:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2096,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2687:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2094,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2655:23:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"RevertStatement","src":"2648:43:13"}]}}]}},{"expression":{"arguments":[{"id":2104,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2746:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"2752:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2756:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"2725:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"ExpressionStatement","src":"2725:37:13"}]},"documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"2222:129:13","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2365:7:13","nodeType":"FunctionDefinition","overrides":{"id":2065,"nodeType":"OverrideSpecifier","overrides":[],"src":"2431:8:13"},"parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"from","nameLocation":"2381:4:13","nodeType":"VariableDeclaration","scope":2110,"src":"2373:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"to","nameLocation":"2395:2:13","nodeType":"VariableDeclaration","scope":2110,"src":"2387:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"value","nameLocation":"2407:5:13","nodeType":"VariableDeclaration","scope":2110,"src":"2399:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:41:13"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[],"src":"2440:0:13"},"scope":2155,"src":"2356:413:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1007],"body":{"id":2123,"nodeType":"Block","src":"3120:42:13","statements":[{"expression":{"arguments":[{"id":2120,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3147:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2119,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3137:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2118,"id":2122,"nodeType":"Return","src":"3130:25:13"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"2775:249:13","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3038:15:13","nodeType":"FunctionDefinition","overrides":{"id":2115,"nodeType":"OverrideSpecifier","overrides":[],"src":"3093:8:13"},"parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"account","nameLocation":"3062:7:13","nodeType":"VariableDeclaration","scope":2124,"src":"3054:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3053:17:13"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"3111:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:9:13"},"scope":2155,"src":"3029:133:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"3315:48:13","statements":[{"expression":{"arguments":[{"id":2133,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3348:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2132,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3332:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2131,"id":2135,"nodeType":"Return","src":"3325:31:13"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"3168:64:13","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3246:14:13","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"account","nameLocation":"3269:7:13","nodeType":"VariableDeclaration","scope":2137,"src":"3261:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3260:17:13"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"3307:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2129,"name":"uint32","nodeType":"ElementaryTypeName","src":"3307:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3306:8:13"},"scope":2155,"src":"3237:126:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2153,"nodeType":"Block","src":"3553:50:13","statements":[{"expression":{"arguments":[{"id":2149,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3583:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2150,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"3592:3:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2148,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3570:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$7887_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2147,"id":2152,"nodeType":"Return","src":"3563:33:13"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"3369:66:13","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3449:11:13","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"account","nameLocation":"3469:7:13","nodeType":"VariableDeclaration","scope":2154,"src":"3461:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"pos","nameLocation":"3485:3:13","nodeType":"VariableDeclaration","scope":2154,"src":"3478:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2141,"name":"uint32","nodeType":"ElementaryTypeName","src":"3478:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3460:29:13"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"3519:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"Checkpoints.Checkpoint208","nameLocations":["3519:11:13","3531:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"3519:25:13"},"referencedDeclaration":7887,"src":"3519:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3518:34:13"},"scope":2155,"src":"3440:163:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2156,"src":"1194:2411:13","usedErrors":[386,512,519,1071,1076,1081,1090,1095,1100,2043,2257,2498,2500,3156,3161,3166,5446,7353],"usedEvents":[395,404,1013,1723,1732]}],"src":"121:3485:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1789],"IERC20Metadata":[2181]},"id":2182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":1790,"src":"151:37:14","symbolAliases":[{"foreign":{"id":2158,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"159:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2161,"name":"IERC20","nameLocations":["306:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1789,"src":"306:6:14"},"id":2162,"nodeType":"InheritanceSpecifier","src":"306:6:14"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"190:87:14","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2181,"linearizedBaseContracts":[2181,1789],"name":"IERC20Metadata","nameLocation":"288:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"319:54:14","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2168,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:14","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[],"src":"391:2:14"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"417:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:14"},"scope":2181,"src":"378:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"438:56:14","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2174,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:14","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"514:2:14"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2174,"src":"540:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2171,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:14"},"scope":2181,"src":"499:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"561:65:14","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2180,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[],"src":"648:2:14"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"674:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2177,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:14"},"scope":2181,"src":"631:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2182,"src":"278:405:14","usedErrors":[],"usedEvents":[1723,1732]}],"src":"125:559:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"149:1965:15","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2217,"linearizedBaseContracts":[2217],"name":"IERC20Permit","nameLocation":"2125:12:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"2144:850:15","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2202,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:15","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"owner","nameLocation":"3032:5:15","nodeType":"VariableDeclaration","scope":2202,"src":"3024:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"spender","nameLocation":"3055:7:15","nodeType":"VariableDeclaration","scope":2202,"src":"3047:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"value","nameLocation":"3080:5:15","nodeType":"VariableDeclaration","scope":2202,"src":"3072:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:15","nodeType":"VariableDeclaration","scope":2202,"src":"3095:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"v","nameLocation":"3127:1:15","nodeType":"VariableDeclaration","scope":2202,"src":"3121:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2194,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"r","nameLocation":"3146:1:15","nodeType":"VariableDeclaration","scope":2202,"src":"3138:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"s","nameLocation":"3165:1:15","nodeType":"VariableDeclaration","scope":2202,"src":"3157:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:15"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"3181:0:15"},"scope":2217,"src":"2999:183:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2203,"nodeType":"StructuredDocumentation","src":"3188:294:15","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2210,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:15","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"owner","nameLocation":"3511:5:15","nodeType":"VariableDeclaration","scope":2210,"src":"3503:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:15"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"3541:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:15"},"scope":2217,"src":"3487:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"3556:128:15","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2216,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:15","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[],"src":"3767:2:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"3793:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:15"},"scope":2217,"src":"3742:60:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2218,"src":"2115:1689:15","usedErrors":[],"usedEvents":[]}],"src":"123:3682:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2247]},"id":2248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2247,"linearizedBaseContracts":[2247],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2228,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":2225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2224,"id":2227,"nodeType":"Return","src":"728:17:16"}]},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2229,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":2247,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":2234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2233,"id":2236,"nodeType":"Return","src":"835:15:16"}]},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":2247,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2245,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2242,"id":2244,"nodeType":"Return","src":"945:8:16"}]},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2246,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":2247,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2248,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2315]},"id":2316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"125:83:17","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2315,"linearizedBaseContracts":[2315],"name":"Nonces","nameLocation":"227:6:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"240:90:17","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2257,"name":"InvalidAccountNonce","nameLocation":"341:19:17","nodeType":"ErrorDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"account","nameLocation":"369:7:17","nodeType":"VariableDeclaration","scope":2257,"src":"361:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:17","nodeType":"VariableDeclaration","scope":2257,"src":"378:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:17"},"src":"335:65:17"},{"constant":false,"id":2261,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:17","nodeType":"VariableDeclaration","scope":2315,"src":"406:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2260,"keyName":"account","keyNameLocation":"422:7:17","keyType":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2273,"nodeType":"Block","src":"607:38:17","statements":[{"expression":{"baseExpression":{"id":2269,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"624:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2271,"indexExpression":{"id":2270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"632:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2268,"id":2272,"nodeType":"Return","src":"617:21:17"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"464:69:17","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:17","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"owner","nameLocation":"562:5:17","nodeType":"VariableDeclaration","scope":2274,"src":"554:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:17"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"598:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:17"},"scope":2315,"src":"538:107:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2288,"nodeType":"Block","src":"828:326:17","statements":[{"id":2287,"nodeType":"UncheckedBlock","src":"1031:117:17","statements":[{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:17","subExpression":{"baseExpression":{"id":2282,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"1121:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2284,"indexExpression":{"id":2283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"1129:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2281,"id":2286,"nodeType":"Return","src":"1114:23:17"}]}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"651:103:17","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:17","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"owner","nameLocation":"786:5:17","nodeType":"VariableDeclaration","scope":2289,"src":"778:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:17"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"819:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:17"},"scope":2315,"src":"759:395:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"1338:149:17","statements":[{"assignments":[2298],"declarations":[{"constant":false,"id":2298,"mutability":"mutable","name":"current","nameLocation":"1356:7:17","nodeType":"VariableDeclaration","scope":2313,"src":"1348:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2302,"initialValue":{"arguments":[{"id":2300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"1376:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2299,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1366:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1396:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2304,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2312,"nodeType":"IfStatement","src":"1392:89:17","trueBody":{"id":2311,"nodeType":"Block","src":"1414:67:17","statements":[{"errorCall":{"arguments":[{"id":2307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2308,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2306,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1435:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"RevertStatement","src":"1428:42:17"}]}}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"1160:100:17","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:17","nodeType":"FunctionDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"owner","nameLocation":"1299:5:17","nodeType":"VariableDeclaration","scope":2314,"src":"1291:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:17","nodeType":"VariableDeclaration","scope":2314,"src":"1306:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:17"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[],"src":"1338:0:17"},"scope":2315,"src":"1265:222:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2316,"src":"209:1280:17","usedErrors":[2257],"usedEvents":[]}],"src":"99:1391:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2367]},"id":2368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2367,"linearizedBaseContracts":[2367],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":2322,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":2367,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":2326,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":2367,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":2330,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":2367,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":2334,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":2367,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":2338,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":2367,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":2342,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":2367,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":2346,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":2367,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":2350,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":2367,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":2354,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":2367,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":2358,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":2367,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nativeSrc":"1854:110:18","nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:18","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:18","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:18","nodeType":"YulIdentifier","src":"1868:6:18"},"nativeSrc":"1868:24:18","nodeType":"YulFunctionCall","src":"1868:24:18"},"nativeSrc":"1868:24:18","nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:18","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:18","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:18","nodeType":"YulIdentifier","src":"1905:6:18"},"nativeSrc":"1905:18:18","nodeType":"YulFunctionCall","src":"1905:18:18"},"nativeSrc":"1905:18:18","nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:18","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:18","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:18","nodeType":"YulIdentifier","src":"1936:6:18"},"nativeSrc":"1936:18:18","nodeType":"YulFunctionCall","src":"1936:18:18"},"nativeSrc":"1936:18:18","nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2361,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":2364,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":2366,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":2367,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2368,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2247],"Pausable":[2484]},"id":2485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2485,"sourceUnit":2248,"src":"128:45:19","symbolAliases":[{"foreign":{"id":2370,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"136:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2373,"name":"Context","nameLocations":["645:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"645:7:19"},"id":2374,"nodeType":"InheritanceSpecifier","src":"645:7:19"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"175:439:19","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2484,"linearizedBaseContracts":[2484,2247],"name":"Pausable","nameLocation":"633:8:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2376,"mutability":"mutable","name":"_paused","nameLocation":"672:7:19","nodeType":"VariableDeclaration","scope":2484,"src":"659:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2375,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"686:73:19","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2381,"name":"Paused","nameLocation":"770:6:19","nodeType":"EventDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:19","nodeType":"VariableDeclaration","scope":2381,"src":"777:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:19"},"src":"764:30:19"},{"anonymous":false,"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"800:70:19","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2386,"name":"Unpaused","nameLocation":"881:8:19","nodeType":"EventDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:19","nodeType":"VariableDeclaration","scope":2386,"src":"890:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:19"},"src":"875:32:19"},{"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"913:76:19","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2389,"name":"EnforcedPause","nameLocation":"1000:13:19","nodeType":"ErrorDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"1013:2:19"},"src":"994:22:19"},{"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"1022:80:19","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2392,"name":"ExpectedPause","nameLocation":"1113:13:19","nodeType":"ErrorDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"1126:2:19"},"src":"1107:22:19"},{"body":{"id":2400,"nodeType":"Block","src":"1221:32:19","statements":[{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2396,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"1231:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2399,"nodeType":"ExpressionStatement","src":"1231:15:19"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"1135:67:19","text":" @dev Initializes the contract in unpaused state."},"id":2401,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[],"src":"1218:2:19"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"1221:0:19"},"scope":2484,"src":"1207:46:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"1464:47:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2404,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"1474:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"ExpressionStatement","src":"1474:19:19"},{"id":2407,"nodeType":"PlaceholderStatement","src":"1503:1:19"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"1259:175:19","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2409,"name":"whenNotPaused","nameLocation":"1448:13:19","nodeType":"ModifierDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"1461:2:19"},"src":"1439:72:19","virtual":false,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"1711:44:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2412,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"1721:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2414,"nodeType":"ExpressionStatement","src":"1721:16:19"},{"id":2415,"nodeType":"PlaceholderStatement","src":"1747:1:19"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"1517:167:19","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2417,"name":"whenPaused","nameLocation":"1698:10:19","nodeType":"ModifierDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[],"src":"1708:2:19"},"src":"1689:66:19","virtual":false,"visibility":"internal"},{"body":{"id":2425,"nodeType":"Block","src":"1903:31:19","statements":[{"expression":{"id":2423,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"1920:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2422,"id":2424,"nodeType":"Return","src":"1913:14:19"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"1761:84:19","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:19","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[],"src":"1865:2:19"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"1897:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:19"},"scope":2484,"src":"1850:84:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2437,"nodeType":"Block","src":"2053:77:19","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2430,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2067:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"nodeType":"IfStatement","src":"2063:61:19","trueBody":{"id":2435,"nodeType":"Block","src":"2077:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2432,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"2098:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"RevertStatement","src":"2091:22:19"}]}}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1940:57:19","text":" @dev Throws if the contract is paused."},"id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:19","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[],"src":"2028:2:19"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[],"src":"2053:0:19"},"scope":2484,"src":"2002:128:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"2250:78:19","statements":[{"condition":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:19","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2442,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2265:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"IfStatement","src":"2260:62:19","trueBody":{"id":2448,"nodeType":"Block","src":"2275:47:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2445,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2296:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"RevertStatement","src":"2289:22:19"}]}}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"2136:61:19","text":" @dev Throws if the contract is not paused."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:19","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"2225:2:19"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"2250:0:19"},"scope":2484,"src":"2202:126:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"2512:66:19","statements":[{"expression":{"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2457,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2522:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2460,"nodeType":"ExpressionStatement","src":"2522:14:19"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"2558:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2461,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"2551:6:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2465,"nodeType":"EmitStatement","src":"2546:25:19"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"2334:124:19","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2467,"implemented":true,"kind":"function","modifiers":[{"id":2455,"kind":"modifierInvocation","modifierName":{"id":2454,"name":"whenNotPaused","nameLocations":["2498:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":2409,"src":"2498:13:19"},"nodeType":"ModifierInvocation","src":"2498:13:19"}],"name":"_pause","nameLocation":"2472:6:19","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[],"src":"2478:2:19"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"2512:0:19"},"scope":2484,"src":"2463:115:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"2758:69:19","statements":[{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2473,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2768:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"ExpressionStatement","src":"2768:15:19"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2478,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"2807:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2477,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"2798:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"EmitStatement","src":"2793:27:19"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"2584:121:19","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2483,"implemented":true,"kind":"function","modifiers":[{"id":2471,"kind":"modifierInvocation","modifierName":{"id":2470,"name":"whenPaused","nameLocations":["2747:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":2417,"src":"2747:10:19"},"nodeType":"ModifierInvocation","src":"2747:10:19"}],"name":"_unpause","nameLocation":"2719:8:19","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[],"src":"2727:2:19"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"2758:0:19"},"scope":2484,"src":"2710:117:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2485,"src":"615:2214:19","usedErrors":[2389,2392],"usedEvents":[2381,2386]}],"src":"102:2728:19"},"id":19},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2490],"ShortStrings":[2701],"StorageSlot":[2825]},"id":2702,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2486,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2702,"sourceUnit":2826,"src":"132:46:20","symbolAliases":[{"foreign":{"id":2487,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"140:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2490,"name":"ShortString","nameLocation":"353:11:20","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:20","underlyingType":{"id":2489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"378:876:20","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2701,"linearizedBaseContracts":[2701],"name":"ShortStrings","nameLocation":"1263:12:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2494,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:20","nodeType":"VariableDeclaration","scope":2701,"src":"1345:111:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2498,"name":"StringTooLong","nameLocation":"1469:13:20","nodeType":"ErrorDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"str","nameLocation":"1490:3:20","nodeType":"VariableDeclaration","scope":2498,"src":"1483:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2495,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:20"},"src":"1463:32:20"},{"errorSelector":"b3512b0c","id":2500,"name":"InvalidShortString","nameLocation":"1506:18:20","nodeType":"ErrorDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"1524:2:20"},"src":"1500:27:20"},{"body":{"id":2543,"nodeType":"Block","src":"1786:208:20","statements":[{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:20","nodeType":"VariableDeclaration","scope":2543,"src":"1796:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2515,"initialValue":{"arguments":[{"id":2513,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1822:3:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2511,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:20","typeDescriptions":{}}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2516,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1840:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:20","memberName":"length","nodeType":"MemberAccess","src":"1840:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:20","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2525,"nodeType":"IfStatement","src":"1836:72:20","trueBody":{"id":2524,"nodeType":"Block","src":"1858:50:20","statements":[{"errorCall":{"arguments":[{"id":2521,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1893:3:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2520,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"1879:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2523,"nodeType":"RevertStatement","src":"1872:25:20"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2534,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1965:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:20","typeDescriptions":{}}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:20","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2537,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1974:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:20","memberName":"length","nodeType":"MemberAccess","src":"1974:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:20","typeDescriptions":{}}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2526,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"1924:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"type(ShortString)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:20","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:20","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"functionReturnParameters":2508,"id":2542,"nodeType":"Return","src":"1917:70:20"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"1533:170:20","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2544,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:20","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"str","nameLocation":"1745:3:20","nodeType":"VariableDeclaration","scope":2544,"src":"1731:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2502,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:20"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2544,"src":"1773:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2506,"nodeType":"UserDefinedTypeName","pathNode":{"id":2505,"name":"ShortString","nameLocations":["1773:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"1773:11:20"},"referencedDeclaration":2490,"src":"1773:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:20"},"scope":2701,"src":"1708:286:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"2152:304:20","statements":[{"assignments":[2554],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"len","nameLocation":"2170:3:20","nodeType":"VariableDeclaration","scope":2569,"src":"2162:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2558,"initialValue":{"arguments":[{"id":2556,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2187:4:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"id":2555,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2176:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:20"},{"assignments":[2560],"declarations":[{"constant":false,"id":2560,"mutability":"mutable","name":"str","nameLocation":"2294:3:20","nodeType":"VariableDeclaration","scope":2569,"src":"2280:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2559,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2565,"initialValue":{"arguments":[{"hexValue":"3332","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2561,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:20"},{"AST":{"nativeSrc":"2349:81:20","nodeType":"YulBlock","src":"2349:81:20","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:20","nodeType":"YulIdentifier","src":"2370:3:20"},{"name":"len","nativeSrc":"2375:3:20","nodeType":"YulIdentifier","src":"2375:3:20"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:20","nodeType":"YulIdentifier","src":"2363:6:20"},"nativeSrc":"2363:16:20","nodeType":"YulFunctionCall","src":"2363:16:20"},"nativeSrc":"2363:16:20","nodeType":"YulExpressionStatement","src":"2363:16:20"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:20","nodeType":"YulIdentifier","src":"2403:3:20"},{"kind":"number","nativeSrc":"2408:4:20","nodeType":"YulLiteral","src":"2408:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:20","nodeType":"YulIdentifier","src":"2399:3:20"},"nativeSrc":"2399:14:20","nodeType":"YulFunctionCall","src":"2399:14:20"},{"name":"sstr","nativeSrc":"2415:4:20","nodeType":"YulIdentifier","src":"2415:4:20"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:20","nodeType":"YulIdentifier","src":"2392:6:20"},"nativeSrc":"2392:28:20","nodeType":"YulFunctionCall","src":"2392:28:20"},"nativeSrc":"2392:28:20","nodeType":"YulExpressionStatement","src":"2392:28:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":2554,"isOffset":false,"isSlot":false,"src":"2375:3:20","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2415:4:20","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"2370:3:20","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"2403:3:20","valueSize":1}],"flags":["memory-safe"],"id":2566,"nodeType":"InlineAssembly","src":"2324:106:20"},{"expression":{"id":2567,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"2446:3:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2552,"id":2568,"nodeType":"Return","src":"2439:10:20"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"2000:73:20","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:20","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:20","nodeType":"VariableDeclaration","scope":2570,"src":"2096:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2547,"nodeType":"UserDefinedTypeName","pathNode":{"id":2546,"name":"ShortString","nameLocations":["2096:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"2096:11:20"},"referencedDeclaration":2490,"src":"2096:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:20"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"2137:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2550,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:20"},"scope":2701,"src":"2078:378:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2601,"nodeType":"Block","src":"2598:175:20","statements":[{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"result","nameLocation":"2616:6:20","nodeType":"VariableDeclaration","scope":2601,"src":"2608:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2590,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2585,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"2652:4:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"expression":{"id":2583,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"2633:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"type(ShortString)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:20","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:20","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:20","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2679:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:20","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"2675:69:20","trueBody":{"id":2597,"nodeType":"Block","src":"2692:52:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2594,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2713:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"RevertStatement","src":"2706:27:20"}]}},{"expression":{"id":2599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2760:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2578,"id":2600,"nodeType":"Return","src":"2753:13:20"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"2462:61:20","text":" @dev Return the length of a `ShortString`."},"id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:20","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:20","nodeType":"VariableDeclaration","scope":2602,"src":"2548:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2573,"nodeType":"UserDefinedTypeName","pathNode":{"id":2572,"name":"ShortString","nameLocations":["2548:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"2548:11:20"},"referencedDeclaration":2490,"src":"2548:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:20"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"2589:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:20"},"scope":2701,"src":"2528:245:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"2996:231:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3016:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2613,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:20","typeDescriptions":{}}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:20","memberName":"length","nodeType":"MemberAccess","src":"3010:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2639,"nodeType":"Block","src":"3094:127:20","statements":[{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2628,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3134:5:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2625,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3108:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2825_$","typeString":"type(library StorageSlot)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:20","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"3108:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2722_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2722_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"3108:38:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3149:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2633,"nodeType":"ExpressionStatement","src":"3108:46:20"},{"expression":{"arguments":[{"id":2636,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3192:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2634,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"3175:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"type(ShortString)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:20","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:20","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"functionReturnParameters":2612,"id":2638,"nodeType":"Return","src":"3168:42:20"}]},"id":2640,"nodeType":"IfStatement","src":"3006:215:20","trueBody":{"id":2624,"nodeType":"Block","src":"3036:52:20","statements":[{"expression":{"arguments":[{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"3071:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2620,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"3057:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"functionReturnParameters":2612,"id":2623,"nodeType":"Return","src":"3050:27:20"}]}}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"2779:103:20","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:20","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"value","nameLocation":"2936:5:20","nodeType":"VariableDeclaration","scope":2642,"src":"2922:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2604,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"store","nameLocation":"2958:5:20","nodeType":"VariableDeclaration","scope":2642,"src":"2943:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:20"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"2983:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2610,"nodeType":"UserDefinedTypeName","pathNode":{"id":2609,"name":"ShortString","nameLocations":["2983:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"2983:11:20"},"referencedDeclaration":2490,"src":"2983:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:20"},"scope":2701,"src":"2887:340:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"3467:158:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"3500:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"expression":{"id":2653,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"3481:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"type(ShortString)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:20","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:20","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2657,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3510:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2666,"nodeType":"Block","src":"3582:37:20","statements":[{"expression":{"id":2664,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3603:5:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2652,"id":2665,"nodeType":"Return","src":"3596:12:20"}]},"id":2667,"nodeType":"IfStatement","src":"3477:142:20","trueBody":{"id":2663,"nodeType":"Block","src":"3529:47:20","statements":[{"expression":{"arguments":[{"id":2660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"3559:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"id":2659,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3550:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2652,"id":2662,"nodeType":"Return","src":"3543:22:20"}]}}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"3233:120:20","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:20","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"value","nameLocation":"3400:5:20","nodeType":"VariableDeclaration","scope":2669,"src":"3388:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2645,"nodeType":"UserDefinedTypeName","pathNode":{"id":2644,"name":"ShortString","nameLocations":["3388:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"3388:11:20"},"referencedDeclaration":2490,"src":"3388:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"store","nameLocation":"3422:5:20","nodeType":"VariableDeclaration","scope":2669,"src":"3407:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2647,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:20"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"3452:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2650,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:20"},"scope":2701,"src":"3358:267:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2699,"nodeType":"Block","src":"4105:174:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4138:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"expression":{"id":2680,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"4119:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"type(ShortString)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:20","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:20","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2684,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"4148:17:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2697,"nodeType":"Block","src":"4222:51:20","statements":[{"expression":{"expression":{"arguments":[{"id":2693,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4249:5:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2691,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:20","typeDescriptions":{}}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:20","memberName":"length","nodeType":"MemberAccess","src":"4243:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2679,"id":2696,"nodeType":"Return","src":"4236:26:20"}]},"id":2698,"nodeType":"IfStatement","src":"4115:158:20","trueBody":{"id":2690,"nodeType":"Block","src":"4167:49:20","statements":[{"expression":{"arguments":[{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4199:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}],"id":2686,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4188:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2490_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2679,"id":2689,"nodeType":"Return","src":"4181:24:20"}]}}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"3631:364:20","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:20","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"value","nameLocation":"4044:5:20","nodeType":"VariableDeclaration","scope":2700,"src":"4032:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":2672,"nodeType":"UserDefinedTypeName","pathNode":{"id":2671,"name":"ShortString","nameLocations":["4032:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"4032:11:20"},"referencedDeclaration":2490,"src":"4032:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"store","nameLocation":"4066:5:20","nodeType":"VariableDeclaration","scope":2700,"src":"4051:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2674,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:20"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"4096:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:20"},"scope":2701,"src":"4000:279:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2702,"src":"1255:3026:20","usedErrors":[2498,2500],"usedEvents":[]}],"src":"106:4176:20"},"id":20},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2825]},"id":2826,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2703,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"219:1187:21","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2825,"linearizedBaseContracts":[2825],"name":"StorageSlot","nameLocation":"1415:11:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2707,"members":[{"constant":false,"id":2706,"mutability":"mutable","name":"value","nameLocation":"1470:5:21","nodeType":"VariableDeclaration","scope":2707,"src":"1462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:21","nodeType":"StructDefinition","scope":2825,"src":"1433:49:21","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2710,"members":[{"constant":false,"id":2709,"mutability":"mutable","name":"value","nameLocation":"1522:5:21","nodeType":"VariableDeclaration","scope":2710,"src":"1517:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2708,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:21","nodeType":"StructDefinition","scope":2825,"src":"1488:46:21","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2713,"members":[{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"1577:5:21","nodeType":"VariableDeclaration","scope":2713,"src":"1569:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:21","nodeType":"StructDefinition","scope":2825,"src":"1540:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2716,"members":[{"constant":false,"id":2715,"mutability":"mutable","name":"value","nameLocation":"1632:5:21","nodeType":"VariableDeclaration","scope":2716,"src":"1624:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:21","nodeType":"StructDefinition","scope":2825,"src":"1595:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2719,"members":[{"constant":false,"id":2718,"mutability":"mutable","name":"value","nameLocation":"1685:5:21","nodeType":"VariableDeclaration","scope":2719,"src":"1678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2717,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:21","nodeType":"StructDefinition","scope":2825,"src":"1650:47:21","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2722,"members":[{"constant":false,"id":2721,"mutability":"mutable","name":"value","nameLocation":"1738:5:21","nodeType":"VariableDeclaration","scope":2722,"src":"1731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:21","nodeType":"StructDefinition","scope":2825,"src":"1703:47:21","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2725,"members":[{"constant":false,"id":2724,"mutability":"mutable","name":"value","nameLocation":"1789:5:21","nodeType":"VariableDeclaration","scope":2725,"src":"1783:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2723,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:21","nodeType":"StructDefinition","scope":2825,"src":"1756:45:21","visibility":"public"},{"body":{"id":2735,"nodeType":"Block","src":"1983:79:21","statements":[{"AST":{"nativeSrc":"2018:38:21","nodeType":"YulBlock","src":"2018:38:21","statements":[{"nativeSrc":"2032:14:21","nodeType":"YulAssignment","src":"2032:14:21","value":{"name":"slot","nativeSrc":"2042:4:21","nodeType":"YulIdentifier","src":"2042:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:21","nodeType":"YulIdentifier","src":"2032:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2732,"isOffset":false,"isSlot":true,"src":"2032:6:21","suffix":"slot","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"2042:4:21","valueSize":1}],"flags":["memory-safe"],"id":2734,"nodeType":"InlineAssembly","src":"1993:63:21"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"1807:87:21","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:21","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"slot","nameLocation":"1931:4:21","nodeType":"VariableDeclaration","scope":2736,"src":"1923:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:21"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"r","nameLocation":"1980:1:21","nodeType":"VariableDeclaration","scope":2736,"src":"1960:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2707_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2731,"nodeType":"UserDefinedTypeName","pathNode":{"id":2730,"name":"AddressSlot","nameLocations":["1960:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2707,"src":"1960:11:21"},"referencedDeclaration":2707,"src":"1960:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2707_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:21"},"scope":2825,"src":"1899:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"2243:79:21","statements":[{"AST":{"nativeSrc":"2278:38:21","nodeType":"YulBlock","src":"2278:38:21","statements":[{"nativeSrc":"2292:14:21","nodeType":"YulAssignment","src":"2292:14:21","value":{"name":"slot","nativeSrc":"2302:4:21","nodeType":"YulIdentifier","src":"2302:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:21","nodeType":"YulIdentifier","src":"2292:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2743,"isOffset":false,"isSlot":true,"src":"2292:6:21","suffix":"slot","valueSize":1},{"declaration":2739,"isOffset":false,"isSlot":false,"src":"2302:4:21","valueSize":1}],"flags":["memory-safe"],"id":2745,"nodeType":"InlineAssembly","src":"2253:63:21"}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"2068:86:21","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:21","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"slot","nameLocation":"2191:4:21","nodeType":"VariableDeclaration","scope":2747,"src":"2183:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:21"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"r","nameLocation":"2240:1:21","nodeType":"VariableDeclaration","scope":2747,"src":"2220:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2710_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"BooleanSlot","nameLocations":["2220:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2710,"src":"2220:11:21"},"referencedDeclaration":2710,"src":"2220:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2710_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:21"},"scope":2825,"src":"2159:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"2503:79:21","statements":[{"AST":{"nativeSrc":"2538:38:21","nodeType":"YulBlock","src":"2538:38:21","statements":[{"nativeSrc":"2552:14:21","nodeType":"YulAssignment","src":"2552:14:21","value":{"name":"slot","nativeSrc":"2562:4:21","nodeType":"YulIdentifier","src":"2562:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:21","nodeType":"YulIdentifier","src":"2552:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2754,"isOffset":false,"isSlot":true,"src":"2552:6:21","suffix":"slot","valueSize":1},{"declaration":2750,"isOffset":false,"isSlot":false,"src":"2562:4:21","valueSize":1}],"flags":["memory-safe"],"id":2756,"nodeType":"InlineAssembly","src":"2513:63:21"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"2328:86:21","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:21","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"slot","nameLocation":"2451:4:21","nodeType":"VariableDeclaration","scope":2758,"src":"2443:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:21"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"r","nameLocation":"2500:1:21","nodeType":"VariableDeclaration","scope":2758,"src":"2480:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2713_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2753,"nodeType":"UserDefinedTypeName","pathNode":{"id":2752,"name":"Bytes32Slot","nameLocations":["2480:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"2480:11:21"},"referencedDeclaration":2713,"src":"2480:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2713_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:21"},"scope":2825,"src":"2419:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"2763:79:21","statements":[{"AST":{"nativeSrc":"2798:38:21","nodeType":"YulBlock","src":"2798:38:21","statements":[{"nativeSrc":"2812:14:21","nodeType":"YulAssignment","src":"2812:14:21","value":{"name":"slot","nativeSrc":"2822:4:21","nodeType":"YulIdentifier","src":"2822:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:21","nodeType":"YulIdentifier","src":"2812:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2765,"isOffset":false,"isSlot":true,"src":"2812:6:21","suffix":"slot","valueSize":1},{"declaration":2761,"isOffset":false,"isSlot":false,"src":"2822:4:21","valueSize":1}],"flags":["memory-safe"],"id":2767,"nodeType":"InlineAssembly","src":"2773:63:21"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"2588:86:21","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:21","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"slot","nameLocation":"2711:4:21","nodeType":"VariableDeclaration","scope":2769,"src":"2703:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:21"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"r","nameLocation":"2760:1:21","nodeType":"VariableDeclaration","scope":2769,"src":"2740:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2716_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2764,"nodeType":"UserDefinedTypeName","pathNode":{"id":2763,"name":"Uint256Slot","nameLocations":["2740:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2716,"src":"2740:11:21"},"referencedDeclaration":2716,"src":"2740:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2716_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:21"},"scope":2825,"src":"2679:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"3020:79:21","statements":[{"AST":{"nativeSrc":"3055:38:21","nodeType":"YulBlock","src":"3055:38:21","statements":[{"nativeSrc":"3069:14:21","nodeType":"YulAssignment","src":"3069:14:21","value":{"name":"slot","nativeSrc":"3079:4:21","nodeType":"YulIdentifier","src":"3079:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:21","nodeType":"YulIdentifier","src":"3069:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2776,"isOffset":false,"isSlot":true,"src":"3069:6:21","suffix":"slot","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3079:4:21","valueSize":1}],"flags":["memory-safe"],"id":2778,"nodeType":"InlineAssembly","src":"3030:63:21"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"2848:85:21","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:21","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"slot","nameLocation":"2969:4:21","nodeType":"VariableDeclaration","scope":2780,"src":"2961:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:21"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"r","nameLocation":"3017:1:21","nodeType":"VariableDeclaration","scope":2780,"src":"2998:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2719_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"Int256Slot","nameLocations":["2998:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"2998:10:21"},"referencedDeclaration":2719,"src":"2998:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2719_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:21"},"scope":2825,"src":"2938:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2790,"nodeType":"Block","src":"3277:79:21","statements":[{"AST":{"nativeSrc":"3312:38:21","nodeType":"YulBlock","src":"3312:38:21","statements":[{"nativeSrc":"3326:14:21","nodeType":"YulAssignment","src":"3326:14:21","value":{"name":"slot","nativeSrc":"3336:4:21","nodeType":"YulIdentifier","src":"3336:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:21","nodeType":"YulIdentifier","src":"3326:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2787,"isOffset":false,"isSlot":true,"src":"3326:6:21","suffix":"slot","valueSize":1},{"declaration":2783,"isOffset":false,"isSlot":false,"src":"3336:4:21","valueSize":1}],"flags":["memory-safe"],"id":2789,"nodeType":"InlineAssembly","src":"3287:63:21"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"3105:85:21","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:21","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"slot","nameLocation":"3226:4:21","nodeType":"VariableDeclaration","scope":2791,"src":"3218:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:21"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"r","nameLocation":"3274:1:21","nodeType":"VariableDeclaration","scope":2791,"src":"3255:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2722_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"StringSlot","nameLocations":["3255:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2722,"src":"3255:10:21"},"referencedDeclaration":2722,"src":"3255:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2722_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:21"},"scope":2825,"src":"3195:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2801,"nodeType":"Block","src":"3558:85:21","statements":[{"AST":{"nativeSrc":"3593:44:21","nodeType":"YulBlock","src":"3593:44:21","statements":[{"nativeSrc":"3607:20:21","nodeType":"YulAssignment","src":"3607:20:21","value":{"name":"store.slot","nativeSrc":"3617:10:21","nodeType":"YulIdentifier","src":"3617:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:21","nodeType":"YulIdentifier","src":"3607:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2798,"isOffset":false,"isSlot":true,"src":"3607:6:21","suffix":"slot","valueSize":1},{"declaration":2794,"isOffset":false,"isSlot":true,"src":"3617:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2800,"nodeType":"InlineAssembly","src":"3568:69:21"}]},"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"3362:101:21","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:21","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"store","nameLocation":"3506:5:21","nodeType":"VariableDeclaration","scope":2802,"src":"3491:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2793,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:21"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"r","nameLocation":"3555:1:21","nodeType":"VariableDeclaration","scope":2802,"src":"3536:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2722_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"StringSlot","nameLocations":["3536:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":2722,"src":"3536:10:21"},"referencedDeclaration":2722,"src":"3536:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2722_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:21"},"scope":2825,"src":"3468:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2812,"nodeType":"Block","src":"3818:79:21","statements":[{"AST":{"nativeSrc":"3853:38:21","nodeType":"YulBlock","src":"3853:38:21","statements":[{"nativeSrc":"3867:14:21","nodeType":"YulAssignment","src":"3867:14:21","value":{"name":"slot","nativeSrc":"3877:4:21","nodeType":"YulIdentifier","src":"3877:4:21"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:21","nodeType":"YulIdentifier","src":"3867:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2809,"isOffset":false,"isSlot":true,"src":"3867:6:21","suffix":"slot","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"3877:4:21","valueSize":1}],"flags":["memory-safe"],"id":2811,"nodeType":"InlineAssembly","src":"3828:63:21"}]},"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"3649:84:21","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:21","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"slot","nameLocation":"3768:4:21","nodeType":"VariableDeclaration","scope":2813,"src":"3760:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:21"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"r","nameLocation":"3815:1:21","nodeType":"VariableDeclaration","scope":2813,"src":"3797:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2725_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2808,"nodeType":"UserDefinedTypeName","pathNode":{"id":2807,"name":"BytesSlot","nameLocations":["3797:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"3797:9:21"},"referencedDeclaration":2725,"src":"3797:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2725_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:21"},"scope":2825,"src":"3738:159:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2823,"nodeType":"Block","src":"4094:85:21","statements":[{"AST":{"nativeSrc":"4129:44:21","nodeType":"YulBlock","src":"4129:44:21","statements":[{"nativeSrc":"4143:20:21","nodeType":"YulAssignment","src":"4143:20:21","value":{"name":"store.slot","nativeSrc":"4153:10:21","nodeType":"YulIdentifier","src":"4153:10:21"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:21","nodeType":"YulIdentifier","src":"4143:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2820,"isOffset":false,"isSlot":true,"src":"4143:6:21","suffix":"slot","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":true,"src":"4153:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2822,"nodeType":"InlineAssembly","src":"4104:69:21"}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"3903:99:21","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:21","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"store","nameLocation":"4043:5:21","nodeType":"VariableDeclaration","scope":2824,"src":"4029:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2815,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:21"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"r","nameLocation":"4091:1:21","nodeType":"VariableDeclaration","scope":2824,"src":"4073:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2725_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2819,"nodeType":"UserDefinedTypeName","pathNode":{"id":2818,"name":"BytesSlot","nameLocations":["4073:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2725,"src":"4073:9:21"},"referencedDeclaration":2725,"src":"4073:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2725_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:21"},"scope":2825,"src":"4007:172:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2826,"src":"1407:2774:21","usedErrors":[],"usedEvents":[]}],"src":"193:3989:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5436],"SignedMath":[7345],"Strings":[3145]},"id":3146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2827,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3146,"sourceUnit":5437,"src":"127:37:22","symbolAliases":[{"foreign":{"id":2828,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"135:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3146,"sourceUnit":7346,"src":"165:49:22","symbolAliases":[{"foreign":{"id":2830,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"173:10:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"216:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":3145,"linearizedBaseContracts":[3145],"name":"Strings","nameLocation":"259:7:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2835,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:22","nodeType":"VariableDeclaration","scope":3145,"src":"273:56:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2833,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2838,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:22","nodeType":"VariableDeclaration","scope":3145,"src":"335:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2836,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"384:81:22","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2845,"name":"StringsInsufficientHexLength","nameLocation":"476:28:22","nodeType":"ErrorDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"value","nameLocation":"513:5:22","nodeType":"VariableDeclaration","scope":2845,"src":"505:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"length","nameLocation":"528:6:22","nodeType":"VariableDeclaration","scope":2845,"src":"520:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:22"},"src":"470:66:22"},{"body":{"id":2892,"nodeType":"Block","src":"708:561:22","statements":[{"id":2891,"nodeType":"UncheckedBlock","src":"718:545:22","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"length","nameLocation":"750:6:22","nodeType":"VariableDeclaration","scope":2891,"src":"742:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2861,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"770:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2855,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"759:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:22","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5208,"src":"759:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:22"},{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"buffer","nameLocation":"808:6:22","nodeType":"VariableDeclaration","scope":2891,"src":"794:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2862,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[{"id":2866,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"828:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2864,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:22"},{"assignments":[2870],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"ptr","nameLocation":"857:3:22","nodeType":"VariableDeclaration","scope":2891,"src":"849:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2871,"nodeType":"VariableDeclarationStatement","src":"849:11:22"},{"AST":{"nativeSrc":"899:67:22","nodeType":"YulBlock","src":"899:67:22","statements":[{"nativeSrc":"917:35:22","nodeType":"YulAssignment","src":"917:35:22","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:22","nodeType":"YulIdentifier","src":"928:6:22"},{"arguments":[{"kind":"number","nativeSrc":"940:2:22","nodeType":"YulLiteral","src":"940:2:22","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:22","nodeType":"YulIdentifier","src":"944:6:22"}],"functionName":{"name":"add","nativeSrc":"936:3:22","nodeType":"YulIdentifier","src":"936:3:22"},"nativeSrc":"936:15:22","nodeType":"YulFunctionCall","src":"936:15:22"}],"functionName":{"name":"add","nativeSrc":"924:3:22","nodeType":"YulIdentifier","src":"924:3:22"},"nativeSrc":"924:28:22","nodeType":"YulFunctionCall","src":"924:28:22"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:22","nodeType":"YulIdentifier","src":"917:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2863,"isOffset":false,"isSlot":false,"src":"928:6:22","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"944:6:22","valueSize":1},{"declaration":2870,"isOffset":false,"isSlot":false,"src":"917:3:22","valueSize":1}],"flags":["memory-safe"],"id":2872,"nodeType":"InlineAssembly","src":"874:92:22"},{"body":{"id":2887,"nodeType":"Block","src":"992:234:22","statements":[{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:22","subExpression":{"id":2874,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1010:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"1010:5:22"},{"AST":{"nativeSrc":"1058:86:22","nodeType":"YulBlock","src":"1058:86:22","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:22","nodeType":"YulIdentifier","src":"1088:3:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:22","nodeType":"YulIdentifier","src":"1102:5:22"},{"kind":"number","nativeSrc":"1109:2:22","nodeType":"YulLiteral","src":"1109:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:22","nodeType":"YulIdentifier","src":"1098:3:22"},"nativeSrc":"1098:14:22","nodeType":"YulFunctionCall","src":"1098:14:22"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:22","nodeType":"YulIdentifier","src":"1114:10:22"}],"functionName":{"name":"byte","nativeSrc":"1093:4:22","nodeType":"YulIdentifier","src":"1093:4:22"},"nativeSrc":"1093:32:22","nodeType":"YulFunctionCall","src":"1093:32:22"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:22","nodeType":"YulIdentifier","src":"1080:7:22"},"nativeSrc":"1080:46:22","nodeType":"YulFunctionCall","src":"1080:46:22"},"nativeSrc":"1080:46:22","nodeType":"YulExpressionStatement","src":"1080:46:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":2835,"isOffset":false,"isSlot":false,"src":"1114:10:22","valueSize":1},{"declaration":2870,"isOffset":false,"isSlot":false,"src":"1088:3:22","valueSize":1},{"declaration":2848,"isOffset":false,"isSlot":false,"src":"1102:5:22","valueSize":1}],"flags":["memory-safe"],"id":2877,"nodeType":"InlineAssembly","src":"1033:111:22"},{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1161:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2881,"nodeType":"ExpressionStatement","src":"1161:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1194:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"1190:21:22","trueBody":{"id":2885,"nodeType":"Break","src":"1206:5:22"}}]},"condition":{"hexValue":"74727565","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2888,"nodeType":"WhileStatement","src":"979:247:22"},{"expression":{"id":2889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"1246:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2852,"id":2890,"nodeType":"Return","src":"1239:13:22"}]}]},"documentation":{"id":2846,"nodeType":"StructuredDocumentation","src":"542:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:22","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"value","nameLocation":"663:5:22","nodeType":"VariableDeclaration","scope":2893,"src":"655:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:22"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"693:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2850,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:22"},"scope":3145,"src":"637:632:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2918,"nodeType":"Block","src":"1445:92:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1476:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:22","trueExpression":{"hexValue":"2d","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1522:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2911,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"1507:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7345_$","typeString":"type(library SignedMath)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:22","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7344,"src":"1507:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1498:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:22","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:22","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:22","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2900,"id":2917,"nodeType":"Return","src":"1455:75:22"}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"1275:89:22","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:22","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"value","nameLocation":"1400:5:22","nodeType":"VariableDeclaration","scope":2919,"src":"1393:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2895,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:22"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"1430:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:22"},"scope":3145,"src":"1369:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"1716:100:22","statements":[{"id":2937,"nodeType":"UncheckedBlock","src":"1726:84:22","statements":[{"expression":{"arguments":[{"id":2928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"1769:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"1788:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2929,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"1776:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:22","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5379,"src":"1776:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2927,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2939,3022,3042],"referencedDeclaration":3022,"src":"1757:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2926,"id":2936,"nodeType":"Return","src":"1750:49:22"}]}]},"documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"1543:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:22","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"value","nameLocation":"1671:5:22","nodeType":"VariableDeclaration","scope":2939,"src":"1663:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:22"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"1701:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2924,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:22"},"scope":3145,"src":"1642:174:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3021,"nodeType":"Block","src":"2029:435:22","statements":[{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:22","nodeType":"VariableDeclaration","scope":3021,"src":"2039:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"initialValue":{"id":2951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"2060:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:22"},{"assignments":[2954],"declarations":[{"constant":false,"id":2954,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:22","nodeType":"VariableDeclaration","scope":3021,"src":"2075:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2953,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2963,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2958,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2111:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2955,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:22"},{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2964,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2132:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2966,"indexExpression":{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2969,"nodeType":"ExpressionStatement","src":"2132:15:22"},{"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2970,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2157:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2972,"indexExpression":{"hexValue":"31","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2975,"nodeType":"ExpressionStatement","src":"2157:15:22"},{"body":{"id":3004,"nodeType":"Block","src":"2227:95:22","statements":[{"expression":{"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2990,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2241:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2992,"indexExpression":{"id":2991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2248:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2993,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2253:10:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2997,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2264:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2999,"nodeType":"ExpressionStatement","src":"2241:40:22"},{"expression":{"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3000,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2295:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3003,"nodeType":"ExpressionStatement","src":"2295:16:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2215:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"initializationExpression":{"assignments":[2977],"declarations":[{"constant":false,"id":2977,"mutability":"mutable","name":"i","nameLocation":"2195:1:22","nodeType":"VariableDeclaration","scope":3005,"src":"2187:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2983,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2979,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2203:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:22","subExpression":{"id":2987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2224:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"2222:3:22"},"nodeType":"ForStatement","src":"2182:140:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2335:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3015,"nodeType":"IfStatement","src":"2331:96:22","trueBody":{"id":3014,"nodeType":"Block","src":"2352:75:22","statements":[{"errorCall":{"arguments":[{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"2402:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3011,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2409:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"2373:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"RevertStatement","src":"2366:50:22"}]}},{"expression":{"arguments":[{"id":3018,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2450:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3016,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:22","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2948,"id":3020,"nodeType":"Return","src":"2436:21:22"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"1822:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3022,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:22","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"value","nameLocation":"1968:5:22","nodeType":"VariableDeclaration","scope":3022,"src":"1960:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"length","nameLocation":"1983:6:22","nodeType":"VariableDeclaration","scope":3022,"src":"1975:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:22"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3022,"src":"2014:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2946,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:22"},"scope":3145,"src":"1939:525:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3041,"nodeType":"Block","src":"2696:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3035,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"2741:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3033,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:22","typeDescriptions":{}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:22","typeDescriptions":{}}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3038,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"2749:14:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3030,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2939,3022,3042],"referencedDeclaration":3022,"src":"2713:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3029,"id":3040,"nodeType":"Return","src":"2706:58:22"}]},"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"2470:148:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:22","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"addr","nameLocation":"2652:4:22","nodeType":"VariableDeclaration","scope":3042,"src":"2644:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:22"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"2681:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3027,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:22"},"scope":3145,"src":"2623:148:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"3028:642:22","statements":[{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:22","nodeType":"VariableDeclaration","scope":3106,"src":"3038:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3058,"initialValue":{"arguments":[{"arguments":[{"id":3055,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"3078:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3054,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2939,3022,3042],"referencedDeclaration":3042,"src":"3066:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:22","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:22"},{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:22","nodeType":"VariableDeclaration","scope":3106,"src":"3169:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"nodeType":"VariableDeclarationStatement","src":"3169:17:22"},{"AST":{"nativeSrc":"3221:78:22","nodeType":"YulBlock","src":"3221:78:22","statements":[{"nativeSrc":"3235:54:22","nodeType":"YulAssignment","src":"3235:54:22","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:22","nodeType":"YulLiteral","src":"3252:2:22","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:22","nodeType":"YulIdentifier","src":"3270:6:22"},{"kind":"number","nativeSrc":"3278:4:22","nodeType":"YulLiteral","src":"3278:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:22","nodeType":"YulIdentifier","src":"3266:3:22"},"nativeSrc":"3266:17:22","nodeType":"YulFunctionCall","src":"3266:17:22"},{"kind":"number","nativeSrc":"3285:2:22","nodeType":"YulLiteral","src":"3285:2:22","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:22","nodeType":"YulIdentifier","src":"3256:9:22"},"nativeSrc":"3256:32:22","nodeType":"YulFunctionCall","src":"3256:32:22"}],"functionName":{"name":"shr","nativeSrc":"3248:3:22","nodeType":"YulIdentifier","src":"3248:3:22"},"nativeSrc":"3248:41:22","nodeType":"YulFunctionCall","src":"3248:41:22"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:22","nodeType":"YulIdentifier","src":"3235:9:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3051,"isOffset":false,"isSlot":false,"src":"3270:6:22","valueSize":1},{"declaration":3060,"isOffset":false,"isSlot":false,"src":"3235:9:22","valueSize":1}],"flags":["memory-safe"],"id":3062,"nodeType":"InlineAssembly","src":"3196:103:22"},{"body":{"id":3099,"nodeType":"Block","src":"3342:291:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3448:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3080,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"3477:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3082,"indexExpression":{"id":3081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3484:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3078,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:22","typeDescriptions":{}}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"3444:150:22","trueBody":{"id":3093,"nodeType":"Block","src":"3494:100:22","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3087,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"3562:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3089,"indexExpression":{"id":3088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3569:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3092,"nodeType":"ExpressionStatement","src":"3562:17:22"}]}},{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3095,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3607:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"3607:15:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3330:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"initializationExpression":{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"i","nameLocation":"3322:1:22","nodeType":"VariableDeclaration","scope":3100,"src":"3314:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3066,"initialValue":{"hexValue":"3431","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:22","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:22"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:22","subExpression":{"id":3070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"3339:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3072,"nodeType":"ExpressionStatement","src":"3337:3:22"},"nodeType":"ForStatement","src":"3309:324:22"},{"expression":{"arguments":[{"id":3103,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"3656:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3101,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:22","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3049,"id":3105,"nodeType":"Return","src":"3642:21:22"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"2777:165:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:22","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"addr","nameLocation":"2984:4:22","nodeType":"VariableDeclaration","scope":3107,"src":"2976:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:22"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"3013:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3047,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:22"},"scope":3145,"src":"2947:723:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3143,"nodeType":"Block","src":"3825:104:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3848:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:22","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:22","memberName":"length","nodeType":"MemberAccess","src":"3842:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"3867:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3122,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:22","typeDescriptions":{}}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:22","memberName":"length","nodeType":"MemberAccess","src":"3861:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"3896:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3129,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:22","typeDescriptions":{}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3128,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"3919:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3135,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:22","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3134,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3116,"id":3142,"nodeType":"Return","src":"3835:87:22"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"3676:66:22","text":" @dev Returns true if the two strings are equal."},"id":3144,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:22","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"a","nameLocation":"3776:1:22","nodeType":"VariableDeclaration","scope":3144,"src":"3762:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3109,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"b","nameLocation":"3793:1:22","nodeType":"VariableDeclaration","scope":3144,"src":"3779:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3111,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:22"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"3819:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:22"},"scope":3145,"src":"3747:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3146,"src":"251:3680:22","usedErrors":[2845],"usedEvents":[]}],"src":"101:3831:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3493]},"id":3494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3147,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"138:205:23","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3493,"linearizedBaseContracts":[3493],"name":"ECDSA","nameLocation":"352:5:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3153,"members":[{"id":3149,"name":"NoError","nameLocation":"392:7:23","nodeType":"EnumValue","src":"392:7:23"},{"id":3150,"name":"InvalidSignature","nameLocation":"409:16:23","nodeType":"EnumValue","src":"409:16:23"},{"id":3151,"name":"InvalidSignatureLength","nameLocation":"435:22:23","nodeType":"EnumValue","src":"435:22:23"},{"id":3152,"name":"InvalidSignatureS","nameLocation":"467:17:23","nodeType":"EnumValue","src":"467:17:23"}],"name":"RecoverError","nameLocation":"369:12:23","nodeType":"EnumDefinition","src":"364:126:23"},{"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"496:63:23","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3156,"name":"ECDSAInvalidSignature","nameLocation":"570:21:23","nodeType":"ErrorDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[],"src":"591:2:23"},"src":"564:30:23"},{"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"600:60:23","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3161,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:23","nodeType":"ErrorDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"length","nameLocation":"707:6:23","nodeType":"VariableDeclaration","scope":3161,"src":"699:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:23"},"src":"665:50:23"},{"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"721:85:23","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3166,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:23","nodeType":"ErrorDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"s","nameLocation":"848:1:23","nodeType":"VariableDeclaration","scope":3166,"src":"840:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:23"},"src":"811:40:23"},{"body":{"id":3218,"nodeType":"Block","src":"2285:622:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3181,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"2299:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:23","memberName":"length","nodeType":"MemberAccess","src":"2299:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3216,"nodeType":"Block","src":"2793:108:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:23","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3207,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2827:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"2827:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3211,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"2872:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:23","memberName":"length","nodeType":"MemberAccess","src":"2872:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:23","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3180,"id":3215,"nodeType":"Return","src":"2807:83:23"}]},"id":3217,"nodeType":"IfStatement","src":"2295:606:23","trueBody":{"id":3202,"nodeType":"Block","src":"2323:464:23","statements":[{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"r","nameLocation":"2345:1:23","nodeType":"VariableDeclaration","scope":3202,"src":"2337:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3187,"nodeType":"VariableDeclarationStatement","src":"2337:9:23"},{"assignments":[3189],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"s","nameLocation":"2368:1:23","nodeType":"VariableDeclaration","scope":3202,"src":"2360:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3190,"nodeType":"VariableDeclarationStatement","src":"2360:9:23"},{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"v","nameLocation":"2389:1:23","nodeType":"VariableDeclaration","scope":3202,"src":"2383:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3191,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3193,"nodeType":"VariableDeclarationStatement","src":"2383:7:23"},{"AST":{"nativeSrc":"2560:171:23","nodeType":"YulBlock","src":"2560:171:23","statements":[{"nativeSrc":"2578:32:23","nodeType":"YulAssignment","src":"2578:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:23","nodeType":"YulIdentifier","src":"2593:9:23"},{"kind":"number","nativeSrc":"2604:4:23","nodeType":"YulLiteral","src":"2604:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:23","nodeType":"YulIdentifier","src":"2589:3:23"},"nativeSrc":"2589:20:23","nodeType":"YulFunctionCall","src":"2589:20:23"}],"functionName":{"name":"mload","nativeSrc":"2583:5:23","nodeType":"YulIdentifier","src":"2583:5:23"},"nativeSrc":"2583:27:23","nodeType":"YulFunctionCall","src":"2583:27:23"},"variableNames":[{"name":"r","nativeSrc":"2578:1:23","nodeType":"YulIdentifier","src":"2578:1:23"}]},{"nativeSrc":"2627:32:23","nodeType":"YulAssignment","src":"2627:32:23","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:23","nodeType":"YulIdentifier","src":"2642:9:23"},{"kind":"number","nativeSrc":"2653:4:23","nodeType":"YulLiteral","src":"2653:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:23","nodeType":"YulIdentifier","src":"2638:3:23"},"nativeSrc":"2638:20:23","nodeType":"YulFunctionCall","src":"2638:20:23"}],"functionName":{"name":"mload","nativeSrc":"2632:5:23","nodeType":"YulIdentifier","src":"2632:5:23"},"nativeSrc":"2632:27:23","nodeType":"YulFunctionCall","src":"2632:27:23"},"variableNames":[{"name":"s","nativeSrc":"2627:1:23","nodeType":"YulIdentifier","src":"2627:1:23"}]},{"nativeSrc":"2676:41:23","nodeType":"YulAssignment","src":"2676:41:23","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:23","nodeType":"YulLiteral","src":"2686:1:23","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:23","nodeType":"YulIdentifier","src":"2699:9:23"},{"kind":"number","nativeSrc":"2710:4:23","nodeType":"YulLiteral","src":"2710:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:23","nodeType":"YulIdentifier","src":"2695:3:23"},"nativeSrc":"2695:20:23","nodeType":"YulFunctionCall","src":"2695:20:23"}],"functionName":{"name":"mload","nativeSrc":"2689:5:23","nodeType":"YulIdentifier","src":"2689:5:23"},"nativeSrc":"2689:27:23","nodeType":"YulFunctionCall","src":"2689:27:23"}],"functionName":{"name":"byte","nativeSrc":"2681:4:23","nodeType":"YulIdentifier","src":"2681:4:23"},"nativeSrc":"2681:36:23","nodeType":"YulFunctionCall","src":"2681:36:23"},"variableNames":[{"name":"v","nativeSrc":"2676:1:23","nodeType":"YulIdentifier","src":"2676:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3186,"isOffset":false,"isSlot":false,"src":"2578:1:23","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"2627:1:23","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"2593:9:23","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"2642:9:23","valueSize":1},{"declaration":3171,"isOffset":false,"isSlot":false,"src":"2699:9:23","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"2676:1:23","valueSize":1}],"flags":["memory-safe"],"id":3194,"nodeType":"InlineAssembly","src":"2535:196:23"},{"expression":{"arguments":[{"id":3196,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"2762:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3197,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"2768:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3198,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2771:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3199,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2774:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3195,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3219,3299,3407],"referencedDeclaration":3407,"src":"2751:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3180,"id":3201,"nodeType":"Return","src":"2744:32:23"}]}}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"857:1267:23","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:23","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"hash","nameLocation":"2166:4:23","nodeType":"VariableDeclaration","scope":3219,"src":"2158:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"signature","nameLocation":"2193:9:23","nodeType":"VariableDeclaration","scope":3219,"src":"2180:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3170,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:23"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:23","nodeType":"VariableDeclaration","scope":3219,"src":"2232:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"err","nameLocation":"2264:3:23","nodeType":"VariableDeclaration","scope":3219,"src":"2251:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3176,"nodeType":"UserDefinedTypeName","pathNode":{"id":3175,"name":"RecoverError","nameLocations":["2251:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"2251:12:23"},"referencedDeclaration":3153,"src":"2251:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:23","nodeType":"VariableDeclaration","scope":3219,"src":"2269:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:23"},"scope":3493,"src":"2129:778:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3248,"nodeType":"Block","src":"3801:168:23","statements":[{"assignments":[3230,3233,3235],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:23","nodeType":"VariableDeclaration","scope":3248,"src":"3812:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"error","nameLocation":"3844:5:23","nodeType":"VariableDeclaration","scope":3248,"src":"3831:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"RecoverError","nameLocations":["3831:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"3831:12:23"},"referencedDeclaration":3153,"src":"3831:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:23","nodeType":"VariableDeclaration","scope":3248,"src":"3851:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3240,"initialValue":{"arguments":[{"id":3237,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3882:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3238,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"3888:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3236,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3219,3299,3407],"referencedDeclaration":3219,"src":"3871:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:23"},{"expression":{"arguments":[{"id":3242,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"3920:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"id":3243,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"3927:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3241,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"3908:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3153_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"3908:28:23"},{"expression":{"id":3246,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"3953:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3228,"id":3247,"nodeType":"Return","src":"3946:16:23"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"2913:796:23","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:23","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"hash","nameLocation":"3739:4:23","nodeType":"VariableDeclaration","scope":3249,"src":"3731:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"signature","nameLocation":"3758:9:23","nodeType":"VariableDeclaration","scope":3249,"src":"3745:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3223,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:23"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"3792:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:23"},"scope":3493,"src":"3714:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3298,"nodeType":"Block","src":"4348:342:23","statements":[{"id":3297,"nodeType":"UncheckedBlock","src":"4358:326:23","statements":[{"assignments":[3267],"declarations":[{"constant":false,"id":3267,"mutability":"mutable","name":"s","nameLocation":"4390:1:23","nodeType":"VariableDeclaration","scope":3297,"src":"4382:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3274,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4394:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:23","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:23"},{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"v","nameLocation":"4591:1:23","nodeType":"VariableDeclaration","scope":3297,"src":"4585:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3275,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3289,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3281,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4610:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:23","typeDescriptions":{}}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:23","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3277,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:23","typeDescriptions":{}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:23"},{"expression":{"arguments":[{"id":3291,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4659:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3292,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4665:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3293,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4668:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3294,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"4671:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3290,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3219,3299,3407],"referencedDeclaration":3407,"src":"4648:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3265,"id":3296,"nodeType":"Return","src":"4641:32:23"}]}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"3975:205:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:23","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"hash","nameLocation":"4222:4:23","nodeType":"VariableDeclaration","scope":3299,"src":"4214:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3254,"mutability":"mutable","name":"r","nameLocation":"4244:1:23","nodeType":"VariableDeclaration","scope":3299,"src":"4236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"vs","nameLocation":"4263:2:23","nodeType":"VariableDeclaration","scope":3299,"src":"4255:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:23"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:23","nodeType":"VariableDeclaration","scope":3299,"src":"4295:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"err","nameLocation":"4327:3:23","nodeType":"VariableDeclaration","scope":3299,"src":"4314:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3261,"nodeType":"UserDefinedTypeName","pathNode":{"id":3260,"name":"RecoverError","nameLocations":["4314:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"4314:12:23"},"referencedDeclaration":3153,"src":"4314:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:23","nodeType":"VariableDeclaration","scope":3299,"src":"4332:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:23"},"scope":3493,"src":"4185:505:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3331,"nodeType":"Block","src":"4903:164:23","statements":[{"assignments":[3312,3315,3317],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:23","nodeType":"VariableDeclaration","scope":3331,"src":"4914:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"error","nameLocation":"4946:5:23","nodeType":"VariableDeclaration","scope":3331,"src":"4933:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3314,"nodeType":"UserDefinedTypeName","pathNode":{"id":3313,"name":"RecoverError","nameLocations":["4933:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"4933:12:23"},"referencedDeclaration":3153,"src":"4933:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:23","nodeType":"VariableDeclaration","scope":3331,"src":"4953:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3323,"initialValue":{"arguments":[{"id":3319,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"4984:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3320,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"4990:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3321,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"4993:2:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3318,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3219,3299,3407],"referencedDeclaration":3299,"src":"4973:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:23"},{"expression":{"arguments":[{"id":3325,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5018:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"id":3326,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"5025:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3324,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5006:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3153_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3328,"nodeType":"ExpressionStatement","src":"5006:28:23"},{"expression":{"id":3329,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"5051:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3310,"id":3330,"nodeType":"Return","src":"5044:16:23"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"4696:116:23","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3332,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:23","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"hash","nameLocation":"4842:4:23","nodeType":"VariableDeclaration","scope":3332,"src":"4834:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"r","nameLocation":"4856:1:23","nodeType":"VariableDeclaration","scope":3332,"src":"4848:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"vs","nameLocation":"4867:2:23","nodeType":"VariableDeclaration","scope":3332,"src":"4859:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:23"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3332,"src":"4894:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:23"},"scope":3493,"src":"4817:250:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3406,"nodeType":"Block","src":"5382:1372:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3353,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"6278:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:23","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"6266:164:23","trueBody":{"id":3366,"nodeType":"Block","src":"6351:79:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:23","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3361,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6385:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"6385:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"id":3363,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"6417:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3350,"id":3365,"nodeType":"Return","src":"6365:54:23"}]}},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"signer","nameLocation":"6532:6:23","nodeType":"VariableDeclaration","scope":3406,"src":"6524:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3368,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3376,"initialValue":{"arguments":[{"id":3371,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"6551:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3372,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"6557:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3373,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6560:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3374,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"6563:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3370,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:23","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"6579:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:23","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3396,"nodeType":"IfStatement","src":"6575:113:23","trueBody":{"id":3395,"nodeType":"Block","src":"6601:87:23","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:23","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3387,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6635:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"6635:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:23","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3350,"id":3394,"nodeType":"Return","src":"6615:62:23"}]}},{"expression":{"components":[{"id":3397,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"6706:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3398,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6714:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3149,"src":"6714:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:23","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3350,"id":3405,"nodeType":"Return","src":"6698:49:23"}]},"documentation":{"id":3333,"nodeType":"StructuredDocumentation","src":"5073:125:23","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3407,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:23","nodeType":"FunctionDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"hash","nameLocation":"5240:4:23","nodeType":"VariableDeclaration","scope":3407,"src":"5232:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"v","nameLocation":"5260:1:23","nodeType":"VariableDeclaration","scope":3407,"src":"5254:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3336,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"r","nameLocation":"5279:1:23","nodeType":"VariableDeclaration","scope":3407,"src":"5271:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"s","nameLocation":"5298:1:23","nodeType":"VariableDeclaration","scope":3407,"src":"5290:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:23"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:23","nodeType":"VariableDeclaration","scope":3407,"src":"5329:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"err","nameLocation":"5361:3:23","nodeType":"VariableDeclaration","scope":3407,"src":"5348:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"RecoverError","nameLocations":["5348:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"5348:12:23"},"referencedDeclaration":3153,"src":"5348:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:23","nodeType":"VariableDeclaration","scope":3407,"src":"5366:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:23"},"scope":3493,"src":"5203:1551:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"6981:166:23","statements":[{"assignments":[3422,3425,3427],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:23","nodeType":"VariableDeclaration","scope":3442,"src":"6992:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"error","nameLocation":"7024:5:23","nodeType":"VariableDeclaration","scope":3442,"src":"7011:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3424,"nodeType":"UserDefinedTypeName","pathNode":{"id":3423,"name":"RecoverError","nameLocations":["7011:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"7011:12:23"},"referencedDeclaration":3153,"src":"7011:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:23","nodeType":"VariableDeclaration","scope":3442,"src":"7031:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3429,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"7062:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3430,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"7068:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3431,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"7071:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3432,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"7074:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3428,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3219,3299,3407],"referencedDeclaration":3407,"src":"7051:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3153_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:23"},{"expression":{"arguments":[{"id":3436,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"7098:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},{"id":3437,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"7105:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3435,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7086:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3153_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"ExpressionStatement","src":"7086:28:23"},{"expression":{"id":3440,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"7131:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3420,"id":3441,"nodeType":"Return","src":"7124:16:23"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"6760:122:23","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:23","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"hash","nameLocation":"6912:4:23","nodeType":"VariableDeclaration","scope":3443,"src":"6904:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"v","nameLocation":"6924:1:23","nodeType":"VariableDeclaration","scope":3443,"src":"6918:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3411,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"r","nameLocation":"6935:1:23","nodeType":"VariableDeclaration","scope":3443,"src":"6927:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"s","nameLocation":"6946:1:23","nodeType":"VariableDeclaration","scope":3443,"src":"6938:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:23"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"6972:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3418,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:23"},"scope":3493,"src":"6887:260:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"7352:460:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7366:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3453,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"7375:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3149,"src":"7375:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7462:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3459,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"7471:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:23","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"7471:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7567:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3467,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"7576:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:23","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"7576:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7701:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3479,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"7710:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3153_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:23","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"7710:30:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3487,"nodeType":"IfStatement","src":"7697:109:23","trueBody":{"id":3486,"nodeType":"Block","src":"7742:64:23","statements":[{"errorCall":{"arguments":[{"id":3483,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"7786:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3482,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"7763:22:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3485,"nodeType":"RevertStatement","src":"7756:39:23"}]}},"id":3488,"nodeType":"IfStatement","src":"7563:243:23","trueBody":{"id":3477,"nodeType":"Block","src":"7613:78:23","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3473,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"7670:8:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:23","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"7634:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3476,"nodeType":"RevertStatement","src":"7627:53:23"}]}},"id":3489,"nodeType":"IfStatement","src":"7458:348:23","trueBody":{"id":3465,"nodeType":"Block","src":"7502:55:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3462,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"7523:21:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"RevertStatement","src":"7516:30:23"}]}},"id":3490,"nodeType":"IfStatement","src":"7362:444:23","trueBody":{"id":3457,"nodeType":"Block","src":"7397:55:23","statements":[{"functionReturnParameters":3451,"id":3456,"nodeType":"Return","src":"7411:7:23"}]}}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"7153:122:23","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:23","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"error","nameLocation":"7314:5:23","nodeType":"VariableDeclaration","scope":3492,"src":"7301:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3446,"nodeType":"UserDefinedTypeName","pathNode":{"id":3445,"name":"RecoverError","nameLocations":["7301:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"7301:12:23"},"referencedDeclaration":3153,"src":"7301:12:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3153","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:23","nodeType":"VariableDeclaration","scope":3492,"src":"7321:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:23"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[],"src":"7352:0:23"},"scope":3493,"src":"7280:532:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3494,"src":"344:7470:23","usedErrors":[3156,3161,3166],"usedEvents":[]}],"src":"112:7703:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3720],"IERC5267":[1033],"MessageHashUtils":[3794],"ShortString":[2490],"ShortStrings":[2701]},"id":3721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3495,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":3795,"src":"139:56:24","symbolAliases":[{"foreign":{"id":3496,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"147:16:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":2702,"src":"196:62:24","symbolAliases":[{"foreign":{"id":3498,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"204:12:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3499,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"218:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":1034,"src":"259:55:24","symbolAliases":[{"foreign":{"id":3501,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"267:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3504,"name":"IERC5267","nameLocations":["1988:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":1033,"src":"1988:8:24"},"id":3505,"nodeType":"InheritanceSpecifier","src":"1988:8:24"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"316:1643:24","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3720,"linearizedBaseContracts":[3720,1033],"name":"EIP712","nameLocation":"1978:6:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3507,"libraryName":{"id":3506,"name":"ShortStrings","nameLocations":["2009:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"2009:12:24"},"nodeType":"UsingForDirective","src":"2003:25:24"},{"constant":true,"id":3512,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:24","nodeType":"VariableDeclaration","scope":3720,"src":"2034:140:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3509,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3514,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:24","nodeType":"VariableDeclaration","scope":3720,"src":"2373:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3516,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:24","nodeType":"VariableDeclaration","scope":3720,"src":"2427:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3518,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:24","nodeType":"VariableDeclaration","scope":3720,"src":"2473:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3520,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:24","nodeType":"VariableDeclaration","scope":3720,"src":"2517:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3522,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:24","nodeType":"VariableDeclaration","scope":3720,"src":"2560:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3525,"mutability":"immutable","name":"_name","nameLocation":"2637:5:24","nodeType":"VariableDeclaration","scope":3720,"src":"2607:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":3524,"nodeType":"UserDefinedTypeName","pathNode":{"id":3523,"name":"ShortString","nameLocations":["2607:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"2607:11:24"},"referencedDeclaration":2490,"src":"2607:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3528,"mutability":"immutable","name":"_version","nameLocation":"2678:8:24","nodeType":"VariableDeclaration","scope":3720,"src":"2648:38:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"},"typeName":{"id":3527,"nodeType":"UserDefinedTypeName","pathNode":{"id":3526,"name":"ShortString","nameLocations":["2648:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"2648:11:24"},"referencedDeclaration":2490,"src":"2648:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3530,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:24","nodeType":"VariableDeclaration","scope":3720,"src":"2692:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3529,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3532,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:24","nodeType":"VariableDeclaration","scope":3720,"src":"2726:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3531,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3589,"nodeType":"Block","src":"3383:376:24","statements":[{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3540,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"3393:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3543,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"3432:13:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3541,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"3401:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:24","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2642,"src":"3401:30:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2490_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"src":"3393:53:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"id":3546,"nodeType":"ExpressionStatement","src":"3393:53:24"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3547,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"3456:8:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3550,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"3501:16:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3548,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"3467:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:24","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2642,"src":"3467:33:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2490_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"src":"3456:62:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"id":3553,"nodeType":"ExpressionStatement","src":"3456:62:24"},{"expression":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3554,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"3528:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3558,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"3558:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3556,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:24","typeDescriptions":{}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3555,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3562,"nodeType":"ExpressionStatement","src":"3528:36:24"},{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3563,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"3574:14:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3567,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"3607:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3565,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:24","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3564,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3571,"nodeType":"ExpressionStatement","src":"3574:42:24"},{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"3627:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3573,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:24","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3576,"nodeType":"ExpressionStatement","src":"3627:30:24"},{"expression":{"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3577,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3667:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3578,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"3692:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3581,"nodeType":"ExpressionStatement","src":"3667:48:24"},{"expression":{"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"3725:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}],"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3583,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:24","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3588,"nodeType":"ExpressionStatement","src":"3725:27:24"}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"2764:559:24","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3590,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"name","nameLocation":"3354:4:24","nodeType":"VariableDeclaration","scope":3590,"src":"3340:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3534,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3537,"mutability":"mutable","name":"version","nameLocation":"3374:7:24","nodeType":"VariableDeclaration","scope":3590,"src":"3360:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3536,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:24"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[],"src":"3383:0:24"},"scope":3720,"src":"3328:431:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3615,"nodeType":"Block","src":"3907:200:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3598,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:24","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3600,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"3938:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3602,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:24","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3604,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"3970:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3613,"nodeType":"Block","src":"4046:55:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3610,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"4067:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3595,"id":3612,"nodeType":"Return","src":"4060:30:24"}]},"id":3614,"nodeType":"IfStatement","src":"3917:184:24","trueBody":{"id":3609,"nodeType":"Block","src":"3986:54:24","statements":[{"expression":{"id":3607,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4007:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3595,"id":3608,"nodeType":"Return","src":"4000:29:24"}]}}]},"documentation":{"id":3591,"nodeType":"StructuredDocumentation","src":"3765:75:24","text":" @dev Returns the domain separator for the current chain."},"id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:24","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"3872:2:24"},"returnParameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3616,"src":"3898:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:24"},"scope":3720,"src":"3845:262:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3636,"nodeType":"Block","src":"4177:115:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":3624,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"4215:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3625,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"4226:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3626,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"4239:14:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:24","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3631,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}],"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:24","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3622,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:24","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3621,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3620,"id":3635,"nodeType":"Return","src":"4187:98:24"}]},"id":3637,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:24","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[],"src":"4143:2:24"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3637,"src":"4168:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:24"},"scope":3720,"src":"4113:179:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3652,"nodeType":"Block","src":"5003:90:24","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3647,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"5053:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3649,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5075:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3645,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5020:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3794_$","typeString":"type(library MessageHashUtils)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:24","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3793,"src":"5020:32:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3644,"id":3651,"nodeType":"Return","src":"5013:73:24"}]},"documentation":{"id":3638,"nodeType":"StructuredDocumentation","src":"4298:614:24","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:24","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:24","nodeType":"VariableDeclaration","scope":3653,"src":"4943:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:24"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3653,"src":"4994:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:24"},"scope":3720,"src":"4917:176:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1032],"body":{"id":3694,"nodeType":"Block","src":"5472:229:24","statements":[{"expression":{"components":[{"hexValue":"0f","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3673,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"5533:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3675,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"5560:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3677,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:24","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3681,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3720","typeString":"contract EIP712"}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:24","typeDescriptions":{}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:24","typeDescriptions":{}}},"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ArrayTypeName","src":"5672:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3671,"id":3693,"nodeType":"Return","src":"5482:212:24"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"5099:40:24","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:24","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[],"src":"5165:2:24"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"fields","nameLocation":"5249:6:24","nodeType":"VariableDeclaration","scope":3695,"src":"5242:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3656,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"name","nameLocation":"5283:4:24","nodeType":"VariableDeclaration","scope":3695,"src":"5269:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3658,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"version","nameLocation":"5315:7:24","nodeType":"VariableDeclaration","scope":3695,"src":"5301:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3660,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3663,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:24","nodeType":"VariableDeclaration","scope":3695,"src":"5336:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:24","nodeType":"VariableDeclaration","scope":3695,"src":"5365:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"salt","nameLocation":"5412:4:24","nodeType":"VariableDeclaration","scope":3695,"src":"5404:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:24","nodeType":"VariableDeclaration","scope":3695,"src":"5430:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3669,"nodeType":"ArrayTypeName","src":"5430:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:24"},"scope":3720,"src":"5144:557:24","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3706,"nodeType":"Block","src":"6082:65:24","statements":[{"expression":{"arguments":[{"id":3703,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6126:13:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3701,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"6099:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:24","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"6099:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2490_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3700,"id":3705,"nodeType":"Return","src":"6092:48:24"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"5707:256:24","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:24","nodeType":"FunctionDefinition","parameters":{"id":3697,"nodeType":"ParameterList","parameters":[],"src":"6041:2:24"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3707,"src":"6067:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3698,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:24"},"scope":3720,"src":"6021:126:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3718,"nodeType":"Block","src":"6537:71:24","statements":[{"expression":{"arguments":[{"id":3715,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6584:16:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3713,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"6554:8:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2490","typeString":"ShortString"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:24","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"6554:29:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2490_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2490_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3712,"id":3717,"nodeType":"Return","src":"6547:54:24"}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"6153:262:24","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3719,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:24","nodeType":"FunctionDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"6496:2:24"},"returnParameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3719,"src":"6522:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3710,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:24"},"scope":3720,"src":"6473:135:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3721,"src":"1960:4650:24","usedErrors":[2498,2500],"usedEvents":[1013]}],"src":"113:6498:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3794],"Strings":[3145]},"id":3795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3722,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3795,"sourceUnit":3146,"src":"149:39:25","symbolAliases":[{"foreign":{"id":3723,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"157:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"190:330:25","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3794,"linearizedBaseContracts":[3794],"name":"MessageHashUtils","nameLocation":"529:16:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3734,"nodeType":"Block","src":"1314:341:25","statements":[{"AST":{"nativeSrc":"1349:300:25","nodeType":"YulBlock","src":"1349:300:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:25","nodeType":"YulLiteral","src":"1370:4:25","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:25","nodeType":"YulLiteral","src":"1376:34:25","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:25","nodeType":"YulIdentifier","src":"1363:6:25"},"nativeSrc":"1363:48:25","nodeType":"YulFunctionCall","src":"1363:48:25"},"nativeSrc":"1363:48:25","nodeType":"YulExpressionStatement","src":"1363:48:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:25","nodeType":"YulLiteral","src":"1472:4:25","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:25","nodeType":"YulIdentifier","src":"1478:11:25"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:25","nodeType":"YulIdentifier","src":"1465:6:25"},"nativeSrc":"1465:25:25","nodeType":"YulFunctionCall","src":"1465:25:25"},"nativeSrc":"1465:25:25","nodeType":"YulExpressionStatement","src":"1465:25:25"},{"nativeSrc":"1544:31:25","nodeType":"YulAssignment","src":"1544:31:25","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:25","nodeType":"YulLiteral","src":"1564:4:25","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:25","nodeType":"YulLiteral","src":"1570:4:25","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:25","nodeType":"YulIdentifier","src":"1554:9:25"},"nativeSrc":"1554:21:25","nodeType":"YulFunctionCall","src":"1554:21:25"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:25","nodeType":"YulIdentifier","src":"1544:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3731,"isOffset":false,"isSlot":false,"src":"1544:6:25","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"1478:11:25","valueSize":1}],"flags":["memory-safe"],"id":3733,"nodeType":"InlineAssembly","src":"1324:325:25"}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"552:665:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:25","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:25","nodeType":"VariableDeclaration","scope":3735,"src":"1254:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:25"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"digest","nameLocation":"1306:6:25","nodeType":"VariableDeclaration","scope":3735,"src":"1298:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:25"},"scope":3794,"src":"1222:433:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"2207:143:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3752,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"2316:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:25","memberName":"length","nodeType":"MemberAccess","src":"2316:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3750,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"2299:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3145_$","typeString":"type(library Strings)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:25","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2893,"src":"2299:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3748,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:25","typeDescriptions":{}}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3756,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"2334:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3744,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:25","typeDescriptions":{}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:25","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:25","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3743,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3742,"id":3759,"nodeType":"Return","src":"2217:126:25"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1661:455:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:25","nodeType":"FunctionDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"message","nameLocation":"2166:7:25","nodeType":"VariableDeclaration","scope":3761,"src":"2153:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3737,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:25"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"2198:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:25"},"scope":3794,"src":"2121:229:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3780,"nodeType":"Block","src":"2804:80:25","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3775,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"2860:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3776,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"2871:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3772,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3771,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3770,"id":3779,"nodeType":"Return","src":"2814:63:25"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"2356:332:25","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:25","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"validator","nameLocation":"2742:9:25","nodeType":"VariableDeclaration","scope":3781,"src":"2734:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3763,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"data","nameLocation":"2766:4:25","nodeType":"VariableDeclaration","scope":3781,"src":"2753:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3765,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:25"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3781,"src":"2795:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:25"},"scope":3794,"src":"2693:191:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3792,"nodeType":"Block","src":"3435:265:25","statements":[{"AST":{"nativeSrc":"3470:224:25","nodeType":"YulBlock","src":"3470:224:25","statements":[{"nativeSrc":"3484:22:25","nodeType":"YulVariableDeclaration","src":"3484:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:25","nodeType":"YulLiteral","src":"3501:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:25","nodeType":"YulIdentifier","src":"3495:5:25"},"nativeSrc":"3495:11:25","nodeType":"YulFunctionCall","src":"3495:11:25"},"variables":[{"name":"ptr","nativeSrc":"3488:3:25","nodeType":"YulTypedName","src":"3488:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:25","nodeType":"YulIdentifier","src":"3526:3:25"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:25","nodeType":"YulLiteral","src":"3531:10:25","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:25","nodeType":"YulIdentifier","src":"3519:6:25"},"nativeSrc":"3519:23:25","nodeType":"YulFunctionCall","src":"3519:23:25"},"nativeSrc":"3519:23:25","nodeType":"YulExpressionStatement","src":"3519:23:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:25","nodeType":"YulIdentifier","src":"3566:3:25"},{"kind":"number","nativeSrc":"3571:4:25","nodeType":"YulLiteral","src":"3571:4:25","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:25","nodeType":"YulIdentifier","src":"3562:3:25"},"nativeSrc":"3562:14:25","nodeType":"YulFunctionCall","src":"3562:14:25"},{"name":"domainSeparator","nativeSrc":"3578:15:25","nodeType":"YulIdentifier","src":"3578:15:25"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:25","nodeType":"YulIdentifier","src":"3555:6:25"},"nativeSrc":"3555:39:25","nodeType":"YulFunctionCall","src":"3555:39:25"},"nativeSrc":"3555:39:25","nodeType":"YulExpressionStatement","src":"3555:39:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:25","nodeType":"YulIdentifier","src":"3618:3:25"},{"kind":"number","nativeSrc":"3623:4:25","nodeType":"YulLiteral","src":"3623:4:25","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:25","nodeType":"YulIdentifier","src":"3614:3:25"},"nativeSrc":"3614:14:25","nodeType":"YulFunctionCall","src":"3614:14:25"},{"name":"structHash","nativeSrc":"3630:10:25","nodeType":"YulIdentifier","src":"3630:10:25"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"},"nativeSrc":"3607:34:25","nodeType":"YulFunctionCall","src":"3607:34:25"},"nativeSrc":"3607:34:25","nodeType":"YulExpressionStatement","src":"3607:34:25"},{"nativeSrc":"3654:30:25","nodeType":"YulAssignment","src":"3654:30:25","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:25","nodeType":"YulIdentifier","src":"3674:3:25"},{"kind":"number","nativeSrc":"3679:4:25","nodeType":"YulLiteral","src":"3679:4:25","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:25","nodeType":"YulIdentifier","src":"3664:9:25"},"nativeSrc":"3664:20:25","nodeType":"YulFunctionCall","src":"3664:20:25"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:25","nodeType":"YulIdentifier","src":"3654:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3789,"isOffset":false,"isSlot":false,"src":"3654:6:25","valueSize":1},{"declaration":3784,"isOffset":false,"isSlot":false,"src":"3578:15:25","valueSize":1},{"declaration":3786,"isOffset":false,"isSlot":false,"src":"3630:10:25","valueSize":1}],"flags":["memory-safe"],"id":3791,"nodeType":"InlineAssembly","src":"3445:249:25"}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"2890:431:25","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:25","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:25","nodeType":"VariableDeclaration","scope":3793,"src":"3351:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:25","nodeType":"VariableDeclaration","scope":3793,"src":"3376:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:25"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"digest","nameLocation":"3427:6:25","nodeType":"VariableDeclaration","scope":3793,"src":"3419:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:25"},"scope":3794,"src":"3326:374:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3795,"src":"521:3181:25","usedErrors":[],"usedEvents":[]}],"src":"123:3580:25"},"id":25},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3818],"IERC165":[3830]},"id":3819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3796,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3819,"sourceUnit":3831,"src":"140:38:26","symbolAliases":[{"foreign":{"id":3797,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"148:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3800,"name":"IERC165","nameLocations":["688:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3830,"src":"688:7:26"},"id":3801,"nodeType":"InheritanceSpecifier","src":"688:7:26"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"180:479:26","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3818,"linearizedBaseContracts":[3818,3830],"name":"ERC165","nameLocation":"678:6:26","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3829],"body":{"id":3816,"nodeType":"Block","src":"845:64:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"862:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3811,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"882:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3830_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3830_$","typeString":"type(contract IERC165)"}],"id":3810,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3830","typeString":"type(contract IERC165)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:26","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3808,"id":3815,"nodeType":"Return","src":"855:47:26"}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"702:56:26","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3817,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:26","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:26","nodeType":"VariableDeclaration","scope":3817,"src":"790:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3803,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:26"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3817,"src":"839:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3806,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:26"},"scope":3818,"src":"763:146:26","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3819,"src":"660:251:26","usedErrors":[],"usedEvents":[]}],"src":"114:798:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3830]},"id":3831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3820,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3821,"nodeType":"StructuredDocumentation","src":"141:280:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3830,"linearizedBaseContracts":[3830],"name":"IERC165","nameLocation":"432:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3822,"nodeType":"StructuredDocumentation","src":"446:340:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3829,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:27","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:27","nodeType":"VariableDeclaration","scope":3829,"src":"818:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3823,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:27"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"861:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3826,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:27"},"scope":3830,"src":"791:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3831,"src":"422:447:27","usedErrors":[],"usedEvents":[]}],"src":"115:755:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5436],"Panic":[2367],"SafeCast":[7201]},"id":5437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5437,"sourceUnit":2368,"src":"129:35:28","symbolAliases":[{"foreign":{"id":3833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"137:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5437,"sourceUnit":7202,"src":"165:40:28","symbolAliases":[{"foreign":{"id":3835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"173:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3837,"nodeType":"StructuredDocumentation","src":"207:73:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5436,"linearizedBaseContracts":[5436],"name":"Math","nameLocation":"289:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3842,"members":[{"id":3838,"name":"Floor","nameLocation":"324:5:28","nodeType":"EnumValue","src":"324:5:28"},{"id":3839,"name":"Ceil","nameLocation":"367:4:28","nodeType":"EnumValue","src":"367:4:28"},{"id":3840,"name":"Trunc","nameLocation":"409:5:28","nodeType":"EnumValue","src":"409:5:28"},{"id":3841,"name":"Expand","nameLocation":"439:6:28","nodeType":"EnumValue","src":"439:6:28"}],"name":"Rounding","nameLocation":"305:8:28","nodeType":"EnumDefinition","src":"300:169:28"},{"body":{"id":3873,"nodeType":"Block","src":"677:140:28","statements":[{"id":3872,"nodeType":"UncheckedBlock","src":"687:124:28","statements":[{"assignments":[3855],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"c","nameLocation":"719:1:28","nodeType":"VariableDeclaration","scope":3872,"src":"711:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3859,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"727:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"746:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"750:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3867,"nodeType":"IfStatement","src":"742:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3853,"id":3866,"nodeType":"Return","src":"753:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3869,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"798:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3853,"id":3871,"nodeType":"Return","src":"784:16:28"}]}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"475:106:28","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:28","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"a","nameLocation":"610:1:28","nodeType":"VariableDeclaration","scope":3874,"src":"602:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"b","nameLocation":"621:1:28","nodeType":"VariableDeclaration","scope":3874,"src":"613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:28"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"success","nameLocation":"652:7:28","nodeType":"VariableDeclaration","scope":3874,"src":"647:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3849,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"result","nameLocation":"669:6:28","nodeType":"VariableDeclaration","scope":3874,"src":"661:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:28"},"scope":5436,"src":"586:231:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"1028:113:28","statements":[{"id":3900,"nodeType":"UncheckedBlock","src":"1038:97:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3893,"nodeType":"IfStatement","src":"1062:28:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3885,"id":3892,"nodeType":"Return","src":"1073:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1122:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3885,"id":3899,"nodeType":"Return","src":"1104:20:28"}]}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"823:109:28","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:28","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"a","nameLocation":"961:1:28","nodeType":"VariableDeclaration","scope":3902,"src":"953:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"b","nameLocation":"972:1:28","nodeType":"VariableDeclaration","scope":3902,"src":"964:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:28"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"success","nameLocation":"1003:7:28","nodeType":"VariableDeclaration","scope":3902,"src":"998:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"result","nameLocation":"1020:6:28","nodeType":"VariableDeclaration","scope":3902,"src":"1012:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:28"},"scope":5436,"src":"937:204:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3943,"nodeType":"Block","src":"1355:417:28","statements":[{"id":3942,"nodeType":"UncheckedBlock","src":"1365:401:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"1623:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3921,"nodeType":"IfStatement","src":"1619:28:28","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3913,"id":3920,"nodeType":"Return","src":"1631:16:28"}},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"c","nameLocation":"1669:1:28","nodeType":"VariableDeclaration","scope":3942,"src":"1661:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"1673:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"1677:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3928,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"1696:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"1700:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"1705:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3937,"nodeType":"IfStatement","src":"1692:33:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3913,"id":3936,"nodeType":"Return","src":"1708:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3939,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"1753:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3913,"id":3941,"nodeType":"Return","src":"1739:16:28"}]}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"1147:112:28","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:28","nodeType":"FunctionDefinition","parameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"a","nameLocation":"1288:1:28","nodeType":"VariableDeclaration","scope":3944,"src":"1280:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"b","nameLocation":"1299:1:28","nodeType":"VariableDeclaration","scope":3944,"src":"1291:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:28"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"success","nameLocation":"1330:7:28","nodeType":"VariableDeclaration","scope":3944,"src":"1325:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3909,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"result","nameLocation":"1347:6:28","nodeType":"VariableDeclaration","scope":3944,"src":"1339:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:28"},"scope":5436,"src":"1264:508:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3971,"nodeType":"Block","src":"1987:114:28","statements":[{"id":3970,"nodeType":"UncheckedBlock","src":"1997:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"2025:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3963,"nodeType":"IfStatement","src":"2021:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3955,"id":3962,"nodeType":"Return","src":"2033:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2078:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"2082:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3955,"id":3969,"nodeType":"Return","src":"2064:20:28"}]}]},"documentation":{"id":3945,"nodeType":"StructuredDocumentation","src":"1778:113:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3972,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:28","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"a","nameLocation":"1920:1:28","nodeType":"VariableDeclaration","scope":3972,"src":"1912:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"b","nameLocation":"1931:1:28","nodeType":"VariableDeclaration","scope":3972,"src":"1923:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:28"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"success","nameLocation":"1962:7:28","nodeType":"VariableDeclaration","scope":3972,"src":"1957:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3951,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"result","nameLocation":"1979:6:28","nodeType":"VariableDeclaration","scope":3972,"src":"1971:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:28"},"scope":5436,"src":"1896:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"2326:114:28","statements":[{"id":3998,"nodeType":"UncheckedBlock","src":"2336:98:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2364:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3991,"nodeType":"IfStatement","src":"2360:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3983,"id":3990,"nodeType":"Return","src":"2372:17:28"}},{"expression":{"components":[{"hexValue":"74727565","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"2417:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"2421:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3983,"id":3997,"nodeType":"Return","src":"2403:20:28"}]}]},"documentation":{"id":3973,"nodeType":"StructuredDocumentation","src":"2107:123:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:28","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"a","nameLocation":"2259:1:28","nodeType":"VariableDeclaration","scope":4000,"src":"2251:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"b","nameLocation":"2270:1:28","nodeType":"VariableDeclaration","scope":4000,"src":"2262:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:28"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"success","nameLocation":"2301:7:28","nodeType":"VariableDeclaration","scope":4000,"src":"2296:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3979,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"result","nameLocation":"2318:6:28","nodeType":"VariableDeclaration","scope":4000,"src":"2310:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:28"},"scope":5436,"src":"2235:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"2912:207:28","statements":[{"id":4025,"nodeType":"UncheckedBlock","src":"2922:191:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"3060:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"3066:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4014,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"3070:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4019,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3091:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4017,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"3075:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"3075:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4011,"id":4024,"nodeType":"Return","src":"3053:49:28"}]}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"2446:374:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:28","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"condition","nameLocation":"2847:9:28","nodeType":"VariableDeclaration","scope":4027,"src":"2842:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4002,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"a","nameLocation":"2866:1:28","nodeType":"VariableDeclaration","scope":4027,"src":"2858:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"b","nameLocation":"2877:1:28","nodeType":"VariableDeclaration","scope":4027,"src":"2869:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:28"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4027,"src":"2903:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:28"},"scope":5436,"src":"2825:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"3256:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"3281:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"3285:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"3288:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"3291:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"3273:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4036,"id":4044,"nodeType":"Return","src":"3266:27:28"}]},"documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"3125:59:28","text":" @dev Returns the largest of two numbers."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:28","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"a","nameLocation":"3210:1:28","nodeType":"VariableDeclaration","scope":4046,"src":"3202:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"b","nameLocation":"3221:1:28","nodeType":"VariableDeclaration","scope":4046,"src":"3213:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:28"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"3247:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:28"},"scope":5436,"src":"3189:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4064,"nodeType":"Block","src":"3438:44:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"3463:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4058,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"3467:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"3470:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"3473:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"3455:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4063,"nodeType":"Return","src":"3448:27:28"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"3306:60:28","text":" @dev Returns the smallest of two numbers."},"id":4065,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:28","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"a","nameLocation":"3392:1:28","nodeType":"VariableDeclaration","scope":4065,"src":"3384:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"b","nameLocation":"3403:1:28","nodeType":"VariableDeclaration","scope":4065,"src":"3395:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:28"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4065,"src":"3429:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:28"},"scope":5436,"src":"3371:111:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"3666:82:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3721:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4076,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3731:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4074,"id":4086,"nodeType":"Return","src":"3713:28:28"}]},"documentation":{"id":4066,"nodeType":"StructuredDocumentation","src":"3488:102:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:28","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"a","nameLocation":"3620:1:28","nodeType":"VariableDeclaration","scope":4088,"src":"3612:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"b","nameLocation":"3631:1:28","nodeType":"VariableDeclaration","scope":4088,"src":"3623:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:28"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"3657:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:28"},"scope":5436,"src":"3595:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4128,"nodeType":"Block","src":"4040:633:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"4054:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4109,"nodeType":"IfStatement","src":"4050:150:28","trueBody":{"id":4108,"nodeType":"Block","src":"4062:138:28","statements":[{"expression":{"arguments":[{"expression":{"id":4104,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4166:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"4166:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4101,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4154:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"4154:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4107,"nodeType":"ExpressionStatement","src":"4154:35:28"}]}},{"id":4127,"nodeType":"UncheckedBlock","src":"4583:84:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"4630:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4110,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"4614:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"4614:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"4641:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"4650:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4097,"id":4126,"nodeType":"Return","src":"4607:49:28"}]}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"3754:210:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4129,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:28","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"a","nameLocation":"3994:1:28","nodeType":"VariableDeclaration","scope":4129,"src":"3986:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"b","nameLocation":"4005:1:28","nodeType":"VariableDeclaration","scope":4129,"src":"3997:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:28"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4129,"src":"4031:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:28"},"scope":5436,"src":"3969:704:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4265,"nodeType":"Block","src":"5094:4128:28","statements":[{"id":4264,"nodeType":"UncheckedBlock","src":"5104:4112:28","statements":[{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:28","nodeType":"VariableDeclaration","scope":4264,"src":"5433:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"5449:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4144,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"5453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:28"},{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:28","nodeType":"VariableDeclaration","scope":4264,"src":"5513:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4149,"nodeType":"VariableDeclarationStatement","src":"5513:13:28"},{"AST":{"nativeSrc":"5593:122:28","nodeType":"YulBlock","src":"5593:122:28","statements":[{"nativeSrc":"5611:30:28","nodeType":"YulVariableDeclaration","src":"5611:30:28","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:28","nodeType":"YulIdentifier","src":"5628:1:28"},{"name":"y","nativeSrc":"5631:1:28","nodeType":"YulIdentifier","src":"5631:1:28"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:28","nodeType":"YulLiteral","src":"5638:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:28","nodeType":"YulIdentifier","src":"5634:3:28"},"nativeSrc":"5634:6:28","nodeType":"YulFunctionCall","src":"5634:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:28","nodeType":"YulIdentifier","src":"5621:6:28"},"nativeSrc":"5621:20:28","nodeType":"YulFunctionCall","src":"5621:20:28"},"variables":[{"name":"mm","nativeSrc":"5615:2:28","nodeType":"YulTypedName","src":"5615:2:28","type":""}]},{"nativeSrc":"5658:43:28","nodeType":"YulAssignment","src":"5658:43:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:28","nodeType":"YulIdentifier","src":"5675:2:28"},{"name":"prod0","nativeSrc":"5679:5:28","nodeType":"YulIdentifier","src":"5679:5:28"}],"functionName":{"name":"sub","nativeSrc":"5671:3:28","nodeType":"YulIdentifier","src":"5671:3:28"},"nativeSrc":"5671:14:28","nodeType":"YulFunctionCall","src":"5671:14:28"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:28","nodeType":"YulIdentifier","src":"5690:2:28"},{"name":"prod0","nativeSrc":"5694:5:28","nodeType":"YulIdentifier","src":"5694:5:28"}],"functionName":{"name":"lt","nativeSrc":"5687:2:28","nodeType":"YulIdentifier","src":"5687:2:28"},"nativeSrc":"5687:13:28","nodeType":"YulFunctionCall","src":"5687:13:28"}],"functionName":{"name":"sub","nativeSrc":"5667:3:28","nodeType":"YulIdentifier","src":"5667:3:28"},"nativeSrc":"5667:34:28","nodeType":"YulFunctionCall","src":"5667:34:28"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:28","nodeType":"YulIdentifier","src":"5658:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4142,"isOffset":false,"isSlot":false,"src":"5679:5:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"5694:5:28","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"5658:5:28","valueSize":1},{"declaration":4132,"isOffset":false,"isSlot":false,"src":"5628:1:28","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"5631:1:28","valueSize":1}],"id":4150,"nodeType":"InlineAssembly","src":"5584:131:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"5796:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4159,"nodeType":"IfStatement","src":"5792:368:28","trueBody":{"id":4158,"nodeType":"Block","src":"5808:352:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"6126:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4155,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"6134:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4140,"id":4157,"nodeType":"Return","src":"6119:26:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"6270:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4161,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6285:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4178,"nodeType":"IfStatement","src":"6266:143:28","trueBody":{"id":4177,"nodeType":"Block","src":"6292:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"6330:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4170,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6348:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"6348:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4172,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6372:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2330,"src":"6372:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6322:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4163,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"6310:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"6310:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4176,"nodeType":"ExpressionStatement","src":"6310:84:28"}]}},{"assignments":[4180],"declarations":[{"constant":false,"id":4180,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:28","nodeType":"VariableDeclaration","scope":4264,"src":"6664:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4181,"nodeType":"VariableDeclarationStatement","src":"6664:17:28"},{"AST":{"nativeSrc":"6704:291:28","nodeType":"YulBlock","src":"6704:291:28","statements":[{"nativeSrc":"6773:38:28","nodeType":"YulAssignment","src":"6773:38:28","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:28","nodeType":"YulIdentifier","src":"6793:1:28"},{"name":"y","nativeSrc":"6796:1:28","nodeType":"YulIdentifier","src":"6796:1:28"},{"name":"denominator","nativeSrc":"6799:11:28","nodeType":"YulIdentifier","src":"6799:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:28","nodeType":"YulIdentifier","src":"6786:6:28"},"nativeSrc":"6786:25:28","nodeType":"YulFunctionCall","src":"6786:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:28","nodeType":"YulIdentifier","src":"6773:9:28"}]},{"nativeSrc":"6893:41:28","nodeType":"YulAssignment","src":"6893:41:28","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:28","nodeType":"YulIdentifier","src":"6906:5:28"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:28","nodeType":"YulIdentifier","src":"6916:9:28"},{"name":"prod0","nativeSrc":"6927:5:28","nodeType":"YulIdentifier","src":"6927:5:28"}],"functionName":{"name":"gt","nativeSrc":"6913:2:28","nodeType":"YulIdentifier","src":"6913:2:28"},"nativeSrc":"6913:20:28","nodeType":"YulFunctionCall","src":"6913:20:28"}],"functionName":{"name":"sub","nativeSrc":"6902:3:28","nodeType":"YulIdentifier","src":"6902:3:28"},"nativeSrc":"6902:32:28","nodeType":"YulFunctionCall","src":"6902:32:28"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:28","nodeType":"YulIdentifier","src":"6893:5:28"}]},{"nativeSrc":"6951:30:28","nodeType":"YulAssignment","src":"6951:30:28","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:28","nodeType":"YulIdentifier","src":"6964:5:28"},{"name":"remainder","nativeSrc":"6971:9:28","nodeType":"YulIdentifier","src":"6971:9:28"}],"functionName":{"name":"sub","nativeSrc":"6960:3:28","nodeType":"YulIdentifier","src":"6960:3:28"},"nativeSrc":"6960:21:28","nodeType":"YulFunctionCall","src":"6960:21:28"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:28","nodeType":"YulIdentifier","src":"6951:5:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4136,"isOffset":false,"isSlot":false,"src":"6799:11:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"6927:5:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"6951:5:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"6964:5:28","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"6893:5:28","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"6906:5:28","valueSize":1},{"declaration":4180,"isOffset":false,"isSlot":false,"src":"6773:9:28","valueSize":1},{"declaration":4180,"isOffset":false,"isSlot":false,"src":"6916:9:28","valueSize":1},{"declaration":4180,"isOffset":false,"isSlot":false,"src":"6971:9:28","valueSize":1},{"declaration":4132,"isOffset":false,"isSlot":false,"src":"6793:1:28","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":false,"src":"6796:1:28","valueSize":1}],"id":4182,"nodeType":"InlineAssembly","src":"6695:300:28"},{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"twos","nameLocation":"7207:4:28","nodeType":"VariableDeclaration","scope":4264,"src":"7199:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4191,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"7214:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4187,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"7233:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:28"},{"AST":{"nativeSrc":"7268:366:28","nodeType":"YulBlock","src":"7268:366:28","statements":[{"nativeSrc":"7333:37:28","nodeType":"YulAssignment","src":"7333:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:28","nodeType":"YulIdentifier","src":"7352:11:28"},{"name":"twos","nativeSrc":"7365:4:28","nodeType":"YulIdentifier","src":"7365:4:28"}],"functionName":{"name":"div","nativeSrc":"7348:3:28","nodeType":"YulIdentifier","src":"7348:3:28"},"nativeSrc":"7348:22:28","nodeType":"YulFunctionCall","src":"7348:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:28","nodeType":"YulIdentifier","src":"7333:11:28"}]},{"nativeSrc":"7437:25:28","nodeType":"YulAssignment","src":"7437:25:28","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:28","nodeType":"YulIdentifier","src":"7450:5:28"},{"name":"twos","nativeSrc":"7457:4:28","nodeType":"YulIdentifier","src":"7457:4:28"}],"functionName":{"name":"div","nativeSrc":"7446:3:28","nodeType":"YulIdentifier","src":"7446:3:28"},"nativeSrc":"7446:16:28","nodeType":"YulFunctionCall","src":"7446:16:28"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:28","nodeType":"YulIdentifier","src":"7437:5:28"}]},{"nativeSrc":"7581:39:28","nodeType":"YulAssignment","src":"7581:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:28","nodeType":"YulLiteral","src":"7601:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:28","nodeType":"YulIdentifier","src":"7604:4:28"}],"functionName":{"name":"sub","nativeSrc":"7597:3:28","nodeType":"YulIdentifier","src":"7597:3:28"},"nativeSrc":"7597:12:28","nodeType":"YulFunctionCall","src":"7597:12:28"},{"name":"twos","nativeSrc":"7611:4:28","nodeType":"YulIdentifier","src":"7611:4:28"}],"functionName":{"name":"div","nativeSrc":"7593:3:28","nodeType":"YulIdentifier","src":"7593:3:28"},"nativeSrc":"7593:23:28","nodeType":"YulFunctionCall","src":"7593:23:28"},{"kind":"number","nativeSrc":"7618:1:28","nodeType":"YulLiteral","src":"7618:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:28","nodeType":"YulIdentifier","src":"7589:3:28"},"nativeSrc":"7589:31:28","nodeType":"YulFunctionCall","src":"7589:31:28"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:28","nodeType":"YulIdentifier","src":"7581:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4136,"isOffset":false,"isSlot":false,"src":"7333:11:28","valueSize":1},{"declaration":4136,"isOffset":false,"isSlot":false,"src":"7352:11:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"7437:5:28","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"7450:5:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"7365:4:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"7457:4:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"7581:4:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"7604:4:28","valueSize":1},{"declaration":4184,"isOffset":false,"isSlot":false,"src":"7611:4:28","valueSize":1}],"id":4192,"nodeType":"InlineAssembly","src":"7259:375:28"},{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4193,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"7700:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"7709:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4195,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"7717:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"7700:21:28"},{"assignments":[4200],"declarations":[{"constant":false,"id":4200,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:28","nodeType":"VariableDeclaration","scope":4264,"src":"8056:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8079:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:28"},{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8327:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8341:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"8312:36:28"},{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4216,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8382:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8397:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8411:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"8382:36:28"},{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8469:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4227,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4231,"nodeType":"ExpressionStatement","src":"8454:36:28"},{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4232,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8525:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8540:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4235,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8554:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"8525:36:28"},{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8613:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4243,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8627:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"8598:36:28"},{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4248,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8672:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8687:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4251,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"8701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4255,"nodeType":"ExpressionStatement","src":"8672:36:28"},{"expression":{"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"9154:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9163:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4258,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"9171:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4261,"nodeType":"ExpressionStatement","src":"9154:24:28"},{"expression":{"id":4262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"9199:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4140,"id":4263,"nodeType":"Return","src":"9192:13:28"}]}]},"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"4679:312:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:28","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"x","nameLocation":"5020:1:28","nodeType":"VariableDeclaration","scope":4266,"src":"5012:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"y","nameLocation":"5031:1:28","nodeType":"VariableDeclaration","scope":4266,"src":"5023:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:28","nodeType":"VariableDeclaration","scope":4266,"src":"5034:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:28"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"result","nameLocation":"5086:6:28","nodeType":"VariableDeclaration","scope":4266,"src":"5078:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:28"},"scope":5436,"src":"4996:4226:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4302,"nodeType":"Block","src":"9461:128:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4282,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"9485:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4283,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9488:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4284,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"9491:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4281,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4266,4303],"referencedDeclaration":4266,"src":"9478:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4289,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"9539:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":4288,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"9522:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3842_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4292,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"9559:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4293,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9562:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4294,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"9565:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4291,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"9506:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"9506:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4280,"id":4301,"nodeType":"Return","src":"9471:111:28"}]},"documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"9228:118:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4303,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:28","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"x","nameLocation":"9375:1:28","nodeType":"VariableDeclaration","scope":4303,"src":"9367:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"y","nameLocation":"9386:1:28","nodeType":"VariableDeclaration","scope":4303,"src":"9378:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:28","nodeType":"VariableDeclaration","scope":4303,"src":"9389:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:28","nodeType":"VariableDeclaration","scope":4303,"src":"9410:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":4275,"nodeType":"UserDefinedTypeName","pathNode":{"id":4274,"name":"Rounding","nameLocations":["9410:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"9410:8:28"},"referencedDeclaration":3842,"src":"9410:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:28"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4303,"src":"9452:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:28"},"scope":5436,"src":"9351:238:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"10223:1849:28","statements":[{"id":4398,"nodeType":"UncheckedBlock","src":"10233:1833:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"10261:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4318,"nodeType":"IfStatement","src":"10257:20:28","trueBody":{"expression":{"hexValue":"30","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4312,"id":4317,"nodeType":"Return","src":"10269:8:28"}},{"assignments":[4320],"declarations":[{"constant":false,"id":4320,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:28","nodeType":"VariableDeclaration","scope":4398,"src":"10748:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4324,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"10768:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4322,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"10772:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:28"},{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:28","nodeType":"VariableDeclaration","scope":4398,"src":"10787:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"id":4327,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"10801:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:28"},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"x","nameLocation":"10945:1:28","nodeType":"VariableDeclaration","scope":4398,"src":"10938:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4329,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4332,"initialValue":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:28"},{"assignments":[4334],"declarations":[{"constant":false,"id":4334,"mutability":"mutable","name":"y","nameLocation":"10971:1:28","nodeType":"VariableDeclaration","scope":4398,"src":"10964:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4333,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4336,"initialValue":{"hexValue":"31","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:28"},{"body":{"id":4373,"nodeType":"Block","src":"11014:882:28","statements":[{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:28","nodeType":"VariableDeclaration","scope":4373,"src":"11032:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4345,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11051:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4343,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"11057:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:28"},{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4346,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11086:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4347,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"11091:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4348,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4349,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"11191:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11436:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"11442:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4352,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"11454:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"11085:395:28"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4358,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"11500:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4359,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11503:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4360,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4361,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11585:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"11839:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"11843:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4366,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"11854:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4364,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:28","typeDescriptions":{}}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"ExpressionStatement","src":"11499:382:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"10998:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"WhileStatement","src":"10991:905:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"11914:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4380,"nodeType":"IfStatement","src":"11910:22:28","trueBody":{"expression":{"hexValue":"30","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4312,"id":4379,"nodeType":"Return","src":"11924:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"11983:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"11990:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:28","subExpression":{"id":4388,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12003:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:28","typeDescriptions":{}}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12015:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:28","typeDescriptions":{}}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4381,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"11975:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4312,"id":4397,"nodeType":"Return","src":"11968:50:28"}]}]},"documentation":{"id":4304,"nodeType":"StructuredDocumentation","src":"9595:553:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:28","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"a","nameLocation":"10177:1:28","nodeType":"VariableDeclaration","scope":4400,"src":"10169:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"n","nameLocation":"10188:1:28","nodeType":"VariableDeclaration","scope":4400,"src":"10180:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:28"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4400,"src":"10214:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:28"},"scope":5436,"src":"10153:1919:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"12672:82:28","statements":[{"id":4419,"nodeType":"UncheckedBlock","src":"12682:66:28","statements":[{"expression":{"arguments":[{"id":4412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"12725:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"12728:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4416,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"12735:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4410,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"12713:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4457,"src":"12713:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4409,"id":4418,"nodeType":"Return","src":"12706:31:28"}]}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"12078:514:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:28","nodeType":"FunctionDefinition","parameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"a","nameLocation":"12626:1:28","nodeType":"VariableDeclaration","scope":4421,"src":"12618:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4405,"mutability":"mutable","name":"p","nameLocation":"12637:1:28","nodeType":"VariableDeclaration","scope":4421,"src":"12629:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4404,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:28"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4421,"src":"12663:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:28"},"scope":5436,"src":"12597:157:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4456,"nodeType":"Block","src":"13524:174:28","statements":[{"assignments":[4434,4436],"declarations":[{"constant":false,"id":4434,"mutability":"mutable","name":"success","nameLocation":"13540:7:28","nodeType":"VariableDeclaration","scope":4456,"src":"13535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4433,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"result","nameLocation":"13557:6:28","nodeType":"VariableDeclaration","scope":4456,"src":"13549:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4442,"initialValue":{"arguments":[{"id":4438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"13577:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4439,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"13580:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4440,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"13583:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4481,4563],"referencedDeclaration":4481,"src":"13567:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:28"},{"condition":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:28","subExpression":{"id":4443,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"13600:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"nodeType":"IfStatement","src":"13595:74:28","trueBody":{"id":4452,"nodeType":"Block","src":"13609:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4448,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"13635:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"13635:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4445,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"13623:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"13623:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4451,"nodeType":"ExpressionStatement","src":"13623:35:28"}]}},{"expression":{"id":4454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"13685:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4432,"id":4455,"nodeType":"Return","src":"13678:13:28"}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"12760:678:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4457,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:28","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"b","nameLocation":"13467:1:28","nodeType":"VariableDeclaration","scope":4457,"src":"13459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"e","nameLocation":"13478:1:28","nodeType":"VariableDeclaration","scope":4457,"src":"13470:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4428,"mutability":"mutable","name":"m","nameLocation":"13489:1:28","nodeType":"VariableDeclaration","scope":4457,"src":"13481:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:28"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4457,"src":"13515:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:28"},"scope":5436,"src":"13443:255:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4480,"nodeType":"Block","src":"14552:1493:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"14566:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4478,"nodeType":"IfStatement","src":"14562:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4470,"id":4477,"nodeType":"Return","src":"14574:17:28"}},{"AST":{"nativeSrc":"14626:1413:28","nodeType":"YulBlock","src":"14626:1413:28","statements":[{"nativeSrc":"14640:22:28","nodeType":"YulVariableDeclaration","src":"14640:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:28","nodeType":"YulLiteral","src":"14657:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:28","nodeType":"YulIdentifier","src":"14651:5:28"},"nativeSrc":"14651:11:28","nodeType":"YulFunctionCall","src":"14651:11:28"},"variables":[{"name":"ptr","nativeSrc":"14644:3:28","nodeType":"YulTypedName","src":"14644:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:28","nodeType":"YulIdentifier","src":"15570:3:28"},{"kind":"number","nativeSrc":"15575:4:28","nodeType":"YulLiteral","src":"15575:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:28","nodeType":"YulIdentifier","src":"15563:6:28"},"nativeSrc":"15563:17:28","nodeType":"YulFunctionCall","src":"15563:17:28"},"nativeSrc":"15563:17:28","nodeType":"YulExpressionStatement","src":"15563:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:28","nodeType":"YulIdentifier","src":"15604:3:28"},{"kind":"number","nativeSrc":"15609:4:28","nodeType":"YulLiteral","src":"15609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:28","nodeType":"YulIdentifier","src":"15600:3:28"},"nativeSrc":"15600:14:28","nodeType":"YulFunctionCall","src":"15600:14:28"},{"kind":"number","nativeSrc":"15616:4:28","nodeType":"YulLiteral","src":"15616:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:28","nodeType":"YulIdentifier","src":"15593:6:28"},"nativeSrc":"15593:28:28","nodeType":"YulFunctionCall","src":"15593:28:28"},"nativeSrc":"15593:28:28","nodeType":"YulExpressionStatement","src":"15593:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:28","nodeType":"YulIdentifier","src":"15645:3:28"},{"kind":"number","nativeSrc":"15650:4:28","nodeType":"YulLiteral","src":"15650:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:28","nodeType":"YulIdentifier","src":"15641:3:28"},"nativeSrc":"15641:14:28","nodeType":"YulFunctionCall","src":"15641:14:28"},{"kind":"number","nativeSrc":"15657:4:28","nodeType":"YulLiteral","src":"15657:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:28","nodeType":"YulIdentifier","src":"15634:6:28"},"nativeSrc":"15634:28:28","nodeType":"YulFunctionCall","src":"15634:28:28"},"nativeSrc":"15634:28:28","nodeType":"YulExpressionStatement","src":"15634:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:28","nodeType":"YulIdentifier","src":"15686:3:28"},{"kind":"number","nativeSrc":"15691:4:28","nodeType":"YulLiteral","src":"15691:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:28","nodeType":"YulIdentifier","src":"15682:3:28"},"nativeSrc":"15682:14:28","nodeType":"YulFunctionCall","src":"15682:14:28"},{"name":"b","nativeSrc":"15698:1:28","nodeType":"YulIdentifier","src":"15698:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:28","nodeType":"YulIdentifier","src":"15675:6:28"},"nativeSrc":"15675:25:28","nodeType":"YulFunctionCall","src":"15675:25:28"},"nativeSrc":"15675:25:28","nodeType":"YulExpressionStatement","src":"15675:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:28","nodeType":"YulIdentifier","src":"15724:3:28"},{"kind":"number","nativeSrc":"15729:4:28","nodeType":"YulLiteral","src":"15729:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:28","nodeType":"YulIdentifier","src":"15720:3:28"},"nativeSrc":"15720:14:28","nodeType":"YulFunctionCall","src":"15720:14:28"},{"name":"e","nativeSrc":"15736:1:28","nodeType":"YulIdentifier","src":"15736:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:28","nodeType":"YulIdentifier","src":"15713:6:28"},"nativeSrc":"15713:25:28","nodeType":"YulFunctionCall","src":"15713:25:28"},"nativeSrc":"15713:25:28","nodeType":"YulExpressionStatement","src":"15713:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:28","nodeType":"YulIdentifier","src":"15762:3:28"},{"kind":"number","nativeSrc":"15767:4:28","nodeType":"YulLiteral","src":"15767:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:28","nodeType":"YulIdentifier","src":"15758:3:28"},"nativeSrc":"15758:14:28","nodeType":"YulFunctionCall","src":"15758:14:28"},{"name":"m","nativeSrc":"15774:1:28","nodeType":"YulIdentifier","src":"15774:1:28"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:28","nodeType":"YulIdentifier","src":"15751:6:28"},"nativeSrc":"15751:25:28","nodeType":"YulFunctionCall","src":"15751:25:28"},"nativeSrc":"15751:25:28","nodeType":"YulExpressionStatement","src":"15751:25:28"},{"nativeSrc":"15938:57:28","nodeType":"YulAssignment","src":"15938:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:28","nodeType":"YulIdentifier","src":"15960:3:28"},"nativeSrc":"15960:5:28","nodeType":"YulFunctionCall","src":"15960:5:28"},{"kind":"number","nativeSrc":"15967:4:28","nodeType":"YulLiteral","src":"15967:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:28","nodeType":"YulIdentifier","src":"15973:3:28"},{"kind":"number","nativeSrc":"15978:4:28","nodeType":"YulLiteral","src":"15978:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:28","nodeType":"YulLiteral","src":"15984:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:28","nodeType":"YulLiteral","src":"15990:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:28","nodeType":"YulIdentifier","src":"15949:10:28"},"nativeSrc":"15949:46:28","nodeType":"YulFunctionCall","src":"15949:46:28"},"variableNames":[{"name":"success","nativeSrc":"15938:7:28","nodeType":"YulIdentifier","src":"15938:7:28"}]},{"nativeSrc":"16008:21:28","nodeType":"YulAssignment","src":"16008:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:28","nodeType":"YulLiteral","src":"16024:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:28","nodeType":"YulIdentifier","src":"16018:5:28"},"nativeSrc":"16018:11:28","nodeType":"YulFunctionCall","src":"16018:11:28"},"variableNames":[{"name":"result","nativeSrc":"16008:6:28","nodeType":"YulIdentifier","src":"16008:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4460,"isOffset":false,"isSlot":false,"src":"15698:1:28","valueSize":1},{"declaration":4462,"isOffset":false,"isSlot":false,"src":"15736:1:28","valueSize":1},{"declaration":4464,"isOffset":false,"isSlot":false,"src":"15774:1:28","valueSize":1},{"declaration":4469,"isOffset":false,"isSlot":false,"src":"16008:6:28","valueSize":1},{"declaration":4467,"isOffset":false,"isSlot":false,"src":"15938:7:28","valueSize":1}],"flags":["memory-safe"],"id":4479,"nodeType":"InlineAssembly","src":"14601:1438:28"}]},"documentation":{"id":4458,"nodeType":"StructuredDocumentation","src":"13704:738:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:28","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"b","nameLocation":"14474:1:28","nodeType":"VariableDeclaration","scope":4481,"src":"14466:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"e","nameLocation":"14485:1:28","nodeType":"VariableDeclaration","scope":4481,"src":"14477:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"m","nameLocation":"14496:1:28","nodeType":"VariableDeclaration","scope":4481,"src":"14488:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:28"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"success","nameLocation":"14527:7:28","nodeType":"VariableDeclaration","scope":4481,"src":"14522:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4466,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"result","nameLocation":"14544:6:28","nodeType":"VariableDeclaration","scope":4481,"src":"14536:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:28"},"scope":5436,"src":"14447:1598:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"16242:179:28","statements":[{"assignments":[4494,4496],"declarations":[{"constant":false,"id":4494,"mutability":"mutable","name":"success","nameLocation":"16258:7:28","nodeType":"VariableDeclaration","scope":4516,"src":"16253:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4493,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"result","nameLocation":"16280:6:28","nodeType":"VariableDeclaration","scope":4516,"src":"16267:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4495,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4502,"initialValue":{"arguments":[{"id":4498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"16300:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4499,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"16303:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4500,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"16306:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4497,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4481,4563],"referencedDeclaration":4563,"src":"16290:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:28"},{"condition":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:28","subExpression":{"id":4503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"16323:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"IfStatement","src":"16318:74:28","trueBody":{"id":4512,"nodeType":"Block","src":"16332:60:28","statements":[{"expression":{"arguments":[{"expression":{"id":4508,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"16358:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"16358:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4505,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"16346:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2367_$","typeString":"type(library Panic)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"16346:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"ExpressionStatement","src":"16346:35:28"}]}},{"expression":{"id":4514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"16408:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4492,"id":4515,"nodeType":"Return","src":"16401:13:28"}]},"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"16051:85:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:28","nodeType":"FunctionDefinition","parameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"b","nameLocation":"16170:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"16157:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4483,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"e","nameLocation":"16186:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"16173:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4485,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4488,"mutability":"mutable","name":"m","nameLocation":"16202:1:28","nodeType":"VariableDeclaration","scope":4517,"src":"16189:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4487,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:28"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"16228:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4490,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:28"},"scope":5436,"src":"16141:280:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"16675:771:28","statements":[{"condition":{"arguments":[{"id":4532,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"16700:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4531,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"16689:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4541,"nodeType":"IfStatement","src":"16685:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4535,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4530,"id":4540,"nodeType":"Return","src":"16704:28:28"}},{"assignments":[4543],"declarations":[{"constant":false,"id":4543,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:28","nodeType":"VariableDeclaration","scope":4562,"src":"16743:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4546,"initialValue":{"expression":{"id":4544,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"16758:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:28","memberName":"length","nodeType":"MemberAccess","src":"16758:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:28"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"16848:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4550,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"16874:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:28","memberName":"length","nodeType":"MemberAccess","src":"16874:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4552,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"16884:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:28","memberName":"length","nodeType":"MemberAccess","src":"16884:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4554,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"16894:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"16900:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4556,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"16903:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4557,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"16906:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4548,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4560,"nodeType":"ExpressionStatement","src":"16848:60:28"},{"AST":{"nativeSrc":"16944:496:28","nodeType":"YulBlock","src":"16944:496:28","statements":[{"nativeSrc":"16958:32:28","nodeType":"YulVariableDeclaration","src":"16958:32:28","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:28","nodeType":"YulIdentifier","src":"16977:6:28"},{"kind":"number","nativeSrc":"16985:4:28","nodeType":"YulLiteral","src":"16985:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:28","nodeType":"YulIdentifier","src":"16973:3:28"},"nativeSrc":"16973:17:28","nodeType":"YulFunctionCall","src":"16973:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:28","nodeType":"YulTypedName","src":"16962:7:28","type":""}]},{"nativeSrc":"17080:73:28","nodeType":"YulAssignment","src":"17080:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:28","nodeType":"YulIdentifier","src":"17102:3:28"},"nativeSrc":"17102:5:28","nodeType":"YulFunctionCall","src":"17102:5:28"},{"kind":"number","nativeSrc":"17109:4:28","nodeType":"YulLiteral","src":"17109:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:28","nodeType":"YulIdentifier","src":"17115:7:28"},{"arguments":[{"name":"result","nativeSrc":"17130:6:28","nodeType":"YulIdentifier","src":"17130:6:28"}],"functionName":{"name":"mload","nativeSrc":"17124:5:28","nodeType":"YulIdentifier","src":"17124:5:28"},"nativeSrc":"17124:13:28","nodeType":"YulFunctionCall","src":"17124:13:28"},{"name":"dataPtr","nativeSrc":"17139:7:28","nodeType":"YulIdentifier","src":"17139:7:28"},{"name":"mLen","nativeSrc":"17148:4:28","nodeType":"YulIdentifier","src":"17148:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:28","nodeType":"YulIdentifier","src":"17091:10:28"},"nativeSrc":"17091:62:28","nodeType":"YulFunctionCall","src":"17091:62:28"},"variableNames":[{"name":"success","nativeSrc":"17080:7:28","nodeType":"YulIdentifier","src":"17080:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:28","nodeType":"YulIdentifier","src":"17309:6:28"},{"name":"mLen","nativeSrc":"17317:4:28","nodeType":"YulIdentifier","src":"17317:4:28"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:28","nodeType":"YulIdentifier","src":"17302:6:28"},"nativeSrc":"17302:20:28","nodeType":"YulFunctionCall","src":"17302:20:28"},"nativeSrc":"17302:20:28","nodeType":"YulExpressionStatement","src":"17302:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:28","nodeType":"YulLiteral","src":"17405:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:28","nodeType":"YulIdentifier","src":"17415:7:28"},{"name":"mLen","nativeSrc":"17424:4:28","nodeType":"YulIdentifier","src":"17424:4:28"}],"functionName":{"name":"add","nativeSrc":"17411:3:28","nodeType":"YulIdentifier","src":"17411:3:28"},"nativeSrc":"17411:18:28","nodeType":"YulFunctionCall","src":"17411:18:28"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:28","nodeType":"YulIdentifier","src":"17398:6:28"},"nativeSrc":"17398:32:28","nodeType":"YulFunctionCall","src":"17398:32:28"},"nativeSrc":"17398:32:28","nodeType":"YulExpressionStatement","src":"17398:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":4543,"isOffset":false,"isSlot":false,"src":"17148:4:28","valueSize":1},{"declaration":4543,"isOffset":false,"isSlot":false,"src":"17317:4:28","valueSize":1},{"declaration":4543,"isOffset":false,"isSlot":false,"src":"17424:4:28","valueSize":1},{"declaration":4529,"isOffset":false,"isSlot":false,"src":"16977:6:28","valueSize":1},{"declaration":4529,"isOffset":false,"isSlot":false,"src":"17130:6:28","valueSize":1},{"declaration":4529,"isOffset":false,"isSlot":false,"src":"17309:6:28","valueSize":1},{"declaration":4527,"isOffset":false,"isSlot":false,"src":"17080:7:28","valueSize":1}],"flags":["memory-safe"],"id":4561,"nodeType":"InlineAssembly","src":"16919:521:28"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"16427:88:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:28","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"b","nameLocation":"16561:1:28","nodeType":"VariableDeclaration","scope":4563,"src":"16548:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4519,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"e","nameLocation":"16585:1:28","nodeType":"VariableDeclaration","scope":4563,"src":"16572:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4521,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"m","nameLocation":"16609:1:28","nodeType":"VariableDeclaration","scope":4563,"src":"16596:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:28"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"success","nameLocation":"16645:7:28","nodeType":"VariableDeclaration","scope":4563,"src":"16640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4526,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"result","nameLocation":"16667:6:28","nodeType":"VariableDeclaration","scope":4563,"src":"16654:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4528,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:28"},"scope":5436,"src":"16520:926:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4595,"nodeType":"Block","src":"17601:176:28","statements":[{"body":{"id":4591,"nodeType":"Block","src":"17658:92:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4582,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"17676:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4584,"indexExpression":{"id":4583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"nodeType":"IfStatement","src":"17672:68:28","trueBody":{"id":4589,"nodeType":"Block","src":"17695:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4570,"id":4588,"nodeType":"Return","src":"17713:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17631:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4576,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"17635:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:28","memberName":"length","nodeType":"MemberAccess","src":"17635:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"initializationExpression":{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"i","nameLocation":"17624:1:28","nodeType":"VariableDeclaration","scope":4592,"src":"17616:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:28","subExpression":{"id":4579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17655:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4581,"nodeType":"ExpressionStatement","src":"17653:3:28"},"nodeType":"ForStatement","src":"17611:139:28"},{"expression":{"hexValue":"74727565","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4570,"id":4594,"nodeType":"Return","src":"17759:11:28"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"17452:72:28","text":" @dev Returns whether the provided byte array is zero."},"id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:28","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:28","nodeType":"VariableDeclaration","scope":4596,"src":"17549:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4565,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:28"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"17595:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4568,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:28"},"scope":5436,"src":"17529:248:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4814,"nodeType":"Block","src":"18137:5124:28","statements":[{"id":4813,"nodeType":"UncheckedBlock","src":"18147:5108:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"18241:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"18237:53:28","trueBody":{"id":4609,"nodeType":"Block","src":"18249:41:28","statements":[{"expression":{"id":4607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"18274:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4603,"id":4608,"nodeType":"Return","src":"18267:8:28"}]}},{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"aa","nameLocation":"19225:2:28","nodeType":"VariableDeclaration","scope":4813,"src":"19217:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4614,"initialValue":{"id":4613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"19230:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:28"},{"assignments":[4616],"declarations":[{"constant":false,"id":4616,"mutability":"mutable","name":"xn","nameLocation":"19253:2:28","nodeType":"VariableDeclaration","scope":4813,"src":"19245:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4618,"initialValue":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"19274:92:28","trueBody":{"id":4633,"nodeType":"Block","src":"19296:70:28","statements":[{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19314:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4628,"nodeType":"ExpressionStatement","src":"19314:10:28"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19342:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"19342:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19383:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4650,"nodeType":"IfStatement","src":"19379:90:28","trueBody":{"id":4649,"nodeType":"Block","src":"19400:69:28","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4641,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19418:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"19418:9:28"},{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4645,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19445:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4648,"nodeType":"ExpressionStatement","src":"19445:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19486:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4666,"nodeType":"IfStatement","src":"19482:90:28","trueBody":{"id":4665,"nodeType":"Block","src":"19503:69:28","statements":[{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4657,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19521:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"19521:9:28"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19548:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"19548:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19589:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"19585:89:28","trueBody":{"id":4681,"nodeType":"Block","src":"19606:68:28","statements":[{"expression":{"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4673,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19624:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4676,"nodeType":"ExpressionStatement","src":"19624:9:28"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4677,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19651:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"19651:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19691:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"IfStatement","src":"19687:87:28","trueBody":{"id":4697,"nodeType":"Block","src":"19707:67:28","statements":[{"expression":{"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19725:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4692,"nodeType":"ExpressionStatement","src":"19725:8:28"},{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4693,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19751:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"19751:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19791:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4714,"nodeType":"IfStatement","src":"19787:87:28","trueBody":{"id":4713,"nodeType":"Block","src":"19807:67:28","statements":[{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19825:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"19825:8:28"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19851:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"19851:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"19891:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4726,"nodeType":"IfStatement","src":"19887:61:28","trueBody":{"id":4725,"nodeType":"Block","src":"19907:41:28","statements":[{"expression":{"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4721,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"19925:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4724,"nodeType":"ExpressionStatement","src":"19925:8:28"}]}},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4727,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"20368:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"20378:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4735,"nodeType":"ExpressionStatement","src":"20368:18:28"},{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4736,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22273:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22279:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22284:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4739,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22288:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4746,"nodeType":"ExpressionStatement","src":"22273:23:28"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22382:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22388:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22393:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4750,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22397:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"22382:23:28"},{"expression":{"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22493:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22499:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22504:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4761,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22508:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4768,"nodeType":"ExpressionStatement","src":"22493:23:28"},{"expression":{"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4769,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22602:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22608:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22613:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4772,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22617:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4779,"nodeType":"ExpressionStatement","src":"22602:23:28"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4780,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22712:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22718:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22723:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4783,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22727:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"22712:23:28"},{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22822:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22828:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"22833:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4794,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"22837:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"22822:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"23211:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"23232:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"23237:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4807,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"23241:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4803,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"23216:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"23216:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4603,"id":4812,"nodeType":"Return","src":"23204:40:28"}]}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"17783:292:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:28","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"a","nameLocation":"18102:1:28","nodeType":"VariableDeclaration","scope":4815,"src":"18094:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:28"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"18128:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:28"},"scope":5436,"src":"18080:5181:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4848,"nodeType":"Block","src":"23434:171:28","statements":[{"id":4847,"nodeType":"UncheckedBlock","src":"23444:155:28","statements":[{"assignments":[4827],"declarations":[{"constant":false,"id":4827,"mutability":"mutable","name":"result","nameLocation":"23476:6:28","nodeType":"VariableDeclaration","scope":4847,"src":"23468:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4831,"initialValue":{"arguments":[{"id":4829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"23490:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4828,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4815,4849],"referencedDeclaration":4815,"src":"23485:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"23513:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4836,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"23555:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":4835,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"23538:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3842_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"23568:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"23577:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"23586:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4833,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"23522:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"23522:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4825,"id":4846,"nodeType":"Return","src":"23506:82:28"}]}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"23267:86:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4849,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:28","nodeType":"FunctionDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"a","nameLocation":"23380:1:28","nodeType":"VariableDeclaration","scope":4849,"src":"23372:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:28","nodeType":"VariableDeclaration","scope":4849,"src":"23383:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":4820,"nodeType":"UserDefinedTypeName","pathNode":{"id":4819,"name":"Rounding","nameLocations":["23383:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"23383:8:28"},"referencedDeclaration":3842,"src":"23383:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:28"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4849,"src":"23425:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:28"},"scope":5436,"src":"23358:247:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"23796:981:28","statements":[{"assignments":[4858],"declarations":[{"constant":false,"id":4858,"mutability":"mutable","name":"result","nameLocation":"23814:6:28","nodeType":"VariableDeclaration","scope":5044,"src":"23806:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4860,"initialValue":{"hexValue":"30","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:28"},{"assignments":[4862],"declarations":[{"constant":false,"id":4862,"mutability":"mutable","name":"exp","nameLocation":"23842:3:28","nodeType":"VariableDeclaration","scope":5044,"src":"23834:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4863,"nodeType":"VariableDeclarationStatement","src":"23834:11:28"},{"id":5041,"nodeType":"UncheckedBlock","src":"23855:893:28","statements":[{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4864,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23879:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"23907:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4866,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"23891:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"23891:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4879,"nodeType":"ExpressionStatement","src":"23879:51:28"},{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"23944:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4881,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23954:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4883,"nodeType":"ExpressionStatement","src":"23944:13:28"},{"expression":{"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"23971:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4885,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23981:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4887,"nodeType":"ExpressionStatement","src":"23971:13:28"},{"expression":{"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23999:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24026:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4890,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24010:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24010:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4903,"nodeType":"ExpressionStatement","src":"23999:49:28"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24062:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4905,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24072:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"24062:13:28"},{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24089:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4909,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24099:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"24089:13:28"},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24117:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24144:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24128:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24128:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"24117:49:28"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24180:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4929,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24190:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"24180:13:28"},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24207:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4933,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24217:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4935,"nodeType":"ExpressionStatement","src":"24207:13:28"},{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24235:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24262:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24246:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24246:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4951,"nodeType":"ExpressionStatement","src":"24235:49:28"},{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24298:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4953,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24308:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4955,"nodeType":"ExpressionStatement","src":"24298:13:28"},{"expression":{"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24325:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4957,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24335:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"nodeType":"ExpressionStatement","src":"24325:13:28"},{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4960,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24353:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4962,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24363:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24363:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4975,"nodeType":"ExpressionStatement","src":"24353:47:28"},{"expression":{"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24414:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4977,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24424:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4979,"nodeType":"ExpressionStatement","src":"24414:13:28"},{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24441:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4981,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24451:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"24441:13:28"},{"expression":{"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4984,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24469:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24495:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4986,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24479:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24479:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4999,"nodeType":"ExpressionStatement","src":"24469:47:28"},{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24530:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5001,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24540:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5003,"nodeType":"ExpressionStatement","src":"24530:13:28"},{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24557:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5005,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24567:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5007,"nodeType":"ExpressionStatement","src":"24557:13:28"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5008,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24585:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5010,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24595:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24595:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5023,"nodeType":"ExpressionStatement","src":"24585:47:28"},{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24646:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5025,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24656:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"24646:13:28"},{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24673:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5029,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24683:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"24673:13:28"},{"expression":{"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24701:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"24727:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5033,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"24711:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"24711:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5040,"nodeType":"ExpressionStatement","src":"24701:36:28"}]},{"expression":{"id":5042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"24764:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4856,"id":5043,"nodeType":"Return","src":"24757:13:28"}]},"documentation":{"id":4850,"nodeType":"StructuredDocumentation","src":"23611:119:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:28","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"value","nameLocation":"23757:5:28","nodeType":"VariableDeclaration","scope":5045,"src":"23749:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4851,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:28"},"returnParameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5045,"src":"23787:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:28"},"scope":5436,"src":"23735:1042:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"25010:175:28","statements":[{"id":5077,"nodeType":"UncheckedBlock","src":"25020:159:28","statements":[{"assignments":[5057],"declarations":[{"constant":false,"id":5057,"mutability":"mutable","name":"result","nameLocation":"25052:6:28","nodeType":"VariableDeclaration","scope":5077,"src":"25044:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5061,"initialValue":{"arguments":[{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"25066:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5058,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5045,5079],"referencedDeclaration":5045,"src":"25061:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"25093:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5066,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"25135:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":5065,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"25118:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3842_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"25153:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"25162:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5063,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"25102:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"25102:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5055,"id":5076,"nodeType":"Return","src":"25086:82:28"}]}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"24783:142:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:28","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"value","nameLocation":"24952:5:28","nodeType":"VariableDeclaration","scope":5079,"src":"24944:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5051,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:28","nodeType":"VariableDeclaration","scope":5079,"src":"24959:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":5050,"nodeType":"UserDefinedTypeName","pathNode":{"id":5049,"name":"Rounding","nameLocations":["24959:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"24959:8:28"},"referencedDeclaration":3842,"src":"24959:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:28"},"returnParameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"25001:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:28"},"scope":5436,"src":"24930:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5207,"nodeType":"Block","src":"25378:854:28","statements":[{"assignments":[5088],"declarations":[{"constant":false,"id":5088,"mutability":"mutable","name":"result","nameLocation":"25396:6:28","nodeType":"VariableDeclaration","scope":5207,"src":"25388:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5090,"initialValue":{"hexValue":"30","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:28"},{"id":5204,"nodeType":"UncheckedBlock","src":"25416:787:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25444:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5107,"nodeType":"IfStatement","src":"25440:103:28","trueBody":{"id":5106,"nodeType":"Block","src":"25463:80:28","statements":[{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25481:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"25481:17:28"},{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25516:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5105,"nodeType":"ExpressionStatement","src":"25516:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25560:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5124,"nodeType":"IfStatement","src":"25556:103:28","trueBody":{"id":5123,"nodeType":"Block","src":"25579:80:28","statements":[{"expression":{"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25597:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5118,"nodeType":"ExpressionStatement","src":"25597:17:28"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25632:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"25632:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25676:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5141,"nodeType":"IfStatement","src":"25672:103:28","trueBody":{"id":5140,"nodeType":"Block","src":"25695:80:28","statements":[{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25713:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"25713:17:28"},{"expression":{"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25748:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5139,"nodeType":"ExpressionStatement","src":"25748:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25792:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5158,"nodeType":"IfStatement","src":"25788:100:28","trueBody":{"id":5157,"nodeType":"Block","src":"25810:78:28","statements":[{"expression":{"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25828:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5152,"nodeType":"ExpressionStatement","src":"25828:16:28"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25862:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"25862:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25905:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5175,"nodeType":"IfStatement","src":"25901:100:28","trueBody":{"id":5174,"nodeType":"Block","src":"25923:78:28","statements":[{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"25941:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5169,"nodeType":"ExpressionStatement","src":"25941:16:28"},{"expression":{"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25975:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"nodeType":"ExpressionStatement","src":"25975:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"26018:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"26014:100:28","trueBody":{"id":5191,"nodeType":"Block","src":"26036:78:28","statements":[{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"26054:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"26054:16:28"},{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"26088:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"26088:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"26131:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5203,"nodeType":"IfStatement","src":"26127:66:28","trueBody":{"id":5202,"nodeType":"Block","src":"26149:44:28","statements":[{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"26167:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"nodeType":"ExpressionStatement","src":"26167:11:28"}]}}]},{"expression":{"id":5205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"26219:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5086,"id":5206,"nodeType":"Return","src":"26212:13:28"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"25191:120:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5208,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:28","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"25339:5:28","nodeType":"VariableDeclaration","scope":5208,"src":"25331:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:28"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5208,"src":"25369:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:28"},"scope":5436,"src":"25316:916:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"26467:177:28","statements":[{"id":5240,"nodeType":"UncheckedBlock","src":"26477:161:28","statements":[{"assignments":[5220],"declarations":[{"constant":false,"id":5220,"mutability":"mutable","name":"result","nameLocation":"26509:6:28","nodeType":"VariableDeclaration","scope":5240,"src":"26501:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5224,"initialValue":{"arguments":[{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"26524:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5221,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5208,5242],"referencedDeclaration":5208,"src":"26518:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"26551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5229,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"26593:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":5228,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"26576:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3842_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"26612:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"26621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5226,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"26560:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"26560:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5218,"id":5239,"nodeType":"Return","src":"26544:83:28"}]}]},"documentation":{"id":5209,"nodeType":"StructuredDocumentation","src":"26238:143:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:28","nodeType":"FunctionDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"value","nameLocation":"26409:5:28","nodeType":"VariableDeclaration","scope":5242,"src":"26401:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5214,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:28","nodeType":"VariableDeclaration","scope":5242,"src":"26416:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":5213,"nodeType":"UserDefinedTypeName","pathNode":{"id":5212,"name":"Rounding","nameLocations":["26416:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"26416:8:28"},"referencedDeclaration":3842,"src":"26416:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:28"},"returnParameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5242,"src":"26458:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5216,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:28"},"scope":5436,"src":"26386:258:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5378,"nodeType":"Block","src":"26964:674:28","statements":[{"assignments":[5251],"declarations":[{"constant":false,"id":5251,"mutability":"mutable","name":"result","nameLocation":"26982:6:28","nodeType":"VariableDeclaration","scope":5378,"src":"26974:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5253,"initialValue":{"hexValue":"30","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:28"},{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:28","nodeType":"VariableDeclaration","scope":5378,"src":"27002:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5256,"nodeType":"VariableDeclarationStatement","src":"27002:12:28"},{"id":5375,"nodeType":"UncheckedBlock","src":"27024:585:28","statements":[{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5257,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27048:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27071:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27055:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27055:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5270,"nodeType":"ExpressionStatement","src":"27048:46:28"},{"expression":{"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27108:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27118:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5276,"nodeType":"ExpressionStatement","src":"27108:20:28"},{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27142:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27152:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5282,"nodeType":"ExpressionStatement","src":"27142:19:28"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5283,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27176:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27199:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27183:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27183:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5296,"nodeType":"ExpressionStatement","src":"27176:45:28"},{"expression":{"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27235:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27245:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5302,"nodeType":"ExpressionStatement","src":"27235:19:28"},{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27268:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5304,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27278:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5308,"nodeType":"ExpressionStatement","src":"27268:18:28"},{"expression":{"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5309,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27301:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27324:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5310,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27308:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27308:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5322,"nodeType":"ExpressionStatement","src":"27301:45:28"},{"expression":{"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27360:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27370:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5328,"nodeType":"ExpressionStatement","src":"27360:19:28"},{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27393:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27403:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5334,"nodeType":"ExpressionStatement","src":"27393:18:28"},{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27426:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27449:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5336,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27433:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27433:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"27426:45:28"},{"expression":{"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27485:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27495:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5354,"nodeType":"ExpressionStatement","src":"27485:19:28"},{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27518:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"27528:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5360,"nodeType":"ExpressionStatement","src":"27518:18:28"},{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27551:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27577:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5362,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27561:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27561:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"27551:47:28"}]},{"expression":{"id":5376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27625:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5249,"id":5377,"nodeType":"Return","src":"27618:13:28"}]},"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"26650:246:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5379,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:28","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"value","nameLocation":"26925:5:28","nodeType":"VariableDeclaration","scope":5379,"src":"26917:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:28"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5379,"src":"26955:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:28"},"scope":5436,"src":"26901:737:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5415,"nodeType":"Block","src":"27875:184:28","statements":[{"id":5414,"nodeType":"UncheckedBlock","src":"27885:168:28","statements":[{"assignments":[5391],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"result","nameLocation":"27917:6:28","nodeType":"VariableDeclaration","scope":5414,"src":"27909:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5395,"initialValue":{"arguments":[{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"27933:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5379,5416],"referencedDeclaration":5379,"src":"27926:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"27960:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5400,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"28002:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":5399,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"27985:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3842_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"28021:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"28036:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5397,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"27969:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"27969:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5389,"id":5413,"nodeType":"Return","src":"27953:89:28"}]}]},"documentation":{"id":5380,"nodeType":"StructuredDocumentation","src":"27644:144:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5416,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:28","nodeType":"FunctionDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"mutability":"mutable","name":"value","nameLocation":"27817:5:28","nodeType":"VariableDeclaration","scope":5416,"src":"27809:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5385,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:28","nodeType":"VariableDeclaration","scope":5416,"src":"27824:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":5384,"nodeType":"UserDefinedTypeName","pathNode":{"id":5383,"name":"Rounding","nameLocations":["27824:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"27824:8:28"},"referencedDeclaration":3842,"src":"27824:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:28"},"returnParameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"27866:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:28"},"scope":5436,"src":"27793:266:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"28257:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5427,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"28280:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}],"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5425,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:28","typeDescriptions":{}}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5424,"id":5433,"nodeType":"Return","src":"28267:31:28"}]},"documentation":{"id":5417,"nodeType":"StructuredDocumentation","src":"28065:113:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:28","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:28","nodeType":"VariableDeclaration","scope":5435,"src":"28209:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"},"typeName":{"id":5419,"nodeType":"UserDefinedTypeName","pathNode":{"id":5418,"name":"Rounding","nameLocations":["28209:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"28209:8:28"},"referencedDeclaration":3842,"src":"28209:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3842","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:28"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5435,"src":"28251:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5422,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:28"},"scope":5436,"src":"28183:122:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5437,"src":"281:28026:28","usedErrors":[],"usedEvents":[]}],"src":"103:28205:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7201]},"id":7202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5438,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"218:550:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7201,"linearizedBaseContracts":[7201],"name":"SafeCast","nameLocation":"777:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"792:68:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5446,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:29","nodeType":"ErrorDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"bits","nameLocation":"908:4:29","nodeType":"VariableDeclaration","scope":5446,"src":"902:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5441,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"value","nameLocation":"922:5:29","nodeType":"VariableDeclaration","scope":5446,"src":"914:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:29"},"src":"865:64:29"},{"documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"935:75:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5451,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:29","nodeType":"ErrorDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"value","nameLocation":"1056:5:29","nodeType":"VariableDeclaration","scope":5451,"src":"1049:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5448,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:29"},"src":"1015:48:29"},{"documentation":{"id":5452,"nodeType":"StructuredDocumentation","src":"1069:67:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5458,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:29","nodeType":"ErrorDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"bits","nameLocation":"1183:4:29","nodeType":"VariableDeclaration","scope":5458,"src":"1177:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5453,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5456,"mutability":"mutable","name":"value","nameLocation":"1196:5:29","nodeType":"VariableDeclaration","scope":5458,"src":"1189:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5455,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:29"},"src":"1141:62:29"},{"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"1209:75:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5463,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:29","nodeType":"ErrorDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"value","nameLocation":"1331:5:29","nodeType":"VariableDeclaration","scope":5463,"src":"1323:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:29"},"src":"1289:49:29"},{"body":{"id":5490,"nodeType":"Block","src":"1695:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5473,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:29","memberName":"max","nodeType":"MemberAccess","src":"1717:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5484,"nodeType":"IfStatement","src":"1705:105:29","trueBody":{"id":5483,"nodeType":"Block","src":"1736:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1793:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"1757:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5482,"nodeType":"RevertStatement","src":"1750:49:29"}]}},{"expression":{"arguments":[{"id":5487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5485,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:29","typeDescriptions":{}}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5470,"id":5489,"nodeType":"Return","src":"1819:21:29"}]},"documentation":{"id":5464,"nodeType":"StructuredDocumentation","src":"1344:280:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:29","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"value","nameLocation":"1656:5:29","nodeType":"VariableDeclaration","scope":5491,"src":"1648:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:29"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5491,"src":"1686:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5468,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:29"},"scope":7201,"src":"1629:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5518,"nodeType":"Block","src":"2204:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5501,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5500,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:29","memberName":"max","nodeType":"MemberAccess","src":"2226:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5512,"nodeType":"IfStatement","src":"2214:105:29","trueBody":{"id":5511,"nodeType":"Block","src":"2245:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2302:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"2266:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5510,"nodeType":"RevertStatement","src":"2259:49:29"}]}},{"expression":{"arguments":[{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2343:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5513,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:29","typeDescriptions":{}}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5498,"id":5517,"nodeType":"Return","src":"2328:21:29"}]},"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"1853:280:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5519,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:29","nodeType":"FunctionDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"value","nameLocation":"2165:5:29","nodeType":"VariableDeclaration","scope":5519,"src":"2157:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:29"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5519,"src":"2195:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5496,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:29"},"scope":7201,"src":"2138:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5546,"nodeType":"Block","src":"2713:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"2727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5529,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5528,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:29","memberName":"max","nodeType":"MemberAccess","src":"2735:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5540,"nodeType":"IfStatement","src":"2723:105:29","trueBody":{"id":5539,"nodeType":"Block","src":"2754:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"2775:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5538,"nodeType":"RevertStatement","src":"2768:49:29"}]}},{"expression":{"arguments":[{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"2852:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5541,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:29","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5526,"id":5545,"nodeType":"Return","src":"2837:21:29"}]},"documentation":{"id":5520,"nodeType":"StructuredDocumentation","src":"2362:280:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5547,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:29","nodeType":"FunctionDefinition","parameters":{"id":5523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"value","nameLocation":"2674:5:29","nodeType":"VariableDeclaration","scope":5547,"src":"2666:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:29"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5547,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5524,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":7201,"src":"2647:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5574,"nodeType":"Block","src":"3222:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"3236:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5557,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:29","memberName":"max","nodeType":"MemberAccess","src":"3244:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"nodeType":"IfStatement","src":"3232:105:29","trueBody":{"id":5567,"nodeType":"Block","src":"3263:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"3320:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"3284:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"RevertStatement","src":"3277:49:29"}]}},{"expression":{"arguments":[{"id":5571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"3361:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5569,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:29","typeDescriptions":{}}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5554,"id":5573,"nodeType":"Return","src":"3346:21:29"}]},"documentation":{"id":5548,"nodeType":"StructuredDocumentation","src":"2871:280:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5575,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:29","nodeType":"FunctionDefinition","parameters":{"id":5551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5550,"mutability":"mutable","name":"value","nameLocation":"3183:5:29","nodeType":"VariableDeclaration","scope":5575,"src":"3175:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:29"},"returnParameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5575,"src":"3213:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5552,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:29"},"scope":7201,"src":"3156:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5602,"nodeType":"Block","src":"3731:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"3745:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5585,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:29","memberName":"max","nodeType":"MemberAccess","src":"3753:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5596,"nodeType":"IfStatement","src":"3741:105:29","trueBody":{"id":5595,"nodeType":"Block","src":"3772:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"3829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"3793:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5594,"nodeType":"RevertStatement","src":"3786:49:29"}]}},{"expression":{"arguments":[{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"3870:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5597,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:29","typeDescriptions":{}}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5582,"id":5601,"nodeType":"Return","src":"3855:21:29"}]},"documentation":{"id":5576,"nodeType":"StructuredDocumentation","src":"3380:280:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5603,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:29","nodeType":"FunctionDefinition","parameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"value","nameLocation":"3692:5:29","nodeType":"VariableDeclaration","scope":5603,"src":"3684:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:29"},"returnParameters":{"id":5582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5603,"src":"3722:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5580,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:29"},"scope":7201,"src":"3665:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5630,"nodeType":"Block","src":"4240:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"4254:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5613,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:29","memberName":"max","nodeType":"MemberAccess","src":"4262:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5624,"nodeType":"IfStatement","src":"4250:105:29","trueBody":{"id":5623,"nodeType":"Block","src":"4281:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"4338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"4302:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"RevertStatement","src":"4295:49:29"}]}},{"expression":{"arguments":[{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"4379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5625,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:29","typeDescriptions":{}}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5610,"id":5629,"nodeType":"Return","src":"4364:21:29"}]},"documentation":{"id":5604,"nodeType":"StructuredDocumentation","src":"3889:280:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:29","nodeType":"FunctionDefinition","parameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"value","nameLocation":"4201:5:29","nodeType":"VariableDeclaration","scope":5631,"src":"4193:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:29"},"returnParameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"4231:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5608,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:29"},"scope":7201,"src":"4174:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5658,"nodeType":"Block","src":"4749:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4763:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5641,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:29","memberName":"max","nodeType":"MemberAccess","src":"4771:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"4759:105:29","trueBody":{"id":5651,"nodeType":"Block","src":"4790:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4847:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5646,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"4811:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5650,"nodeType":"RevertStatement","src":"4804:49:29"}]}},{"expression":{"arguments":[{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4888:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5653,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:29","typeDescriptions":{}}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5638,"id":5657,"nodeType":"Return","src":"4873:21:29"}]},"documentation":{"id":5632,"nodeType":"StructuredDocumentation","src":"4398:280:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5659,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:29","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"value","nameLocation":"4710:5:29","nodeType":"VariableDeclaration","scope":5659,"src":"4702:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:29"},"returnParameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5659,"src":"4740:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5636,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:29"},"scope":7201,"src":"4683:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5686,"nodeType":"Block","src":"5258:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"5272:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5669,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5668,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:29","memberName":"max","nodeType":"MemberAccess","src":"5280:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5680,"nodeType":"IfStatement","src":"5268:105:29","trueBody":{"id":5679,"nodeType":"Block","src":"5299:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"5356:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"5320:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5678,"nodeType":"RevertStatement","src":"5313:49:29"}]}},{"expression":{"arguments":[{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"5397:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5681,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:29","typeDescriptions":{}}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5666,"id":5685,"nodeType":"Return","src":"5382:21:29"}]},"documentation":{"id":5660,"nodeType":"StructuredDocumentation","src":"4907:280:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:29","nodeType":"FunctionDefinition","parameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"value","nameLocation":"5219:5:29","nodeType":"VariableDeclaration","scope":5687,"src":"5211:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:29"},"returnParameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5687,"src":"5249:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5664,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:29"},"scope":7201,"src":"5192:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5714,"nodeType":"Block","src":"5767:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"5781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5697,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:29","memberName":"max","nodeType":"MemberAccess","src":"5789:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5708,"nodeType":"IfStatement","src":"5777:105:29","trueBody":{"id":5707,"nodeType":"Block","src":"5808:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"5865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"5829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5706,"nodeType":"RevertStatement","src":"5822:49:29"}]}},{"expression":{"arguments":[{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"5906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5709,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:29","typeDescriptions":{}}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5694,"id":5713,"nodeType":"Return","src":"5891:21:29"}]},"documentation":{"id":5688,"nodeType":"StructuredDocumentation","src":"5416:280:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5715,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:29","nodeType":"FunctionDefinition","parameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"value","nameLocation":"5728:5:29","nodeType":"VariableDeclaration","scope":5715,"src":"5720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:29"},"returnParameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5715,"src":"5758:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5692,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:29"},"scope":7201,"src":"5701:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"6276:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"6290:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5725,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:29","memberName":"max","nodeType":"MemberAccess","src":"6298:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"6286:105:29","trueBody":{"id":5735,"nodeType":"Block","src":"6317:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"6374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6338:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5734,"nodeType":"RevertStatement","src":"6331:49:29"}]}},{"expression":{"arguments":[{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"6415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5737,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:29","typeDescriptions":{}}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5722,"id":5741,"nodeType":"Return","src":"6400:21:29"}]},"documentation":{"id":5716,"nodeType":"StructuredDocumentation","src":"5925:280:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:29","nodeType":"FunctionDefinition","parameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"value","nameLocation":"6237:5:29","nodeType":"VariableDeclaration","scope":5743,"src":"6229:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:29"},"returnParameters":{"id":5722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5743,"src":"6267:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5720,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:29"},"scope":7201,"src":"6210:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5770,"nodeType":"Block","src":"6785:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"6799:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5753,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:29","memberName":"max","nodeType":"MemberAccess","src":"6807:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5764,"nodeType":"IfStatement","src":"6795:105:29","trueBody":{"id":5763,"nodeType":"Block","src":"6826:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"6883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"6847:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5762,"nodeType":"RevertStatement","src":"6840:49:29"}]}},{"expression":{"arguments":[{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"6924:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5765,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:29","typeDescriptions":{}}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5750,"id":5769,"nodeType":"Return","src":"6909:21:29"}]},"documentation":{"id":5744,"nodeType":"StructuredDocumentation","src":"6434:280:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5771,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:29","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"value","nameLocation":"6746:5:29","nodeType":"VariableDeclaration","scope":5771,"src":"6738:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:29"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5771,"src":"6776:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5748,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:29"},"scope":7201,"src":"6719:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"7294:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"7308:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5781,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:29","memberName":"max","nodeType":"MemberAccess","src":"7316:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5792,"nodeType":"IfStatement","src":"7304:105:29","trueBody":{"id":5791,"nodeType":"Block","src":"7335:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"7392:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"7356:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5790,"nodeType":"RevertStatement","src":"7349:49:29"}]}},{"expression":{"arguments":[{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"7433:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5793,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:29","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5778,"id":5797,"nodeType":"Return","src":"7418:21:29"}]},"documentation":{"id":5772,"nodeType":"StructuredDocumentation","src":"6943:280:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:29","nodeType":"FunctionDefinition","parameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"value","nameLocation":"7255:5:29","nodeType":"VariableDeclaration","scope":5799,"src":"7247:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:29"},"returnParameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5799,"src":"7285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5776,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:29"},"scope":7201,"src":"7228:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5826,"nodeType":"Block","src":"7803:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"7817:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5809,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5808,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:29","memberName":"max","nodeType":"MemberAccess","src":"7825:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5820,"nodeType":"IfStatement","src":"7813:105:29","trueBody":{"id":5819,"nodeType":"Block","src":"7844:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"7901:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"7865:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5818,"nodeType":"RevertStatement","src":"7858:49:29"}]}},{"expression":{"arguments":[{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"7942:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5821,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:29","typeDescriptions":{}}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5806,"id":5825,"nodeType":"Return","src":"7927:21:29"}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"7452:280:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:29","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"value","nameLocation":"7764:5:29","nodeType":"VariableDeclaration","scope":5827,"src":"7756:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:29"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5827,"src":"7794:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5804,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:29"},"scope":7201,"src":"7737:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"8312:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"8326:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5837,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:29","memberName":"max","nodeType":"MemberAccess","src":"8334:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5848,"nodeType":"IfStatement","src":"8322:105:29","trueBody":{"id":5847,"nodeType":"Block","src":"8353:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"8410:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5842,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"8374:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5846,"nodeType":"RevertStatement","src":"8367:49:29"}]}},{"expression":{"arguments":[{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"8451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5849,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:29","typeDescriptions":{}}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5834,"id":5853,"nodeType":"Return","src":"8436:21:29"}]},"documentation":{"id":5828,"nodeType":"StructuredDocumentation","src":"7961:280:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:29","nodeType":"FunctionDefinition","parameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"value","nameLocation":"8273:5:29","nodeType":"VariableDeclaration","scope":5855,"src":"8265:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:29"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5855,"src":"8303:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5832,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:29"},"scope":7201,"src":"8246:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5882,"nodeType":"Block","src":"8821:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"8835:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5865,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:29","memberName":"max","nodeType":"MemberAccess","src":"8843:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5876,"nodeType":"IfStatement","src":"8831:105:29","trueBody":{"id":5875,"nodeType":"Block","src":"8862:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"8919:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"8883:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5874,"nodeType":"RevertStatement","src":"8876:49:29"}]}},{"expression":{"arguments":[{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"8960:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5877,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:29","typeDescriptions":{}}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5862,"id":5881,"nodeType":"Return","src":"8945:21:29"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"8470:280:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5883,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:29","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"8782:5:29","nodeType":"VariableDeclaration","scope":5883,"src":"8774:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:29"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5883,"src":"8812:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5860,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:29"},"scope":7201,"src":"8755:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5910,"nodeType":"Block","src":"9330:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"9344:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5893,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:29","memberName":"max","nodeType":"MemberAccess","src":"9352:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5904,"nodeType":"IfStatement","src":"9340:105:29","trueBody":{"id":5903,"nodeType":"Block","src":"9371:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"9428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"9392:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5902,"nodeType":"RevertStatement","src":"9385:49:29"}]}},{"expression":{"arguments":[{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"9469:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5905,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:29","typeDescriptions":{}}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5890,"id":5909,"nodeType":"Return","src":"9454:21:29"}]},"documentation":{"id":5884,"nodeType":"StructuredDocumentation","src":"8979:280:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5911,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:29","nodeType":"FunctionDefinition","parameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"value","nameLocation":"9291:5:29","nodeType":"VariableDeclaration","scope":5911,"src":"9283:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5885,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:29"},"returnParameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5911,"src":"9321:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5888,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:29"},"scope":7201,"src":"9264:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5938,"nodeType":"Block","src":"9839:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5921,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:29","memberName":"max","nodeType":"MemberAccess","src":"9861:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5932,"nodeType":"IfStatement","src":"9849:105:29","trueBody":{"id":5931,"nodeType":"Block","src":"9880:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9937:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"9901:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5930,"nodeType":"RevertStatement","src":"9894:49:29"}]}},{"expression":{"arguments":[{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9978:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5933,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:29","typeDescriptions":{}}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5918,"id":5937,"nodeType":"Return","src":"9963:21:29"}]},"documentation":{"id":5912,"nodeType":"StructuredDocumentation","src":"9488:280:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:29","nodeType":"FunctionDefinition","parameters":{"id":5915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"value","nameLocation":"9800:5:29","nodeType":"VariableDeclaration","scope":5939,"src":"9792:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:29"},"returnParameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5939,"src":"9830:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5916,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:29"},"scope":7201,"src":"9773:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5966,"nodeType":"Block","src":"10348:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"10362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5949,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:29","memberName":"max","nodeType":"MemberAccess","src":"10370:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5960,"nodeType":"IfStatement","src":"10358:105:29","trueBody":{"id":5959,"nodeType":"Block","src":"10389:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"10446:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"10410:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5958,"nodeType":"RevertStatement","src":"10403:49:29"}]}},{"expression":{"arguments":[{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"10487:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5961,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:29","typeDescriptions":{}}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5946,"id":5965,"nodeType":"Return","src":"10472:21:29"}]},"documentation":{"id":5940,"nodeType":"StructuredDocumentation","src":"9997:280:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:29","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"value","nameLocation":"10309:5:29","nodeType":"VariableDeclaration","scope":5967,"src":"10301:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:29"},"returnParameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5967,"src":"10339:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5944,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:29"},"scope":7201,"src":"10282:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5994,"nodeType":"Block","src":"10857:152:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"10871:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5977,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:29","memberName":"max","nodeType":"MemberAccess","src":"10879:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"10867:105:29","trueBody":{"id":5987,"nodeType":"Block","src":"10898:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"10955:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"10919:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5986,"nodeType":"RevertStatement","src":"10912:49:29"}]}},{"expression":{"arguments":[{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"10996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5989,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:29","typeDescriptions":{}}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5974,"id":5993,"nodeType":"Return","src":"10981:21:29"}]},"documentation":{"id":5968,"nodeType":"StructuredDocumentation","src":"10506:280:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:29","nodeType":"FunctionDefinition","parameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"value","nameLocation":"10818:5:29","nodeType":"VariableDeclaration","scope":5995,"src":"10810:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:29"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5995,"src":"10848:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5972,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:29"},"scope":7201,"src":"10791:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6022,"nodeType":"Block","src":"11360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"11374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6005,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:29","memberName":"max","nodeType":"MemberAccess","src":"11382:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6016,"nodeType":"IfStatement","src":"11370:103:29","trueBody":{"id":6015,"nodeType":"Block","src":"11400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"11456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6014,"nodeType":"RevertStatement","src":"11414:48:29"}]}},{"expression":{"arguments":[{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"11496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6017,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:29","typeDescriptions":{}}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6002,"id":6021,"nodeType":"Return","src":"11482:20:29"}]},"documentation":{"id":5996,"nodeType":"StructuredDocumentation","src":"11015:276:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:29","nodeType":"FunctionDefinition","parameters":{"id":5999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5998,"mutability":"mutable","name":"value","nameLocation":"11322:5:29","nodeType":"VariableDeclaration","scope":6023,"src":"11314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:29"},"returnParameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6023,"src":"11352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6000,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:29"},"scope":7201,"src":"11296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6050,"nodeType":"Block","src":"11860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"11874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6033,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:29","memberName":"max","nodeType":"MemberAccess","src":"11882:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6044,"nodeType":"IfStatement","src":"11870:103:29","trueBody":{"id":6043,"nodeType":"Block","src":"11900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"11956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6042,"nodeType":"RevertStatement","src":"11914:48:29"}]}},{"expression":{"arguments":[{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"11996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6045,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:29","typeDescriptions":{}}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6030,"id":6049,"nodeType":"Return","src":"11982:20:29"}]},"documentation":{"id":6024,"nodeType":"StructuredDocumentation","src":"11515:276:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"value","nameLocation":"11822:5:29","nodeType":"VariableDeclaration","scope":6051,"src":"11814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6025,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:29"},"returnParameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6051,"src":"11852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6028,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:29"},"scope":7201,"src":"11796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6078,"nodeType":"Block","src":"12360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"12374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6061,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:29","memberName":"max","nodeType":"MemberAccess","src":"12382:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6072,"nodeType":"IfStatement","src":"12370:103:29","trueBody":{"id":6071,"nodeType":"Block","src":"12400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"12456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"12421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6070,"nodeType":"RevertStatement","src":"12414:48:29"}]}},{"expression":{"arguments":[{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"12496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6073,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:29","typeDescriptions":{}}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6058,"id":6077,"nodeType":"Return","src":"12482:20:29"}]},"documentation":{"id":6052,"nodeType":"StructuredDocumentation","src":"12015:276:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"value","nameLocation":"12322:5:29","nodeType":"VariableDeclaration","scope":6079,"src":"12314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:29"},"returnParameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6079,"src":"12352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6056,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:29"},"scope":7201,"src":"12296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6106,"nodeType":"Block","src":"12860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"12874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6089,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:29","memberName":"max","nodeType":"MemberAccess","src":"12882:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6100,"nodeType":"IfStatement","src":"12870:103:29","trueBody":{"id":6099,"nodeType":"Block","src":"12900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"12956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"12921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6098,"nodeType":"RevertStatement","src":"12914:48:29"}]}},{"expression":{"arguments":[{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"12996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6101,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:29","typeDescriptions":{}}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6086,"id":6105,"nodeType":"Return","src":"12982:20:29"}]},"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"12515:276:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"value","nameLocation":"12822:5:29","nodeType":"VariableDeclaration","scope":6107,"src":"12814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:29"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6107,"src":"12852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6084,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:29"},"scope":7201,"src":"12796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"13360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6117,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:29","memberName":"max","nodeType":"MemberAccess","src":"13382:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"13370:103:29","trueBody":{"id":6127,"nodeType":"Block","src":"13400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"13421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6126,"nodeType":"RevertStatement","src":"13414:48:29"}]}},{"expression":{"arguments":[{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6129,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:29","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6114,"id":6133,"nodeType":"Return","src":"13482:20:29"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"13015:276:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"value","nameLocation":"13322:5:29","nodeType":"VariableDeclaration","scope":6135,"src":"13314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6109,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:29"},"returnParameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6135,"src":"13352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6112,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:29"},"scope":7201,"src":"13296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6162,"nodeType":"Block","src":"13860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"13874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6145,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:29","memberName":"max","nodeType":"MemberAccess","src":"13882:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6156,"nodeType":"IfStatement","src":"13870:103:29","trueBody":{"id":6155,"nodeType":"Block","src":"13900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"13956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"13921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6154,"nodeType":"RevertStatement","src":"13914:48:29"}]}},{"expression":{"arguments":[{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"13996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6157,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:29","typeDescriptions":{}}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6142,"id":6161,"nodeType":"Return","src":"13982:20:29"}]},"documentation":{"id":6136,"nodeType":"StructuredDocumentation","src":"13515:276:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"value","nameLocation":"13822:5:29","nodeType":"VariableDeclaration","scope":6163,"src":"13814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6137,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:29"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6163,"src":"13852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6140,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:29"},"scope":7201,"src":"13796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6190,"nodeType":"Block","src":"14360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"14374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6173,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:29","memberName":"max","nodeType":"MemberAccess","src":"14382:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6184,"nodeType":"IfStatement","src":"14370:103:29","trueBody":{"id":6183,"nodeType":"Block","src":"14400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"14456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"14421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6182,"nodeType":"RevertStatement","src":"14414:48:29"}]}},{"expression":{"arguments":[{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"14496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6185,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:29","typeDescriptions":{}}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6170,"id":6189,"nodeType":"Return","src":"14482:20:29"}]},"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"14015:276:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"value","nameLocation":"14322:5:29","nodeType":"VariableDeclaration","scope":6191,"src":"14314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6165,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:29"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6191,"src":"14352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6168,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:29"},"scope":7201,"src":"14296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6218,"nodeType":"Block","src":"14860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"14874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6201,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:29","memberName":"max","nodeType":"MemberAccess","src":"14882:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6212,"nodeType":"IfStatement","src":"14870:103:29","trueBody":{"id":6211,"nodeType":"Block","src":"14900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"14956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"14921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6210,"nodeType":"RevertStatement","src":"14914:48:29"}]}},{"expression":{"arguments":[{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"14996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6213,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:29","typeDescriptions":{}}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6198,"id":6217,"nodeType":"Return","src":"14982:20:29"}]},"documentation":{"id":6192,"nodeType":"StructuredDocumentation","src":"14515:276:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"value","nameLocation":"14822:5:29","nodeType":"VariableDeclaration","scope":6219,"src":"14814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6193,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:29"},"returnParameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6219,"src":"14852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6196,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:29"},"scope":7201,"src":"14796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6246,"nodeType":"Block","src":"15360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"15374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6229,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:29","memberName":"max","nodeType":"MemberAccess","src":"15382:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6240,"nodeType":"IfStatement","src":"15370:103:29","trueBody":{"id":6239,"nodeType":"Block","src":"15400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"15456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"15421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6238,"nodeType":"RevertStatement","src":"15414:48:29"}]}},{"expression":{"arguments":[{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"15496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6241,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:29","typeDescriptions":{}}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6226,"id":6245,"nodeType":"Return","src":"15482:20:29"}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"15015:276:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"value","nameLocation":"15322:5:29","nodeType":"VariableDeclaration","scope":6247,"src":"15314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6221,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:29"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6247,"src":"15352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6224,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:29"},"scope":7201,"src":"15296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6274,"nodeType":"Block","src":"15860:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"15874:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6257,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:29","memberName":"max","nodeType":"MemberAccess","src":"15882:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6268,"nodeType":"IfStatement","src":"15870:103:29","trueBody":{"id":6267,"nodeType":"Block","src":"15900:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"15956:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"15921:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6266,"nodeType":"RevertStatement","src":"15914:48:29"}]}},{"expression":{"arguments":[{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"15996:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6269,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:29","typeDescriptions":{}}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6254,"id":6273,"nodeType":"Return","src":"15982:20:29"}]},"documentation":{"id":6248,"nodeType":"StructuredDocumentation","src":"15515:276:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:29","nodeType":"FunctionDefinition","parameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"value","nameLocation":"15822:5:29","nodeType":"VariableDeclaration","scope":6275,"src":"15814:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:29"},"returnParameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6275,"src":"15852:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6252,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:29"},"scope":7201,"src":"15796:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6302,"nodeType":"Block","src":"16360:149:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"16374:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6285,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:29","memberName":"max","nodeType":"MemberAccess","src":"16382:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6296,"nodeType":"IfStatement","src":"16370:103:29","trueBody":{"id":6295,"nodeType":"Block","src":"16400:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"16456:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"16421:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6294,"nodeType":"RevertStatement","src":"16414:48:29"}]}},{"expression":{"arguments":[{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"16496:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6297,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:29","typeDescriptions":{}}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6282,"id":6301,"nodeType":"Return","src":"16482:20:29"}]},"documentation":{"id":6276,"nodeType":"StructuredDocumentation","src":"16015:276:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:29","nodeType":"FunctionDefinition","parameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"value","nameLocation":"16322:5:29","nodeType":"VariableDeclaration","scope":6303,"src":"16314:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:29"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6303,"src":"16352:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6280,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:29"},"scope":7201,"src":"16296:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6330,"nodeType":"Block","src":"16854:146:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"16868:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6313,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:29","memberName":"max","nodeType":"MemberAccess","src":"16876:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6324,"nodeType":"IfStatement","src":"16864:101:29","trueBody":{"id":6323,"nodeType":"Block","src":"16893:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"16948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"16914:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6322,"nodeType":"RevertStatement","src":"16907:47:29"}]}},{"expression":{"arguments":[{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"16987:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6325,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:29","typeDescriptions":{}}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6310,"id":6329,"nodeType":"Return","src":"16974:19:29"}]},"documentation":{"id":6304,"nodeType":"StructuredDocumentation","src":"16515:272:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:29","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"value","nameLocation":"16817:5:29","nodeType":"VariableDeclaration","scope":6331,"src":"16809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6305,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:29"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6331,"src":"16847:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6308,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:29"},"scope":7201,"src":"16792:208:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6353,"nodeType":"Block","src":"17236:128:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"17250:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6347,"nodeType":"IfStatement","src":"17246:81:29","trueBody":{"id":6346,"nodeType":"Block","src":"17261:66:29","statements":[{"errorCall":{"arguments":[{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"17310:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6342,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"17282:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6345,"nodeType":"RevertStatement","src":"17275:41:29"}]}},{"expression":{"arguments":[{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"17351:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:29","typeDescriptions":{}}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6338,"id":6352,"nodeType":"Return","src":"17336:21:29"}]},"documentation":{"id":6332,"nodeType":"StructuredDocumentation","src":"17006:160:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:29","nodeType":"FunctionDefinition","parameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"value","nameLocation":"17197:5:29","nodeType":"VariableDeclaration","scope":6354,"src":"17190:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6333,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:29"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6354,"src":"17227:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6336,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:29"},"scope":7201,"src":"17171:193:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"17761:150:29","statements":[{"expression":{"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"17771:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"17791:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6363,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:29","typeDescriptions":{}}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6368,"nodeType":"ExpressionStatement","src":"17771:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"17811:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"17825:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"IfStatement","src":"17807:98:29","trueBody":{"id":6377,"nodeType":"Block","src":"17832:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"17888:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6372,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"17853:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"RevertStatement","src":"17846:48:29"}]}}]},"documentation":{"id":6355,"nodeType":"StructuredDocumentation","src":"17370:312:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:29","nodeType":"FunctionDefinition","parameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"value","nameLocation":"17712:5:29","nodeType":"VariableDeclaration","scope":6380,"src":"17705:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6356,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:29"},"returnParameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:29","nodeType":"VariableDeclaration","scope":6380,"src":"17742:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6359,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:29"},"scope":7201,"src":"17687:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6405,"nodeType":"Block","src":"18308:150:29","statements":[{"expression":{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"18318:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"18338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6389,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:29","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6394,"nodeType":"ExpressionStatement","src":"18318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"18358:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"18372:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"18354:98:29","trueBody":{"id":6403,"nodeType":"Block","src":"18379:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"18435:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6398,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"18400:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6402,"nodeType":"RevertStatement","src":"18393:48:29"}]}}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"17917:312:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6406,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:29","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"value","nameLocation":"18259:5:29","nodeType":"VariableDeclaration","scope":6406,"src":"18252:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6382,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:29"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:29","nodeType":"VariableDeclaration","scope":6406,"src":"18289:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6385,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:29"},"scope":7201,"src":"18234:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"18855:150:29","statements":[{"expression":{"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18865:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"18885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6415,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:29","typeDescriptions":{}}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6420,"nodeType":"ExpressionStatement","src":"18865:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18905:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"18919:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6430,"nodeType":"IfStatement","src":"18901:98:29","trueBody":{"id":6429,"nodeType":"Block","src":"18926:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"18982:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6424,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"18947:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6428,"nodeType":"RevertStatement","src":"18940:48:29"}]}}]},"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"18464:312:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:29","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"value","nameLocation":"18806:5:29","nodeType":"VariableDeclaration","scope":6432,"src":"18799:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6408,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:29"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:29","nodeType":"VariableDeclaration","scope":6432,"src":"18836:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6411,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:29"},"scope":7201,"src":"18781:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6457,"nodeType":"Block","src":"19402:150:29","statements":[{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"19412:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"19432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6441,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:29","typeDescriptions":{}}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6446,"nodeType":"ExpressionStatement","src":"19412:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"19452:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"19466:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6456,"nodeType":"IfStatement","src":"19448:98:29","trueBody":{"id":6455,"nodeType":"Block","src":"19473:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"19529:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6450,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"19494:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6454,"nodeType":"RevertStatement","src":"19487:48:29"}]}}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"19011:312:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:29","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"19353:5:29","nodeType":"VariableDeclaration","scope":6458,"src":"19346:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:29"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:29","nodeType":"VariableDeclaration","scope":6458,"src":"19383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6437,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:29"},"scope":7201,"src":"19328:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6483,"nodeType":"Block","src":"19949:150:29","statements":[{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"19959:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"19979:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6467,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:29","typeDescriptions":{}}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6472,"nodeType":"ExpressionStatement","src":"19959:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"19999:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"20013:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"19995:98:29","trueBody":{"id":6481,"nodeType":"Block","src":"20020:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"20076:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6476,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"20041:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"RevertStatement","src":"20034:48:29"}]}}]},"documentation":{"id":6459,"nodeType":"StructuredDocumentation","src":"19558:312:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6484,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:29","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"value","nameLocation":"19900:5:29","nodeType":"VariableDeclaration","scope":6484,"src":"19893:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6460,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:29"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:29","nodeType":"VariableDeclaration","scope":6484,"src":"19930:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6463,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:29"},"scope":7201,"src":"19875:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6509,"nodeType":"Block","src":"20496:150:29","statements":[{"expression":{"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6492,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"20506:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"20526:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6493,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:29","typeDescriptions":{}}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6498,"nodeType":"ExpressionStatement","src":"20506:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"20546:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"20560:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"20542:98:29","trueBody":{"id":6507,"nodeType":"Block","src":"20567:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"20623:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6502,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"20588:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6506,"nodeType":"RevertStatement","src":"20581:48:29"}]}}]},"documentation":{"id":6485,"nodeType":"StructuredDocumentation","src":"20105:312:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:29","nodeType":"FunctionDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"value","nameLocation":"20447:5:29","nodeType":"VariableDeclaration","scope":6510,"src":"20440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6486,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:29"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:29","nodeType":"VariableDeclaration","scope":6510,"src":"20477:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6489,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:29"},"scope":7201,"src":"20422:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6535,"nodeType":"Block","src":"21043:150:29","statements":[{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"21053:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"21073:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6519,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:29","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6524,"nodeType":"ExpressionStatement","src":"21053:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"21093:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"21107:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6534,"nodeType":"IfStatement","src":"21089:98:29","trueBody":{"id":6533,"nodeType":"Block","src":"21114:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"21170:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6528,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21135:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"RevertStatement","src":"21128:48:29"}]}}]},"documentation":{"id":6511,"nodeType":"StructuredDocumentation","src":"20652:312:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:29","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"value","nameLocation":"20994:5:29","nodeType":"VariableDeclaration","scope":6536,"src":"20987:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6512,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:29"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:29","nodeType":"VariableDeclaration","scope":6536,"src":"21024:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6515,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:29"},"scope":7201,"src":"20969:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6561,"nodeType":"Block","src":"21590:150:29","statements":[{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"21600:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"21620:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6545,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:29","typeDescriptions":{}}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6550,"nodeType":"ExpressionStatement","src":"21600:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"21640:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"21654:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"21636:98:29","trueBody":{"id":6559,"nodeType":"Block","src":"21661:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"21717:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6554,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21682:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6558,"nodeType":"RevertStatement","src":"21675:48:29"}]}}]},"documentation":{"id":6537,"nodeType":"StructuredDocumentation","src":"21199:312:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:29","nodeType":"FunctionDefinition","parameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"value","nameLocation":"21541:5:29","nodeType":"VariableDeclaration","scope":6562,"src":"21534:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6538,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:29"},"returnParameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:29","nodeType":"VariableDeclaration","scope":6562,"src":"21571:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6541,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:29"},"scope":7201,"src":"21516:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"22137:150:29","statements":[{"expression":{"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"22147:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22167:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6571,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:29","typeDescriptions":{}}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6576,"nodeType":"ExpressionStatement","src":"22147:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"22187:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22201:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6586,"nodeType":"IfStatement","src":"22183:98:29","trueBody":{"id":6585,"nodeType":"Block","src":"22208:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22264:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6580,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"22229:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"RevertStatement","src":"22222:48:29"}]}}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"21746:312:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:29","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"value","nameLocation":"22088:5:29","nodeType":"VariableDeclaration","scope":6588,"src":"22081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6564,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:29"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:29","nodeType":"VariableDeclaration","scope":6588,"src":"22118:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6567,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:29"},"scope":7201,"src":"22063:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6613,"nodeType":"Block","src":"22684:150:29","statements":[{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"22694:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"22714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6597,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:29","typeDescriptions":{}}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6602,"nodeType":"ExpressionStatement","src":"22694:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"22734:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"22748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6612,"nodeType":"IfStatement","src":"22730:98:29","trueBody":{"id":6611,"nodeType":"Block","src":"22755:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"22811:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6606,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"22776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"RevertStatement","src":"22769:48:29"}]}}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"22293:312:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6614,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:29","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"22635:5:29","nodeType":"VariableDeclaration","scope":6614,"src":"22628:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:29"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:29","nodeType":"VariableDeclaration","scope":6614,"src":"22665:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6593,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:29"},"scope":7201,"src":"22610:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6639,"nodeType":"Block","src":"23231:150:29","statements":[{"expression":{"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6622,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"23241:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"23261:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6623,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:29","typeDescriptions":{}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6628,"nodeType":"ExpressionStatement","src":"23241:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"23281:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"23295:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"IfStatement","src":"23277:98:29","trueBody":{"id":6637,"nodeType":"Block","src":"23302:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"23358:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6632,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"23323:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6636,"nodeType":"RevertStatement","src":"23316:48:29"}]}}]},"documentation":{"id":6615,"nodeType":"StructuredDocumentation","src":"22840:312:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6640,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:29","nodeType":"FunctionDefinition","parameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6617,"mutability":"mutable","name":"value","nameLocation":"23182:5:29","nodeType":"VariableDeclaration","scope":6640,"src":"23175:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6616,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:29"},"returnParameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:29","nodeType":"VariableDeclaration","scope":6640,"src":"23212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6619,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:29"},"scope":7201,"src":"23157:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6665,"nodeType":"Block","src":"23778:150:29","statements":[{"expression":{"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6648,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"23788:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"23808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6649,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:29","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6654,"nodeType":"ExpressionStatement","src":"23788:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"23828:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"23842:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6664,"nodeType":"IfStatement","src":"23824:98:29","trueBody":{"id":6663,"nodeType":"Block","src":"23849:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"23905:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6658,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"23870:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6662,"nodeType":"RevertStatement","src":"23863:48:29"}]}}]},"documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"23387:312:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6666,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:29","nodeType":"FunctionDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"value","nameLocation":"23729:5:29","nodeType":"VariableDeclaration","scope":6666,"src":"23722:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6642,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:29"},"returnParameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:29","nodeType":"VariableDeclaration","scope":6666,"src":"23759:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6645,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:29"},"scope":7201,"src":"23704:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6691,"nodeType":"Block","src":"24325:150:29","statements":[{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"24335:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"24355:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6675,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:29","typeDescriptions":{}}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6680,"nodeType":"ExpressionStatement","src":"24335:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"24375:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"24389:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6690,"nodeType":"IfStatement","src":"24371:98:29","trueBody":{"id":6689,"nodeType":"Block","src":"24396:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"24452:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6684,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"24417:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6688,"nodeType":"RevertStatement","src":"24410:48:29"}]}}]},"documentation":{"id":6667,"nodeType":"StructuredDocumentation","src":"23934:312:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:29","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"value","nameLocation":"24276:5:29","nodeType":"VariableDeclaration","scope":6692,"src":"24269:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6668,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:29"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:29","nodeType":"VariableDeclaration","scope":6692,"src":"24306:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6671,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:29"},"scope":7201,"src":"24251:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6717,"nodeType":"Block","src":"24872:150:29","statements":[{"expression":{"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6700,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"24882:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"24902:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6701,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:29","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6706,"nodeType":"ExpressionStatement","src":"24882:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"24922:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"24936:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6716,"nodeType":"IfStatement","src":"24918:98:29","trueBody":{"id":6715,"nodeType":"Block","src":"24943:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"24999:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6710,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"24964:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6714,"nodeType":"RevertStatement","src":"24957:48:29"}]}}]},"documentation":{"id":6693,"nodeType":"StructuredDocumentation","src":"24481:312:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6718,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:29","nodeType":"FunctionDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"value","nameLocation":"24823:5:29","nodeType":"VariableDeclaration","scope":6718,"src":"24816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6694,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:29"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:29","nodeType":"VariableDeclaration","scope":6718,"src":"24853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6697,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:29"},"scope":7201,"src":"24798:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6743,"nodeType":"Block","src":"25419:150:29","statements":[{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6726,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"25429:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"25449:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6727,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:29","typeDescriptions":{}}},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6732,"nodeType":"ExpressionStatement","src":"25429:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"25469:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"25483:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6742,"nodeType":"IfStatement","src":"25465:98:29","trueBody":{"id":6741,"nodeType":"Block","src":"25490:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"25546:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6736,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"25511:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6740,"nodeType":"RevertStatement","src":"25504:48:29"}]}}]},"documentation":{"id":6719,"nodeType":"StructuredDocumentation","src":"25028:312:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6744,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:29","nodeType":"FunctionDefinition","parameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"value","nameLocation":"25370:5:29","nodeType":"VariableDeclaration","scope":6744,"src":"25363:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6720,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:29"},"returnParameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:29","nodeType":"VariableDeclaration","scope":6744,"src":"25400:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6723,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:29"},"scope":7201,"src":"25345:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6769,"nodeType":"Block","src":"25966:150:29","statements":[{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6752,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"25976:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"25996:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6753,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:29","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6758,"nodeType":"ExpressionStatement","src":"25976:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"26016:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"26030:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6768,"nodeType":"IfStatement","src":"26012:98:29","trueBody":{"id":6767,"nodeType":"Block","src":"26037:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"26093:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6762,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26058:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6766,"nodeType":"RevertStatement","src":"26051:48:29"}]}}]},"documentation":{"id":6745,"nodeType":"StructuredDocumentation","src":"25575:312:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:29","nodeType":"FunctionDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"value","nameLocation":"25917:5:29","nodeType":"VariableDeclaration","scope":6770,"src":"25910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6746,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:29"},"returnParameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:29","nodeType":"VariableDeclaration","scope":6770,"src":"25947:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6749,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:29"},"scope":7201,"src":"25892:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6795,"nodeType":"Block","src":"26513:150:29","statements":[{"expression":{"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6778,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"26523:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"26543:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6779,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:29","typeDescriptions":{}}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6784,"nodeType":"ExpressionStatement","src":"26523:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"26563:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"26577:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6794,"nodeType":"IfStatement","src":"26559:98:29","trueBody":{"id":6793,"nodeType":"Block","src":"26584:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"26640:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6788,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26605:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6792,"nodeType":"RevertStatement","src":"26598:48:29"}]}}]},"documentation":{"id":6771,"nodeType":"StructuredDocumentation","src":"26122:312:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6796,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:29","nodeType":"FunctionDefinition","parameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"value","nameLocation":"26464:5:29","nodeType":"VariableDeclaration","scope":6796,"src":"26457:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6772,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:29"},"returnParameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6776,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:29","nodeType":"VariableDeclaration","scope":6796,"src":"26494:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6775,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:29"},"scope":7201,"src":"26439:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6821,"nodeType":"Block","src":"27060:150:29","statements":[{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6804,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"27070:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"27090:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6805,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:29","typeDescriptions":{}}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6810,"nodeType":"ExpressionStatement","src":"27070:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"27110:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"27124:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6820,"nodeType":"IfStatement","src":"27106:98:29","trueBody":{"id":6819,"nodeType":"Block","src":"27131:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"27187:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6814,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"27152:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6818,"nodeType":"RevertStatement","src":"27145:48:29"}]}}]},"documentation":{"id":6797,"nodeType":"StructuredDocumentation","src":"26669:312:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6822,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:29","nodeType":"FunctionDefinition","parameters":{"id":6800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6799,"mutability":"mutable","name":"value","nameLocation":"27011:5:29","nodeType":"VariableDeclaration","scope":6822,"src":"27004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6798,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:29"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:29","nodeType":"VariableDeclaration","scope":6822,"src":"27041:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6801,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:29"},"scope":7201,"src":"26986:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6847,"nodeType":"Block","src":"27607:150:29","statements":[{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6830,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"27617:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"27637:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6831,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:29","typeDescriptions":{}}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6836,"nodeType":"ExpressionStatement","src":"27617:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"27657:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"27671:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"IfStatement","src":"27653:98:29","trueBody":{"id":6845,"nodeType":"Block","src":"27678:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"27734:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6840,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"27699:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"RevertStatement","src":"27692:48:29"}]}}]},"documentation":{"id":6823,"nodeType":"StructuredDocumentation","src":"27216:312:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6848,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:29","nodeType":"FunctionDefinition","parameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"value","nameLocation":"27558:5:29","nodeType":"VariableDeclaration","scope":6848,"src":"27551:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6824,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:29"},"returnParameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:29","nodeType":"VariableDeclaration","scope":6848,"src":"27588:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6827,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:29"},"scope":7201,"src":"27533:224:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"28147:148:29","statements":[{"expression":{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6856,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"28157:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"28176:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6857,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:29","typeDescriptions":{}}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6862,"nodeType":"ExpressionStatement","src":"28157:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"28196:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"28210:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"28192:97:29","trueBody":{"id":6871,"nodeType":"Block","src":"28217:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"28272:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6866,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"28238:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6870,"nodeType":"RevertStatement","src":"28231:47:29"}]}}]},"documentation":{"id":6849,"nodeType":"StructuredDocumentation","src":"27763:307:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:29","nodeType":"FunctionDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"value","nameLocation":"28099:5:29","nodeType":"VariableDeclaration","scope":6874,"src":"28092:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6850,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:29"},"returnParameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:29","nodeType":"VariableDeclaration","scope":6874,"src":"28129:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6853,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:29"},"scope":7201,"src":"28075:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6899,"nodeType":"Block","src":"28685:148:29","statements":[{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"28695:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28714:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6883,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:29","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6888,"nodeType":"ExpressionStatement","src":"28695:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"28734:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28748:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6898,"nodeType":"IfStatement","src":"28730:97:29","trueBody":{"id":6897,"nodeType":"Block","src":"28755:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28810:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6892,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"28776:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6896,"nodeType":"RevertStatement","src":"28769:47:29"}]}}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"28301:307:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6900,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:29","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"value","nameLocation":"28637:5:29","nodeType":"VariableDeclaration","scope":6900,"src":"28630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6876,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:29"},"returnParameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:29","nodeType":"VariableDeclaration","scope":6900,"src":"28667:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6879,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:29"},"scope":7201,"src":"28613:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6925,"nodeType":"Block","src":"29223:148:29","statements":[{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"29233:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"29252:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6909,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:29","typeDescriptions":{}}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6914,"nodeType":"ExpressionStatement","src":"29233:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"29272:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"29286:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"29268:97:29","trueBody":{"id":6923,"nodeType":"Block","src":"29293:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"29348:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6918,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"29314:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"RevertStatement","src":"29307:47:29"}]}}]},"documentation":{"id":6901,"nodeType":"StructuredDocumentation","src":"28839:307:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:29","nodeType":"FunctionDefinition","parameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"value","nameLocation":"29175:5:29","nodeType":"VariableDeclaration","scope":6926,"src":"29168:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6902,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:29"},"returnParameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:29","nodeType":"VariableDeclaration","scope":6926,"src":"29205:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6905,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:29"},"scope":7201,"src":"29151:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6951,"nodeType":"Block","src":"29761:148:29","statements":[{"expression":{"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"29771:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"29790:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6935,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:29","typeDescriptions":{}}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6940,"nodeType":"ExpressionStatement","src":"29771:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"29810:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"29824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"29806:97:29","trueBody":{"id":6949,"nodeType":"Block","src":"29831:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"29886:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6944,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"29852:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6948,"nodeType":"RevertStatement","src":"29845:47:29"}]}}]},"documentation":{"id":6927,"nodeType":"StructuredDocumentation","src":"29377:307:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:29","nodeType":"FunctionDefinition","parameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"value","nameLocation":"29713:5:29","nodeType":"VariableDeclaration","scope":6952,"src":"29706:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6928,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:29"},"returnParameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:29","nodeType":"VariableDeclaration","scope":6952,"src":"29743:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6931,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:29"},"scope":7201,"src":"29689:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"30299:148:29","statements":[{"expression":{"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"30309:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"30328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6961,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:29","typeDescriptions":{}}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6966,"nodeType":"ExpressionStatement","src":"30309:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"30348:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6976,"nodeType":"IfStatement","src":"30344:97:29","trueBody":{"id":6975,"nodeType":"Block","src":"30369:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"30424:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6970,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"30390:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6974,"nodeType":"RevertStatement","src":"30383:47:29"}]}}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"29915:307:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:29","nodeType":"FunctionDefinition","parameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"value","nameLocation":"30251:5:29","nodeType":"VariableDeclaration","scope":6978,"src":"30244:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:29"},"returnParameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:29","nodeType":"VariableDeclaration","scope":6978,"src":"30281:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6957,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:29"},"scope":7201,"src":"30227:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7003,"nodeType":"Block","src":"30837:148:29","statements":[{"expression":{"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"30847:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"30866:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6987,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:29","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6992,"nodeType":"ExpressionStatement","src":"30847:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"30886:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"30900:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7002,"nodeType":"IfStatement","src":"30882:97:29","trueBody":{"id":7001,"nodeType":"Block","src":"30907:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"30962:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6996,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"30928:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"RevertStatement","src":"30921:47:29"}]}}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"30453:307:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:29","nodeType":"FunctionDefinition","parameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"value","nameLocation":"30789:5:29","nodeType":"VariableDeclaration","scope":7004,"src":"30782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6980,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:29"},"returnParameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:29","nodeType":"VariableDeclaration","scope":7004,"src":"30819:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6983,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:29"},"scope":7201,"src":"30765:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7029,"nodeType":"Block","src":"31375:148:29","statements":[{"expression":{"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"31385:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"31404:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7013,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:29","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7018,"nodeType":"ExpressionStatement","src":"31385:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"31424:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"31438:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7028,"nodeType":"IfStatement","src":"31420:97:29","trueBody":{"id":7027,"nodeType":"Block","src":"31445:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"31500:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"31466:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"RevertStatement","src":"31459:47:29"}]}}]},"documentation":{"id":7005,"nodeType":"StructuredDocumentation","src":"30991:307:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:29","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"value","nameLocation":"31327:5:29","nodeType":"VariableDeclaration","scope":7030,"src":"31320:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7006,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:29"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:29","nodeType":"VariableDeclaration","scope":7030,"src":"31357:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7009,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:29"},"scope":7201,"src":"31303:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7055,"nodeType":"Block","src":"31913:148:29","statements":[{"expression":{"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"31923:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"31942:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7039,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:29","typeDescriptions":{}}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7044,"nodeType":"ExpressionStatement","src":"31923:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"31962:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"31976:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7054,"nodeType":"IfStatement","src":"31958:97:29","trueBody":{"id":7053,"nodeType":"Block","src":"31983:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"32038:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7048,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"32004:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"RevertStatement","src":"31997:47:29"}]}}]},"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"31529:307:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:29","nodeType":"FunctionDefinition","parameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"value","nameLocation":"31865:5:29","nodeType":"VariableDeclaration","scope":7056,"src":"31858:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7032,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:29"},"returnParameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:29","nodeType":"VariableDeclaration","scope":7056,"src":"31895:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7035,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:29"},"scope":7201,"src":"31841:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"32451:148:29","statements":[{"expression":{"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"32461:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"32480:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7065,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:29","typeDescriptions":{}}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7070,"nodeType":"ExpressionStatement","src":"32461:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"32500:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"32514:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7080,"nodeType":"IfStatement","src":"32496:97:29","trueBody":{"id":7079,"nodeType":"Block","src":"32521:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"32576:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"32542:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7078,"nodeType":"RevertStatement","src":"32535:47:29"}]}}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"32067:307:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:29","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"value","nameLocation":"32403:5:29","nodeType":"VariableDeclaration","scope":7082,"src":"32396:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7058,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:29"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:29","nodeType":"VariableDeclaration","scope":7082,"src":"32433:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7061,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:29"},"scope":7201,"src":"32379:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7107,"nodeType":"Block","src":"32989:148:29","statements":[{"expression":{"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"32999:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"33018:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7091,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:29","typeDescriptions":{}}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7096,"nodeType":"ExpressionStatement","src":"32999:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"33038:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"33052:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7106,"nodeType":"IfStatement","src":"33034:97:29","trueBody":{"id":7105,"nodeType":"Block","src":"33059:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"33114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"33080:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7104,"nodeType":"RevertStatement","src":"33073:47:29"}]}}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"32605:307:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:29","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"value","nameLocation":"32941:5:29","nodeType":"VariableDeclaration","scope":7108,"src":"32934:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7084,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:29"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:29","nodeType":"VariableDeclaration","scope":7108,"src":"32971:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7087,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:29"},"scope":7201,"src":"32917:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7133,"nodeType":"Block","src":"33527:148:29","statements":[{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"33537:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"33556:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7117,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:29","typeDescriptions":{}}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7122,"nodeType":"ExpressionStatement","src":"33537:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"33576:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"33590:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7132,"nodeType":"IfStatement","src":"33572:97:29","trueBody":{"id":7131,"nodeType":"Block","src":"33597:72:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"33652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"33618:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7130,"nodeType":"RevertStatement","src":"33611:47:29"}]}}]},"documentation":{"id":7109,"nodeType":"StructuredDocumentation","src":"33143:307:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:29","nodeType":"FunctionDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"value","nameLocation":"33479:5:29","nodeType":"VariableDeclaration","scope":7134,"src":"33472:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7110,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:29"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:29","nodeType":"VariableDeclaration","scope":7134,"src":"33509:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7113,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:29"},"scope":7201,"src":"33455:220:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7159,"nodeType":"Block","src":"34058:146:29","statements":[{"expression":{"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"34068:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"34086:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7143,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:29","typeDescriptions":{}}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7148,"nodeType":"ExpressionStatement","src":"34068:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"34106:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"34120:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7158,"nodeType":"IfStatement","src":"34102:96:29","trueBody":{"id":7157,"nodeType":"Block","src":"34127:71:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"34181:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"34148:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7156,"nodeType":"RevertStatement","src":"34141:46:29"}]}}]},"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"33681:302:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:29","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"value","nameLocation":"34011:5:29","nodeType":"VariableDeclaration","scope":7160,"src":"34004:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7136,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:29"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:29","nodeType":"VariableDeclaration","scope":7160,"src":"34041:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7139,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:29"},"scope":7201,"src":"33988:216:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7189,"nodeType":"Block","src":"34444:250:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"34557:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7172,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:29","memberName":"max","nodeType":"MemberAccess","src":"34573:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:29","typeDescriptions":{}}},"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7183,"nodeType":"IfStatement","src":"34553:105:29","trueBody":{"id":7182,"nodeType":"Block","src":"34592:66:29","statements":[{"errorCall":{"arguments":[{"id":7179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"34641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7178,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"34613:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7181,"nodeType":"RevertStatement","src":"34606:41:29"}]}},{"expression":{"arguments":[{"id":7186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"34681:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7184,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:29","typeDescriptions":{}}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7167,"id":7188,"nodeType":"Return","src":"34667:20:29"}]},"documentation":{"id":7161,"nodeType":"StructuredDocumentation","src":"34210:165:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:29","nodeType":"FunctionDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7163,"mutability":"mutable","name":"value","nameLocation":"34406:5:29","nodeType":"VariableDeclaration","scope":7190,"src":"34398:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7162,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:29"},"returnParameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7190,"src":"34436:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7165,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:29"},"scope":7201,"src":"34380:314:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7199,"nodeType":"Block","src":"34853:87:29","statements":[{"AST":{"nativeSrc":"34888:46:29","nodeType":"YulBlock","src":"34888:46:29","statements":[{"nativeSrc":"34902:22:29","nodeType":"YulAssignment","src":"34902:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:29","nodeType":"YulIdentifier","src":"34921:1:29"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:29","nodeType":"YulIdentifier","src":"34914:6:29"},"nativeSrc":"34914:9:29","nodeType":"YulFunctionCall","src":"34914:9:29"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:29","nodeType":"YulIdentifier","src":"34907:6:29"},"nativeSrc":"34907:17:29","nodeType":"YulFunctionCall","src":"34907:17:29"},"variableNames":[{"name":"u","nativeSrc":"34902:1:29","nodeType":"YulIdentifier","src":"34902:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7193,"isOffset":false,"isSlot":false,"src":"34921:1:29","valueSize":1},{"declaration":7196,"isOffset":false,"isSlot":false,"src":"34902:1:29","valueSize":1}],"flags":["memory-safe"],"id":7198,"nodeType":"InlineAssembly","src":"34863:71:29"}]},"documentation":{"id":7191,"nodeType":"StructuredDocumentation","src":"34700:90:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7200,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:29","nodeType":"FunctionDefinition","parameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"b","nameLocation":"34816:1:29","nodeType":"VariableDeclaration","scope":7200,"src":"34811:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7192,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:29"},"returnParameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"u","nameLocation":"34850:1:29","nodeType":"VariableDeclaration","scope":7200,"src":"34842:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7195,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:29"},"scope":7201,"src":"34795:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7202,"src":"769:34173:29","usedErrors":[5446,5451,5458,5463],"usedEvents":[]}],"src":"192:34751:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7201],"SignedMath":[7345]},"id":7346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7346,"sourceUnit":7202,"src":"135:40:30","symbolAliases":[{"foreign":{"id":7204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"143:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7206,"nodeType":"StructuredDocumentation","src":"177:80:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7345,"linearizedBaseContracts":[7345],"name":"SignedMath","nameLocation":"266:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":7235,"nodeType":"Block","src":"746:215:30","statements":[{"id":7234,"nodeType":"UncheckedBlock","src":"756:199:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"894:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"904:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7227,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"932:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7225,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"916:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7200,"src":"916:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7223,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:30","typeDescriptions":{}}},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7217,"id":7233,"nodeType":"Return","src":"887:57:30"}]}]},"documentation":{"id":7207,"nodeType":"StructuredDocumentation","src":"283:374:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:30","nodeType":"FunctionDefinition","parameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"condition","nameLocation":"684:9:30","nodeType":"VariableDeclaration","scope":7236,"src":"679:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7208,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7211,"mutability":"mutable","name":"a","nameLocation":"702:1:30","nodeType":"VariableDeclaration","scope":7236,"src":"695:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7210,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7213,"mutability":"mutable","name":"b","nameLocation":"712:1:30","nodeType":"VariableDeclaration","scope":7236,"src":"705:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:30"},"returnParameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7236,"src":"738:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7215,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:30"},"scope":7345,"src":"662:299:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7254,"nodeType":"Block","src":"1102:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"1127:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"1131:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"1134:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"1137:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"1119:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7245,"id":7253,"nodeType":"Return","src":"1112:27:30"}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"967:66:30","text":" @dev Returns the largest of two signed numbers."},"id":7255,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:30","nodeType":"FunctionDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"a","nameLocation":"1058:1:30","nodeType":"VariableDeclaration","scope":7255,"src":"1051:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7238,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7241,"mutability":"mutable","name":"b","nameLocation":"1068:1:30","nodeType":"VariableDeclaration","scope":7255,"src":"1061:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7240,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:30"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7255,"src":"1094:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7243,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:30"},"scope":7345,"src":"1038:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7273,"nodeType":"Block","src":"1288:44:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"1313:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"1317:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"1320:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7270,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"1323:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7265,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"1305:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7264,"id":7272,"nodeType":"Return","src":"1298:27:30"}]},"documentation":{"id":7256,"nodeType":"StructuredDocumentation","src":"1152:67:30","text":" @dev Returns the smallest of two signed numbers."},"id":7274,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:30","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7258,"mutability":"mutable","name":"a","nameLocation":"1244:1:30","nodeType":"VariableDeclaration","scope":7274,"src":"1237:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7257,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7260,"mutability":"mutable","name":"b","nameLocation":"1254:1:30","nodeType":"VariableDeclaration","scope":7274,"src":"1247:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7259,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:30"},"returnParameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7274,"src":"1280:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7262,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:30"},"scope":7345,"src":"1224:108:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7317,"nodeType":"Block","src":"1537:162:30","statements":[{"assignments":[7285],"declarations":[{"constant":false,"id":7285,"mutability":"mutable","name":"x","nameLocation":"1606:1:30","nodeType":"VariableDeclaration","scope":7317,"src":"1599:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7284,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7298,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1611:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"1615:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"1626:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7299,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7304,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"1671:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:30","typeDescriptions":{}}},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7300,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:30","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1685:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"1689:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7283,"id":7316,"nodeType":"Return","src":"1644:48:30"}]},"documentation":{"id":7275,"nodeType":"StructuredDocumentation","src":"1338:126:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7318,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:30","nodeType":"FunctionDefinition","parameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"a","nameLocation":"1493:1:30","nodeType":"VariableDeclaration","scope":7318,"src":"1486:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7276,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7279,"mutability":"mutable","name":"b","nameLocation":"1503:1:30","nodeType":"VariableDeclaration","scope":7318,"src":"1496:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7278,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:30"},"returnParameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7318,"src":"1529:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7281,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:30"},"scope":7345,"src":"1469:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7343,"nodeType":"Block","src":"1843:767:30","statements":[{"id":7342,"nodeType":"UncheckedBlock","src":"1853:751:30","statements":[{"assignments":[7327],"declarations":[{"constant":false,"id":7327,"mutability":"mutable","name":"mask","nameLocation":"2424:4:30","nodeType":"VariableDeclaration","scope":7342,"src":"2417:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7326,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7331,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7328,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"2431:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7334,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"2576:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7335,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"2580:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7338,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"2588:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:30","typeDescriptions":{}}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7325,"id":7341,"nodeType":"Return","src":"2560:33:30"}]}]},"documentation":{"id":7319,"nodeType":"StructuredDocumentation","src":"1705:78:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7344,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:30","nodeType":"FunctionDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7321,"mutability":"mutable","name":"n","nameLocation":"1808:1:30","nodeType":"VariableDeclaration","scope":7344,"src":"1801:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7320,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:30"},"returnParameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7344,"src":"1834:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:30"},"scope":7345,"src":"1788:822:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7346,"src":"258:2354:30","usedErrors":[],"usedEvents":[]}],"src":"109:2504:30"},"id":30},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[8926],"Math":[5436]},"id":8927,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7347,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8927,"sourceUnit":5437,"src":"227:38:31","symbolAliases":[{"foreign":{"id":7348,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"235:4:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":7350,"nodeType":"StructuredDocumentation","src":"267:400:31","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":8926,"linearizedBaseContracts":[8926],"name":"Checkpoints","nameLocation":"676:11:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7351,"nodeType":"StructuredDocumentation","src":"694:82:31","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":7353,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:31","nodeType":"ErrorDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[],"src":"815:2:31"},"src":"781:37:31"},{"canonicalName":"Checkpoints.Trace224","id":7358,"members":[{"constant":false,"id":7357,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:31","nodeType":"VariableDeclaration","scope":7358,"src":"850:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7355,"nodeType":"UserDefinedTypeName","pathNode":{"id":7354,"name":"Checkpoint224","nameLocations":["850:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"850:13:31"},"referencedDeclaration":7363,"src":"850:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7356,"nodeType":"ArrayTypeName","src":"850:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:31","nodeType":"StructDefinition","scope":8926,"src":"824:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":7363,"members":[{"constant":false,"id":7360,"mutability":"mutable","name":"_key","nameLocation":"929:4:31","nodeType":"VariableDeclaration","scope":7363,"src":"922:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7359,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7362,"mutability":"mutable","name":"_value","nameLocation":"951:6:31","nodeType":"VariableDeclaration","scope":7363,"src":"943:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7361,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:31","nodeType":"StructDefinition","scope":8926,"src":"891:73:31","visibility":"public"},{"body":{"id":7385,"nodeType":"Block","src":"1425:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":7379,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"1450:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1455:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"1450:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7381,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"1469:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"1474:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7378,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7758,8282,8806],"referencedDeclaration":7758,"src":"1442:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7377,"id":7384,"nodeType":"Return","src":"1435:45:31"}]},"documentation":{"id":7364,"nodeType":"StructuredDocumentation","src":"970:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":7386,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:31","nodeType":"FunctionDefinition","parameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7367,"mutability":"mutable","name":"self","nameLocation":"1317:4:31","nodeType":"VariableDeclaration","scope":7386,"src":"1300:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7366,"nodeType":"UserDefinedTypeName","pathNode":{"id":7365,"name":"Trace224","nameLocations":["1300:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"1300:8:31"},"referencedDeclaration":7358,"src":"1300:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7369,"mutability":"mutable","name":"key","nameLocation":"1338:3:31","nodeType":"VariableDeclaration","scope":7386,"src":"1331:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7368,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7371,"mutability":"mutable","name":"value","nameLocation":"1359:5:31","nodeType":"VariableDeclaration","scope":7386,"src":"1351:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7370,"name":"uint224","nodeType":"ElementaryTypeName","src":"1351:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:80:31"},"returnParameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"oldValue","nameLocation":"1397:8:31","nodeType":"VariableDeclaration","scope":7386,"src":"1389:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7373,"name":"uint224","nodeType":"ElementaryTypeName","src":"1389:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7376,"mutability":"mutable","name":"newValue","nameLocation":"1415:8:31","nodeType":"VariableDeclaration","scope":7386,"src":"1407:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7375,"name":"uint224","nodeType":"ElementaryTypeName","src":"1407:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1388:36:31"},"scope":8926,"src":"1277:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"1740:207:31","statements":[{"assignments":[7398],"declarations":[{"constant":false,"id":7398,"mutability":"mutable","name":"len","nameLocation":"1758:3:31","nodeType":"VariableDeclaration","scope":7425,"src":"1750:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7402,"initialValue":{"expression":{"expression":{"id":7399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"1764:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1769:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"1764:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:31","memberName":"length","nodeType":"MemberAccess","src":"1764:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:38:31"},{"assignments":[7404],"declarations":[{"constant":false,"id":7404,"mutability":"mutable","name":"pos","nameLocation":"1806:3:31","nodeType":"VariableDeclaration","scope":7425,"src":"1798:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7412,"initialValue":{"arguments":[{"expression":{"id":7406,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"1831:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"1831:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7408,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"1850:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7410,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"1858:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7405,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7862,8386,8910],"referencedDeclaration":7862,"src":"1812:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"1879:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7414,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"1886:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7418,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"1910:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"1910:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7420,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"1929:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7417,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"1896:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"1896:44:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1879:61:31","trueExpression":{"hexValue":"30","id":7416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7396,"id":7424,"nodeType":"Return","src":"1872:68:31"}]},"documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"1493:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1661:11:31","nodeType":"FunctionDefinition","parameters":{"id":7393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"self","nameLocation":"1690:4:31","nodeType":"VariableDeclaration","scope":7426,"src":"1673:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7389,"nodeType":"UserDefinedTypeName","pathNode":{"id":7388,"name":"Trace224","nameLocations":["1673:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"1673:8:31"},"referencedDeclaration":7358,"src":"1673:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7392,"mutability":"mutable","name":"key","nameLocation":"1703:3:31","nodeType":"VariableDeclaration","scope":7426,"src":"1696:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7391,"name":"uint32","nodeType":"ElementaryTypeName","src":"1696:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1672:35:31"},"returnParameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7426,"src":"1731:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7394,"name":"uint224","nodeType":"ElementaryTypeName","src":"1731:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1730:9:31"},"scope":8926,"src":"1652:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7467,"nodeType":"Block","src":"2202:209:31","statements":[{"assignments":[7438],"declarations":[{"constant":false,"id":7438,"mutability":"mutable","name":"len","nameLocation":"2220:3:31","nodeType":"VariableDeclaration","scope":7467,"src":"2212:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7442,"initialValue":{"expression":{"expression":{"id":7439,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"2226:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"2226:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:31","memberName":"length","nodeType":"MemberAccess","src":"2226:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:38:31"},{"assignments":[7444],"declarations":[{"constant":false,"id":7444,"mutability":"mutable","name":"pos","nameLocation":"2268:3:31","nodeType":"VariableDeclaration","scope":7467,"src":"2260:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7452,"initialValue":{"arguments":[{"expression":{"id":7446,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"2293:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"2293:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7448,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"2312:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7450,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"2320:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7445,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":7810,"src":"2274:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2260:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7453,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"2341:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2341:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7458,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"2370:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"2370:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"2389:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2389:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"2356:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"2356:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2341:63:31","trueExpression":{"hexValue":"30","id":7456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7436,"id":7466,"nodeType":"Return","src":"2334:70:31"}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"1953:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7468,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2123:11:31","nodeType":"FunctionDefinition","parameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"self","nameLocation":"2152:4:31","nodeType":"VariableDeclaration","scope":7468,"src":"2135:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7429,"nodeType":"UserDefinedTypeName","pathNode":{"id":7428,"name":"Trace224","nameLocations":["2135:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"2135:8:31"},"referencedDeclaration":7358,"src":"2135:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7432,"mutability":"mutable","name":"key","nameLocation":"2165:3:31","nodeType":"VariableDeclaration","scope":7468,"src":"2158:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7431,"name":"uint32","nodeType":"ElementaryTypeName","src":"2158:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2134:35:31"},"returnParameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7468,"src":"2193:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7434,"name":"uint224","nodeType":"ElementaryTypeName","src":"2193:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2192:9:31"},"scope":8926,"src":"2114:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7552,"nodeType":"Block","src":"2810:512:31","statements":[{"assignments":[7480],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"len","nameLocation":"2828:3:31","nodeType":"VariableDeclaration","scope":7552,"src":"2820:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7484,"initialValue":{"expression":{"expression":{"id":7481,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"2834:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2839:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"2834:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:31","memberName":"length","nodeType":"MemberAccess","src":"2834:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2820:38:31"},{"assignments":[7486],"declarations":[{"constant":false,"id":7486,"mutability":"mutable","name":"low","nameLocation":"2877:3:31","nodeType":"VariableDeclaration","scope":7552,"src":"2869:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7488,"initialValue":{"hexValue":"30","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2869:15:31"},{"assignments":[7490],"declarations":[{"constant":false,"id":7490,"mutability":"mutable","name":"high","nameLocation":"2902:4:31","nodeType":"VariableDeclaration","scope":7552,"src":"2894:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7492,"initialValue":{"id":7491,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2909:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7493,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2927:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2927:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7527,"nodeType":"IfStatement","src":"2923:234:31","trueBody":{"id":7526,"nodeType":"Block","src":"2936:221:31","statements":[{"assignments":[7497],"declarations":[{"constant":false,"id":7497,"mutability":"mutable","name":"mid","nameLocation":"2958:3:31","nodeType":"VariableDeclaration","scope":7526,"src":"2950:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7504,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2964:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7501,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"2980:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7499,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"2970:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4815,"src":"2970:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2950:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7505,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"3002:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7507,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"3022:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3027:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3022:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7509,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"3041:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7506,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"3008:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7360,"src":"3008:42:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3002:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7524,"nodeType":"Block","src":"3101:46:31","statements":[{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7518,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"3119:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7519,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"3125:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3119:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7523,"nodeType":"ExpressionStatement","src":"3119:13:31"}]},"id":7525,"nodeType":"IfStatement","src":"2998:149:31","trueBody":{"id":7517,"nodeType":"Block","src":"3052:43:31","statements":[{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7513,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"3070:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7514,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"3077:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7516,"nodeType":"ExpressionStatement","src":"3070:10:31"}]}}]}},{"assignments":[7529],"declarations":[{"constant":false,"id":7529,"mutability":"mutable","name":"pos","nameLocation":"3175:3:31","nodeType":"VariableDeclaration","scope":7552,"src":"3167:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7537,"initialValue":{"arguments":[{"expression":{"id":7531,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"3200:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3200:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7533,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"3219:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7534,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"3224:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7535,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"3229:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7530,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":7810,"src":"3181:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3167:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7538,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"3252:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3252:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7543,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"3281:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3281:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7545,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"3300:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3300:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7542,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"3267:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"3267:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3252:63:31","trueExpression":{"hexValue":"30","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7478,"id":7551,"nodeType":"Return","src":"3245:70:31"}]},"documentation":{"id":7469,"nodeType":"StructuredDocumentation","src":"2417:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7553,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2725:17:31","nodeType":"FunctionDefinition","parameters":{"id":7475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7472,"mutability":"mutable","name":"self","nameLocation":"2760:4:31","nodeType":"VariableDeclaration","scope":7553,"src":"2743:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7471,"nodeType":"UserDefinedTypeName","pathNode":{"id":7470,"name":"Trace224","nameLocations":["2743:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"2743:8:31"},"referencedDeclaration":7358,"src":"2743:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7474,"mutability":"mutable","name":"key","nameLocation":"2773:3:31","nodeType":"VariableDeclaration","scope":7553,"src":"2766:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7473,"name":"uint32","nodeType":"ElementaryTypeName","src":"2766:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2742:35:31"},"returnParameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7553,"src":"2801:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7476,"name":"uint224","nodeType":"ElementaryTypeName","src":"2801:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2800:9:31"},"scope":8926,"src":"2716:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7582,"nodeType":"Block","src":"3513:135:31","statements":[{"assignments":[7563],"declarations":[{"constant":false,"id":7563,"mutability":"mutable","name":"pos","nameLocation":"3531:3:31","nodeType":"VariableDeclaration","scope":7582,"src":"3523:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7562,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7567,"initialValue":{"expression":{"expression":{"id":7564,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"3537:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3542:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3537:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:31","memberName":"length","nodeType":"MemberAccess","src":"3537:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3523:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7568,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3578:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3578:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7573,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"3607:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3612:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3607:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3626:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3632:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3626:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7572,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"3593:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3635:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"3593:48:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3578:63:31","trueExpression":{"hexValue":"30","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3589:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7561,"id":7581,"nodeType":"Return","src":"3571:70:31"}]},"documentation":{"id":7554,"nodeType":"StructuredDocumentation","src":"3328:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7583,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3451:6:31","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"self","nameLocation":"3475:4:31","nodeType":"VariableDeclaration","scope":7583,"src":"3458:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7556,"nodeType":"UserDefinedTypeName","pathNode":{"id":7555,"name":"Trace224","nameLocations":["3458:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"3458:8:31"},"referencedDeclaration":7358,"src":"3458:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3457:23:31"},"returnParameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"3504:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7559,"name":"uint224","nodeType":"ElementaryTypeName","src":"3504:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3503:9:31"},"scope":8926,"src":"3442:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7631,"nodeType":"Block","src":"3941:275:31","statements":[{"assignments":[7597],"declarations":[{"constant":false,"id":7597,"mutability":"mutable","name":"pos","nameLocation":"3959:3:31","nodeType":"VariableDeclaration","scope":7631,"src":"3951:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3951:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7601,"initialValue":{"expression":{"expression":{"id":7598,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"3965:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"3965:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:31","memberName":"length","nodeType":"MemberAccess","src":"3965:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3951:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"4003:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4003:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7629,"nodeType":"Block","src":"4064:146:31","statements":[{"assignments":[7613],"declarations":[{"constant":false,"id":7613,"mutability":"mutable","name":"ckpt","nameLocation":"4100:4:31","nodeType":"VariableDeclaration","scope":7629,"src":"4078:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7612,"nodeType":"UserDefinedTypeName","pathNode":{"id":7611,"name":"Checkpoint224","nameLocations":["4078:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"4078:13:31"},"referencedDeclaration":7363,"src":"4078:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7621,"initialValue":{"arguments":[{"expression":{"id":7615,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"4121:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"4121:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"4140:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4146:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4140:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7614,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"4107:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4078:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4170:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7623,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"4176:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7360,"src":"4176:9:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7625,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"4187:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"4187:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4169:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":7595,"id":7628,"nodeType":"Return","src":"4162:37:31"}]},"id":7630,"nodeType":"IfStatement","src":"3999:211:31","trueBody":{"id":7610,"nodeType":"Block","src":"4013:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4035:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7595,"id":7609,"nodeType":"Return","src":"4027:20:31"}]}}]},"documentation":{"id":7584,"nodeType":"StructuredDocumentation","src":"3654:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7632,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3836:16:31","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"self","nameLocation":"3870:4:31","nodeType":"VariableDeclaration","scope":7632,"src":"3853:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7586,"nodeType":"UserDefinedTypeName","pathNode":{"id":7585,"name":"Trace224","nameLocations":["3853:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"3853:8:31"},"referencedDeclaration":7358,"src":"3853:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3852:23:31"},"returnParameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"exists","nameLocation":"3904:6:31","nodeType":"VariableDeclaration","scope":7632,"src":"3899:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7589,"name":"bool","nodeType":"ElementaryTypeName","src":"3899:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7592,"mutability":"mutable","name":"_key","nameLocation":"3919:4:31","nodeType":"VariableDeclaration","scope":7632,"src":"3912:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7591,"name":"uint32","nodeType":"ElementaryTypeName","src":"3912:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7594,"mutability":"mutable","name":"_value","nameLocation":"3933:6:31","nodeType":"VariableDeclaration","scope":7632,"src":"3925:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7593,"name":"uint224","nodeType":"ElementaryTypeName","src":"3925:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3898:42:31"},"scope":8926,"src":"3827:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7645,"nodeType":"Block","src":"4355:48:31","statements":[{"expression":{"expression":{"expression":{"id":7641,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"4372:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4377:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"4372:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:6:31","memberName":"length","nodeType":"MemberAccess","src":"4372:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7640,"id":7644,"nodeType":"Return","src":"4365:31:31"}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"4222:57:31","text":" @dev Returns the number of checkpoint."},"id":7646,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4293:6:31","nodeType":"FunctionDefinition","parameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"self","nameLocation":"4317:4:31","nodeType":"VariableDeclaration","scope":7646,"src":"4300:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7635,"nodeType":"UserDefinedTypeName","pathNode":{"id":7634,"name":"Trace224","nameLocations":["4300:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"4300:8:31"},"referencedDeclaration":7358,"src":"4300:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4299:23:31"},"returnParameters":{"id":7640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7646,"src":"4346:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4345:9:31"},"scope":8926,"src":"4284:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7663,"nodeType":"Block","src":"4567:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":7658,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"4584:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7357,"src":"4584:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":7661,"indexExpression":{"id":7660,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"4602:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4584:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":7657,"id":7662,"nodeType":"Return","src":"4577:29:31"}]},"documentation":{"id":7647,"nodeType":"StructuredDocumentation","src":"4409:61:31","text":" @dev Returns checkpoint at given position."},"id":7664,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4484:2:31","nodeType":"FunctionDefinition","parameters":{"id":7653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7650,"mutability":"mutable","name":"self","nameLocation":"4504:4:31","nodeType":"VariableDeclaration","scope":7664,"src":"4487:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7649,"nodeType":"UserDefinedTypeName","pathNode":{"id":7648,"name":"Trace224","nameLocations":["4487:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7358,"src":"4487:8:31"},"referencedDeclaration":7358,"src":"4487:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7358_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7652,"mutability":"mutable","name":"pos","nameLocation":"4517:3:31","nodeType":"VariableDeclaration","scope":7664,"src":"4510:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7651,"name":"uint32","nodeType":"ElementaryTypeName","src":"4510:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4486:35:31"},"returnParameters":{"id":7657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7664,"src":"4545:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7655,"nodeType":"UserDefinedTypeName","pathNode":{"id":7654,"name":"Checkpoint224","nameLocations":["4545:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"4545:13:31"},"referencedDeclaration":7363,"src":"4545:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4544:22:31"},"scope":8926,"src":"4475:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7757,"nodeType":"Block","src":"4946:765:31","statements":[{"assignments":[7681],"declarations":[{"constant":false,"id":7681,"mutability":"mutable","name":"pos","nameLocation":"4964:3:31","nodeType":"VariableDeclaration","scope":7757,"src":"4956:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7680,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7684,"initialValue":{"expression":{"id":7682,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"4970:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4975:6:31","memberName":"length","nodeType":"MemberAccess","src":"4970:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4956:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"4996:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4996:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7755,"nodeType":"Block","src":"5597:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":7746,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5642:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5655:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7745,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"5621:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5636:4:31","5647:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5621:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7363_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7742,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5611:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5616:4:31","memberName":"push","nodeType":"MemberAccess","src":"5611:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7363_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5611:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7750,"nodeType":"ExpressionStatement","src":"5611:52:31"},{"expression":{"components":[{"hexValue":"30","id":7751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5685:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5688:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5684:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":7679,"id":7754,"nodeType":"Return","src":"5677:17:31"}]},"id":7756,"nodeType":"IfStatement","src":"4992:713:31","trueBody":{"id":7741,"nodeType":"Block","src":"5005:586:31","statements":[{"assignments":[7690],"declarations":[{"constant":false,"id":7690,"mutability":"mutable","name":"last","nameLocation":"5041:4:31","nodeType":"VariableDeclaration","scope":7741,"src":"5019:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7689,"nodeType":"UserDefinedTypeName","pathNode":{"id":7688,"name":"Checkpoint224","nameLocations":["5019:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"5019:13:31"},"referencedDeclaration":7363,"src":"5019:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":7697,"initialValue":{"arguments":[{"id":7692,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5062:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7693,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"5068:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5068:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7691,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"5048:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5019:57:31"},{"assignments":[7699],"declarations":[{"constant":false,"id":7699,"mutability":"mutable","name":"lastKey","nameLocation":"5097:7:31","nodeType":"VariableDeclaration","scope":7741,"src":"5090:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7698,"name":"uint32","nodeType":"ElementaryTypeName","src":"5090:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7702,"initialValue":{"expression":{"id":7700,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7690,"src":"5107:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5112:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7360,"src":"5107:9:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5090:26:31"},{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"lastValue","nameLocation":"5138:9:31","nodeType":"VariableDeclaration","scope":7741,"src":"5130:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7703,"name":"uint224","nodeType":"ElementaryTypeName","src":"5130:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":7707,"initialValue":{"expression":{"id":7705,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7690,"src":"5150:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"5150:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"5130:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7708,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"5235:7:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7709,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5245:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5235:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7715,"nodeType":"IfStatement","src":"5231:89:31","trueBody":{"id":7714,"nodeType":"Block","src":"5250:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7711,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5275:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7713,"nodeType":"RevertStatement","src":"5268:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7716,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"5383:7:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7717,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5394:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5383:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7735,"nodeType":"Block","src":"5457:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":7730,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5506:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5519:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7729,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"5485:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5500:4:31","5511:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5485:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7363_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":7726,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5475:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:4:31","memberName":"push","nodeType":"MemberAccess","src":"5475:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7363_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7734,"nodeType":"ExpressionStatement","src":"5475:52:31"}]},"id":7736,"nodeType":"IfStatement","src":"5379:163:31","trueBody":{"id":7725,"nodeType":"Block","src":"5399:52:31","statements":[{"expression":{"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7719,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7690,"src":"5417:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5422:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"5417:11:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5431:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5417:19:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":7724,"nodeType":"ExpressionStatement","src":"5417:19:31"}]}},{"expression":{"components":[{"id":7737,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"5563:9:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":7738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5574:5:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":7739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5562:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7679,"id":7740,"nodeType":"Return","src":"5555:25:31"}]}}]},"documentation":{"id":7665,"nodeType":"StructuredDocumentation","src":"4619:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7758,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4798:7:31","nodeType":"FunctionDefinition","parameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"self","nameLocation":"4839:4:31","nodeType":"VariableDeclaration","scope":7758,"src":"4815:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7667,"nodeType":"UserDefinedTypeName","pathNode":{"id":7666,"name":"Checkpoint224","nameLocations":["4815:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"4815:13:31"},"referencedDeclaration":7363,"src":"4815:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7668,"nodeType":"ArrayTypeName","src":"4815:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7671,"mutability":"mutable","name":"key","nameLocation":"4860:3:31","nodeType":"VariableDeclaration","scope":7758,"src":"4853:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7670,"name":"uint32","nodeType":"ElementaryTypeName","src":"4853:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7673,"mutability":"mutable","name":"value","nameLocation":"4881:5:31","nodeType":"VariableDeclaration","scope":7758,"src":"4873:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7672,"name":"uint224","nodeType":"ElementaryTypeName","src":"4873:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4805:87:31"},"returnParameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7676,"mutability":"mutable","name":"oldValue","nameLocation":"4918:8:31","nodeType":"VariableDeclaration","scope":7758,"src":"4910:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7675,"name":"uint224","nodeType":"ElementaryTypeName","src":"4910:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7678,"mutability":"mutable","name":"newValue","nameLocation":"4936:8:31","nodeType":"VariableDeclaration","scope":7758,"src":"4928:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7677,"name":"uint224","nodeType":"ElementaryTypeName","src":"4928:7:31","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4909:36:31"},"scope":8926,"src":"4789:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7809,"nodeType":"Block","src":"6227:267:31","statements":[{"body":{"id":7805,"nodeType":"Block","src":"6256:211:31","statements":[{"assignments":[7778],"declarations":[{"constant":false,"id":7778,"mutability":"mutable","name":"mid","nameLocation":"6278:3:31","nodeType":"VariableDeclaration","scope":7805,"src":"6270:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7784,"initialValue":{"arguments":[{"id":7781,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6297:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7782,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"6302:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7779,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"6284:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6289:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"6284:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6270:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7786,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"6339:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7787,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"6345:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"6325:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6350:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7360,"src":"6325:29:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7790,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"6357:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6325:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7803,"nodeType":"Block","src":"6411:46:31","statements":[{"expression":{"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7797,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6429:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7798,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"6435:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6441:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6435:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6429:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7802,"nodeType":"ExpressionStatement","src":"6429:13:31"}]},"id":7804,"nodeType":"IfStatement","src":"6321:136:31","trueBody":{"id":7796,"nodeType":"Block","src":"6362:43:31","statements":[{"expression":{"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7792,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"6380:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7793,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"6387:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7795,"nodeType":"ExpressionStatement","src":"6380:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7774,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6244:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7775,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"6250:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7806,"nodeType":"WhileStatement","src":"6237:230:31"},{"expression":{"id":7807,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"6483:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7773,"id":7808,"nodeType":"Return","src":"6476:11:31"}]},"documentation":{"id":7759,"nodeType":"StructuredDocumentation","src":"5717:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7810,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6070:18:31","nodeType":"FunctionDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7763,"mutability":"mutable","name":"self","nameLocation":"6122:4:31","nodeType":"VariableDeclaration","scope":7810,"src":"6098:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7761,"nodeType":"UserDefinedTypeName","pathNode":{"id":7760,"name":"Checkpoint224","nameLocations":["6098:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"6098:13:31"},"referencedDeclaration":7363,"src":"6098:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7762,"nodeType":"ArrayTypeName","src":"6098:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7765,"mutability":"mutable","name":"key","nameLocation":"6143:3:31","nodeType":"VariableDeclaration","scope":7810,"src":"6136:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7764,"name":"uint32","nodeType":"ElementaryTypeName","src":"6136:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7767,"mutability":"mutable","name":"low","nameLocation":"6164:3:31","nodeType":"VariableDeclaration","scope":7810,"src":"6156:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7769,"mutability":"mutable","name":"high","nameLocation":"6185:4:31","nodeType":"VariableDeclaration","scope":7810,"src":"6177:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6088:107:31"},"returnParameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7810,"src":"6218:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:9:31"},"scope":8926,"src":"6061:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7861,"nodeType":"Block","src":"7011:267:31","statements":[{"body":{"id":7857,"nodeType":"Block","src":"7040:211:31","statements":[{"assignments":[7830],"declarations":[{"constant":false,"id":7830,"mutability":"mutable","name":"mid","nameLocation":"7062:3:31","nodeType":"VariableDeclaration","scope":7857,"src":"7054:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7829,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7836,"initialValue":{"arguments":[{"id":7833,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"7081:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7834,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"7086:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7831,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"7068:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7073:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"7068:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7054:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7838,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"7123:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":7839,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"7129:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7837,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":7877,"src":"7109:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7363_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":7841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7134:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7360,"src":"7109:29:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7842,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"7141:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7109:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7855,"nodeType":"Block","src":"7198:43:31","statements":[{"expression":{"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7851,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"7216:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7852,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"7223:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7854,"nodeType":"ExpressionStatement","src":"7216:10:31"}]},"id":7856,"nodeType":"IfStatement","src":"7105:136:31","trueBody":{"id":7850,"nodeType":"Block","src":"7146:46:31","statements":[{"expression":{"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7844,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"7164:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7845,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"7170:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7176:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7170:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7849,"nodeType":"ExpressionStatement","src":"7164:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7826,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"7028:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7827,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"7034:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7028:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7858,"nodeType":"WhileStatement","src":"7021:230:31"},{"expression":{"id":7859,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"7267:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7825,"id":7860,"nodeType":"Return","src":"7260:11:31"}]},"documentation":{"id":7811,"nodeType":"StructuredDocumentation","src":"6500:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7862,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6854:18:31","nodeType":"FunctionDefinition","parameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"self","nameLocation":"6906:4:31","nodeType":"VariableDeclaration","scope":7862,"src":"6882:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7813,"nodeType":"UserDefinedTypeName","pathNode":{"id":7812,"name":"Checkpoint224","nameLocations":["6882:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"6882:13:31"},"referencedDeclaration":7363,"src":"6882:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7814,"nodeType":"ArrayTypeName","src":"6882:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7817,"mutability":"mutable","name":"key","nameLocation":"6927:3:31","nodeType":"VariableDeclaration","scope":7862,"src":"6920:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7816,"name":"uint32","nodeType":"ElementaryTypeName","src":"6920:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7819,"mutability":"mutable","name":"low","nameLocation":"6948:3:31","nodeType":"VariableDeclaration","scope":7862,"src":"6940:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7818,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7821,"mutability":"mutable","name":"high","nameLocation":"6969:4:31","nodeType":"VariableDeclaration","scope":7862,"src":"6961:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6872:107:31"},"returnParameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7862,"src":"7002:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7823,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:9:31"},"scope":8926,"src":"6845:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7876,"nodeType":"Block","src":"7561:125:31","statements":[{"AST":{"nativeSrc":"7580:100:31","nodeType":"YulBlock","src":"7580:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7601:1:31","nodeType":"YulLiteral","src":"7601:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"7604:9:31","nodeType":"YulIdentifier","src":"7604:9:31"}],"functionName":{"name":"mstore","nativeSrc":"7594:6:31","nodeType":"YulIdentifier","src":"7594:6:31"},"nativeSrc":"7594:20:31","nodeType":"YulFunctionCall","src":"7594:20:31"},"nativeSrc":"7594:20:31","nodeType":"YulExpressionStatement","src":"7594:20:31"},{"nativeSrc":"7627:43:31","nodeType":"YulAssignment","src":"7627:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7656:1:31","nodeType":"YulLiteral","src":"7656:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"7659:4:31","nodeType":"YulLiteral","src":"7659:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7646:9:31","nodeType":"YulIdentifier","src":"7646:9:31"},"nativeSrc":"7646:18:31","nodeType":"YulFunctionCall","src":"7646:18:31"},{"name":"pos","nativeSrc":"7666:3:31","nodeType":"YulIdentifier","src":"7666:3:31"}],"functionName":{"name":"add","nativeSrc":"7642:3:31","nodeType":"YulIdentifier","src":"7642:3:31"},"nativeSrc":"7642:28:31","nodeType":"YulFunctionCall","src":"7642:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"7627:11:31","nodeType":"YulIdentifier","src":"7627:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7869,"isOffset":false,"isSlot":false,"src":"7666:3:31","valueSize":1},{"declaration":7873,"isOffset":false,"isSlot":true,"src":"7627:11:31","suffix":"slot","valueSize":1},{"declaration":7867,"isOffset":false,"isSlot":true,"src":"7604:9:31","suffix":"slot","valueSize":1}],"id":7875,"nodeType":"InlineAssembly","src":"7571:109:31"}]},"documentation":{"id":7863,"nodeType":"StructuredDocumentation","src":"7284:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7877,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7430:13:31","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"self","nameLocation":"7477:4:31","nodeType":"VariableDeclaration","scope":7877,"src":"7453:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7865,"nodeType":"UserDefinedTypeName","pathNode":{"id":7864,"name":"Checkpoint224","nameLocations":["7453:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"7453:13:31"},"referencedDeclaration":7363,"src":"7453:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7866,"nodeType":"ArrayTypeName","src":"7453:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7363_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"pos","nameLocation":"7499:3:31","nodeType":"VariableDeclaration","scope":7877,"src":"7491:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7443:65:31"},"returnParameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"result","nameLocation":"7553:6:31","nodeType":"VariableDeclaration","scope":7877,"src":"7531:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":7872,"nodeType":"UserDefinedTypeName","pathNode":{"id":7871,"name":"Checkpoint224","nameLocations":["7531:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7363,"src":"7531:13:31"},"referencedDeclaration":7363,"src":"7531:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7363_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7530:30:31"},"scope":8926,"src":"7421:265:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":7882,"members":[{"constant":false,"id":7881,"mutability":"mutable","name":"_checkpoints","nameLocation":"7734:12:31","nodeType":"VariableDeclaration","scope":7882,"src":"7718:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7879,"nodeType":"UserDefinedTypeName","pathNode":{"id":7878,"name":"Checkpoint208","nameLocations":["7718:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"7718:13:31"},"referencedDeclaration":7887,"src":"7718:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7880,"nodeType":"ArrayTypeName","src":"7718:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7699:8:31","nodeType":"StructDefinition","scope":8926,"src":"7692:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":7887,"members":[{"constant":false,"id":7884,"mutability":"mutable","name":"_key","nameLocation":"7797:4:31","nodeType":"VariableDeclaration","scope":7887,"src":"7790:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7883,"name":"uint48","nodeType":"ElementaryTypeName","src":"7790:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7886,"mutability":"mutable","name":"_value","nameLocation":"7819:6:31","nodeType":"VariableDeclaration","scope":7887,"src":"7811:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7885,"name":"uint208","nodeType":"ElementaryTypeName","src":"7811:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7766:13:31","nodeType":"StructDefinition","scope":8926,"src":"7759:73:31","visibility":"public"},{"body":{"id":7909,"nodeType":"Block","src":"8293:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":7903,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"8318:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8323:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"8318:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7905,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"8337:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"8342:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7902,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7758,8282,8806],"referencedDeclaration":8282,"src":"8310:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8310:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7901,"id":7908,"nodeType":"Return","src":"8303:45:31"}]},"documentation":{"id":7888,"nodeType":"StructuredDocumentation","src":"7838:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":7910,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8154:4:31","nodeType":"FunctionDefinition","parameters":{"id":7896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"self","nameLocation":"8185:4:31","nodeType":"VariableDeclaration","scope":7910,"src":"8168:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7890,"nodeType":"UserDefinedTypeName","pathNode":{"id":7889,"name":"Trace208","nameLocations":["8168:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"8168:8:31"},"referencedDeclaration":7882,"src":"8168:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7893,"mutability":"mutable","name":"key","nameLocation":"8206:3:31","nodeType":"VariableDeclaration","scope":7910,"src":"8199:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7892,"name":"uint48","nodeType":"ElementaryTypeName","src":"8199:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7895,"mutability":"mutable","name":"value","nameLocation":"8227:5:31","nodeType":"VariableDeclaration","scope":7910,"src":"8219:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7894,"name":"uint208","nodeType":"ElementaryTypeName","src":"8219:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8158:80:31"},"returnParameters":{"id":7901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7898,"mutability":"mutable","name":"oldValue","nameLocation":"8265:8:31","nodeType":"VariableDeclaration","scope":7910,"src":"8257:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7897,"name":"uint208","nodeType":"ElementaryTypeName","src":"8257:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7900,"mutability":"mutable","name":"newValue","nameLocation":"8283:8:31","nodeType":"VariableDeclaration","scope":7910,"src":"8275:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7899,"name":"uint208","nodeType":"ElementaryTypeName","src":"8275:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8256:36:31"},"scope":8926,"src":"8145:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7949,"nodeType":"Block","src":"8608:207:31","statements":[{"assignments":[7922],"declarations":[{"constant":false,"id":7922,"mutability":"mutable","name":"len","nameLocation":"8626:3:31","nodeType":"VariableDeclaration","scope":7949,"src":"8618:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7921,"name":"uint256","nodeType":"ElementaryTypeName","src":"8618:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7926,"initialValue":{"expression":{"expression":{"id":7923,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"8632:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8637:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"8632:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:31","memberName":"length","nodeType":"MemberAccess","src":"8632:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8618:38:31"},{"assignments":[7928],"declarations":[{"constant":false,"id":7928,"mutability":"mutable","name":"pos","nameLocation":"8674:3:31","nodeType":"VariableDeclaration","scope":7949,"src":"8666:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7927,"name":"uint256","nodeType":"ElementaryTypeName","src":"8666:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7936,"initialValue":{"arguments":[{"expression":{"id":7930,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"8699:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8704:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"8699:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7932,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"8718:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7934,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"8726:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7929,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7862,8386,8910],"referencedDeclaration":8386,"src":"8680:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8680:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8666:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"8747:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7938,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"8754:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7942,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"8778:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8783:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"8778:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7944,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"8797:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7941,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"8764:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8764:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8802:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"8764:44:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8747:61:31","trueExpression":{"hexValue":"30","id":7940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8760:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7920,"id":7948,"nodeType":"Return","src":"8740:68:31"}]},"documentation":{"id":7911,"nodeType":"StructuredDocumentation","src":"8361:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7950,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8529:11:31","nodeType":"FunctionDefinition","parameters":{"id":7917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"self","nameLocation":"8558:4:31","nodeType":"VariableDeclaration","scope":7950,"src":"8541:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7913,"nodeType":"UserDefinedTypeName","pathNode":{"id":7912,"name":"Trace208","nameLocations":["8541:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"8541:8:31"},"referencedDeclaration":7882,"src":"8541:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7916,"mutability":"mutable","name":"key","nameLocation":"8571:3:31","nodeType":"VariableDeclaration","scope":7950,"src":"8564:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7915,"name":"uint48","nodeType":"ElementaryTypeName","src":"8564:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8540:35:31"},"returnParameters":{"id":7920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7950,"src":"8599:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7918,"name":"uint208","nodeType":"ElementaryTypeName","src":"8599:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8598:9:31"},"scope":8926,"src":"8520:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7991,"nodeType":"Block","src":"9070:209:31","statements":[{"assignments":[7962],"declarations":[{"constant":false,"id":7962,"mutability":"mutable","name":"len","nameLocation":"9088:3:31","nodeType":"VariableDeclaration","scope":7991,"src":"9080:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7961,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7966,"initialValue":{"expression":{"expression":{"id":7963,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"9094:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"9094:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9112:6:31","memberName":"length","nodeType":"MemberAccess","src":"9094:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9080:38:31"},{"assignments":[7968],"declarations":[{"constant":false,"id":7968,"mutability":"mutable","name":"pos","nameLocation":"9136:3:31","nodeType":"VariableDeclaration","scope":7991,"src":"9128:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7976,"initialValue":{"arguments":[{"expression":{"id":7970,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"9161:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9166:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"9161:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7972,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"9180:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7974,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"9188:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7969,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":8334,"src":"9142:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9142:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9128:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7977,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"9209:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9209:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7982,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"9238:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9243:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"9238:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7984,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"9257:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9263:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9257:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7981,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"9224:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9224:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9266:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"9224:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9209:63:31","trueExpression":{"hexValue":"30","id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9220:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7960,"id":7990,"nodeType":"Return","src":"9202:70:31"}]},"documentation":{"id":7951,"nodeType":"StructuredDocumentation","src":"8821:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7992,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8991:11:31","nodeType":"FunctionDefinition","parameters":{"id":7957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"self","nameLocation":"9020:4:31","nodeType":"VariableDeclaration","scope":7992,"src":"9003:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7953,"nodeType":"UserDefinedTypeName","pathNode":{"id":7952,"name":"Trace208","nameLocations":["9003:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"9003:8:31"},"referencedDeclaration":7882,"src":"9003:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7956,"mutability":"mutable","name":"key","nameLocation":"9033:3:31","nodeType":"VariableDeclaration","scope":7992,"src":"9026:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7955,"name":"uint48","nodeType":"ElementaryTypeName","src":"9026:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9002:35:31"},"returnParameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7992,"src":"9061:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7958,"name":"uint208","nodeType":"ElementaryTypeName","src":"9061:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9060:9:31"},"scope":8926,"src":"8982:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8076,"nodeType":"Block","src":"9678:512:31","statements":[{"assignments":[8004],"declarations":[{"constant":false,"id":8004,"mutability":"mutable","name":"len","nameLocation":"9696:3:31","nodeType":"VariableDeclaration","scope":8076,"src":"9688:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8003,"name":"uint256","nodeType":"ElementaryTypeName","src":"9688:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8008,"initialValue":{"expression":{"expression":{"id":8005,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"9702:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9707:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"9702:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:31","memberName":"length","nodeType":"MemberAccess","src":"9702:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9688:38:31"},{"assignments":[8010],"declarations":[{"constant":false,"id":8010,"mutability":"mutable","name":"low","nameLocation":"9745:3:31","nodeType":"VariableDeclaration","scope":8076,"src":"9737:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8009,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8012,"initialValue":{"hexValue":"30","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9751:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9737:15:31"},{"assignments":[8014],"declarations":[{"constant":false,"id":8014,"mutability":"mutable","name":"high","nameLocation":"9770:4:31","nodeType":"VariableDeclaration","scope":8076,"src":"9762:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8013,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8016,"initialValue":{"id":8015,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9777:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8017,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9795:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9801:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9795:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8051,"nodeType":"IfStatement","src":"9791:234:31","trueBody":{"id":8050,"nodeType":"Block","src":"9804:221:31","statements":[{"assignments":[8021],"declarations":[{"constant":false,"id":8021,"mutability":"mutable","name":"mid","nameLocation":"9826:3:31","nodeType":"VariableDeclaration","scope":8050,"src":"9818:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9818:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8022,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9832:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8025,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"9848:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8023,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"9838:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9843:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4815,"src":"9838:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9832:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9818:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8029,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"9870:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8031,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"9890:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9895:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"9890:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8033,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"9909:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8030,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"9876:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9914:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7884,"src":"9876:42:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9870:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8048,"nodeType":"Block","src":"9969:46:31","statements":[{"expression":{"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8042,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9987:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8043,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"9993:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9999:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9993:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8047,"nodeType":"ExpressionStatement","src":"9987:13:31"}]},"id":8049,"nodeType":"IfStatement","src":"9866:149:31","trueBody":{"id":8041,"nodeType":"Block","src":"9920:43:31","statements":[{"expression":{"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8037,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"9938:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8038,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"9945:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9938:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8040,"nodeType":"ExpressionStatement","src":"9938:10:31"}]}}]}},{"assignments":[8053],"declarations":[{"constant":false,"id":8053,"mutability":"mutable","name":"pos","nameLocation":"10043:3:31","nodeType":"VariableDeclaration","scope":8076,"src":"10035:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"10035:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8061,"initialValue":{"arguments":[{"expression":{"id":8055,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"10068:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10073:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10068:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8057,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"10087:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8058,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"10092:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8059,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"10097:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8054,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":8334,"src":"10049:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10049:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10035:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8062,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"10120:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10127:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10120:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8067,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"10149:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10154:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10149:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8069,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"10168:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10174:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10168:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8066,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"10135:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10135:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10177:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"10135:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10120:63:31","trueExpression":{"hexValue":"30","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8002,"id":8075,"nodeType":"Return","src":"10113:70:31"}]},"documentation":{"id":7993,"nodeType":"StructuredDocumentation","src":"9285:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8077,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9593:17:31","nodeType":"FunctionDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7996,"mutability":"mutable","name":"self","nameLocation":"9628:4:31","nodeType":"VariableDeclaration","scope":8077,"src":"9611:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7995,"nodeType":"UserDefinedTypeName","pathNode":{"id":7994,"name":"Trace208","nameLocations":["9611:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"9611:8:31"},"referencedDeclaration":7882,"src":"9611:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7998,"mutability":"mutable","name":"key","nameLocation":"9641:3:31","nodeType":"VariableDeclaration","scope":8077,"src":"9634:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7997,"name":"uint48","nodeType":"ElementaryTypeName","src":"9634:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9610:35:31"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8077,"src":"9669:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8000,"name":"uint208","nodeType":"ElementaryTypeName","src":"9669:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9668:9:31"},"scope":8926,"src":"9584:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8106,"nodeType":"Block","src":"10381:135:31","statements":[{"assignments":[8087],"declarations":[{"constant":false,"id":8087,"mutability":"mutable","name":"pos","nameLocation":"10399:3:31","nodeType":"VariableDeclaration","scope":8106,"src":"10391:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8091,"initialValue":{"expression":{"expression":{"id":8088,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"10405:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10410:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10405:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:6:31","memberName":"length","nodeType":"MemberAccess","src":"10405:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10391:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8092,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"10446:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10453:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10446:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8097,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"10475:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10480:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10475:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8099,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"10494:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10500:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10494:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8096,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"10461:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10503:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"10461:48:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10446:63:31","trueExpression":{"hexValue":"30","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8085,"id":8105,"nodeType":"Return","src":"10439:70:31"}]},"documentation":{"id":8078,"nodeType":"StructuredDocumentation","src":"10196:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8107,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10319:6:31","nodeType":"FunctionDefinition","parameters":{"id":8082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"self","nameLocation":"10343:4:31","nodeType":"VariableDeclaration","scope":8107,"src":"10326:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8080,"nodeType":"UserDefinedTypeName","pathNode":{"id":8079,"name":"Trace208","nameLocations":["10326:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"10326:8:31"},"referencedDeclaration":7882,"src":"10326:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10325:23:31"},"returnParameters":{"id":8085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8107,"src":"10372:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8083,"name":"uint208","nodeType":"ElementaryTypeName","src":"10372:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10371:9:31"},"scope":8926,"src":"10310:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8155,"nodeType":"Block","src":"10809:275:31","statements":[{"assignments":[8121],"declarations":[{"constant":false,"id":8121,"mutability":"mutable","name":"pos","nameLocation":"10827:3:31","nodeType":"VariableDeclaration","scope":8155,"src":"10819:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8120,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8125,"initialValue":{"expression":{"expression":{"id":8122,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"10833:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10838:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10833:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10851:6:31","memberName":"length","nodeType":"MemberAccess","src":"10833:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10819:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8126,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"10871:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10878:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10871:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8153,"nodeType":"Block","src":"10932:146:31","statements":[{"assignments":[8137],"declarations":[{"constant":false,"id":8137,"mutability":"mutable","name":"ckpt","nameLocation":"10968:4:31","nodeType":"VariableDeclaration","scope":8153,"src":"10946:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8136,"nodeType":"UserDefinedTypeName","pathNode":{"id":8135,"name":"Checkpoint208","nameLocations":["10946:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"10946:13:31"},"referencedDeclaration":7887,"src":"10946:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8145,"initialValue":{"arguments":[{"expression":{"id":8139,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"10989:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10994:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"10989:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8141,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"11008:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11014:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11008:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8138,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"10975:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10975:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10946:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":8146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11038:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8147,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"11044:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7884,"src":"11044:9:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":8149,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"11055:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11060:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"11055:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11037:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":8119,"id":8152,"nodeType":"Return","src":"11030:37:31"}]},"id":8154,"nodeType":"IfStatement","src":"10867:211:31","trueBody":{"id":8134,"nodeType":"Block","src":"10881:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10903:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10910:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10913:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10902:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8119,"id":8133,"nodeType":"Return","src":"10895:20:31"}]}}]},"documentation":{"id":8108,"nodeType":"StructuredDocumentation","src":"10522:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8156,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10704:16:31","nodeType":"FunctionDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"self","nameLocation":"10738:4:31","nodeType":"VariableDeclaration","scope":8156,"src":"10721:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8110,"nodeType":"UserDefinedTypeName","pathNode":{"id":8109,"name":"Trace208","nameLocations":["10721:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"10721:8:31"},"referencedDeclaration":7882,"src":"10721:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10720:23:31"},"returnParameters":{"id":8119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8114,"mutability":"mutable","name":"exists","nameLocation":"10772:6:31","nodeType":"VariableDeclaration","scope":8156,"src":"10767:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8113,"name":"bool","nodeType":"ElementaryTypeName","src":"10767:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8116,"mutability":"mutable","name":"_key","nameLocation":"10787:4:31","nodeType":"VariableDeclaration","scope":8156,"src":"10780:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8115,"name":"uint48","nodeType":"ElementaryTypeName","src":"10780:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8118,"mutability":"mutable","name":"_value","nameLocation":"10801:6:31","nodeType":"VariableDeclaration","scope":8156,"src":"10793:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8117,"name":"uint208","nodeType":"ElementaryTypeName","src":"10793:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10766:42:31"},"scope":8926,"src":"10695:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8169,"nodeType":"Block","src":"11223:48:31","statements":[{"expression":{"expression":{"expression":{"id":8165,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"11240:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"11240:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11258:6:31","memberName":"length","nodeType":"MemberAccess","src":"11240:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8164,"id":8168,"nodeType":"Return","src":"11233:31:31"}]},"documentation":{"id":8157,"nodeType":"StructuredDocumentation","src":"11090:57:31","text":" @dev Returns the number of checkpoint."},"id":8170,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11161:6:31","nodeType":"FunctionDefinition","parameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8160,"mutability":"mutable","name":"self","nameLocation":"11185:4:31","nodeType":"VariableDeclaration","scope":8170,"src":"11168:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8159,"nodeType":"UserDefinedTypeName","pathNode":{"id":8158,"name":"Trace208","nameLocations":["11168:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"11168:8:31"},"referencedDeclaration":7882,"src":"11168:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11167:23:31"},"returnParameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8170,"src":"11214:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8162,"name":"uint256","nodeType":"ElementaryTypeName","src":"11214:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11213:9:31"},"scope":8926,"src":"11152:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8187,"nodeType":"Block","src":"11435:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":8182,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"11452:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11457:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7881,"src":"11452:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8185,"indexExpression":{"id":8184,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"11470:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11452:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":8181,"id":8186,"nodeType":"Return","src":"11445:29:31"}]},"documentation":{"id":8171,"nodeType":"StructuredDocumentation","src":"11277:61:31","text":" @dev Returns checkpoint at given position."},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11352:2:31","nodeType":"FunctionDefinition","parameters":{"id":8177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8174,"mutability":"mutable","name":"self","nameLocation":"11372:4:31","nodeType":"VariableDeclaration","scope":8188,"src":"11355:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8173,"nodeType":"UserDefinedTypeName","pathNode":{"id":8172,"name":"Trace208","nameLocations":["11355:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":7882,"src":"11355:8:31"},"referencedDeclaration":7882,"src":"11355:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$7882_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8176,"mutability":"mutable","name":"pos","nameLocation":"11385:3:31","nodeType":"VariableDeclaration","scope":8188,"src":"11378:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8175,"name":"uint32","nodeType":"ElementaryTypeName","src":"11378:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11354:35:31"},"returnParameters":{"id":8181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8188,"src":"11413:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8179,"nodeType":"UserDefinedTypeName","pathNode":{"id":8178,"name":"Checkpoint208","nameLocations":["11413:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"11413:13:31"},"referencedDeclaration":7887,"src":"11413:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11412:22:31"},"scope":8926,"src":"11343:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8281,"nodeType":"Block","src":"11814:765:31","statements":[{"assignments":[8205],"declarations":[{"constant":false,"id":8205,"mutability":"mutable","name":"pos","nameLocation":"11832:3:31","nodeType":"VariableDeclaration","scope":8281,"src":"11824:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8204,"name":"uint256","nodeType":"ElementaryTypeName","src":"11824:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8208,"initialValue":{"expression":{"id":8206,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"11838:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:6:31","memberName":"length","nodeType":"MemberAccess","src":"11838:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11824:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8209,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"11864:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11870:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11864:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8279,"nodeType":"Block","src":"12465:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8270,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"12510:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12523:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8269,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"12489:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12504:4:31","12515:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12489:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8266,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"12479:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:4:31","memberName":"push","nodeType":"MemberAccess","src":"12479:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7887_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8274,"nodeType":"ExpressionStatement","src":"12479:52:31"},{"expression":{"components":[{"hexValue":"30","id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12556:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12552:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":8203,"id":8278,"nodeType":"Return","src":"12545:17:31"}]},"id":8280,"nodeType":"IfStatement","src":"11860:713:31","trueBody":{"id":8265,"nodeType":"Block","src":"11873:586:31","statements":[{"assignments":[8214],"declarations":[{"constant":false,"id":8214,"mutability":"mutable","name":"last","nameLocation":"11909:4:31","nodeType":"VariableDeclaration","scope":8265,"src":"11887:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8213,"nodeType":"UserDefinedTypeName","pathNode":{"id":8212,"name":"Checkpoint208","nameLocations":["11887:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"11887:13:31"},"referencedDeclaration":7887,"src":"11887:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8221,"initialValue":{"arguments":[{"id":8216,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"11930:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"11936:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11936:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8215,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"11916:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11887:57:31"},{"assignments":[8223],"declarations":[{"constant":false,"id":8223,"mutability":"mutable","name":"lastKey","nameLocation":"11965:7:31","nodeType":"VariableDeclaration","scope":8265,"src":"11958:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8222,"name":"uint48","nodeType":"ElementaryTypeName","src":"11958:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8226,"initialValue":{"expression":{"id":8224,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"11975:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11980:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7884,"src":"11975:9:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11958:26:31"},{"assignments":[8228],"declarations":[{"constant":false,"id":8228,"mutability":"mutable","name":"lastValue","nameLocation":"12006:9:31","nodeType":"VariableDeclaration","scope":8265,"src":"11998:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8227,"name":"uint208","nodeType":"ElementaryTypeName","src":"11998:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"id":8231,"initialValue":{"expression":{"id":8229,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"12018:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12023:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"12018:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"VariableDeclarationStatement","src":"11998:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8232,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"12103:7:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8233,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"12113:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12103:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8239,"nodeType":"IfStatement","src":"12099:89:31","trueBody":{"id":8238,"nodeType":"Block","src":"12118:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8235,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"12143:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12143:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8237,"nodeType":"RevertStatement","src":"12136:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8240,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"12251:7:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8241,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"12262:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12251:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8259,"nodeType":"Block","src":"12325:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8254,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"12374:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12387:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8253,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"12353:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12368:4:31","12379:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12353:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$7887_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8250,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"12343:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12348:4:31","memberName":"push","nodeType":"MemberAccess","src":"12343:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$7887_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12343:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8258,"nodeType":"ExpressionStatement","src":"12343:52:31"}]},"id":8260,"nodeType":"IfStatement","src":"12247:163:31","trueBody":{"id":8249,"nodeType":"Block","src":"12267:52:31","statements":[{"expression":{"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8243,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"12285:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12290:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7886,"src":"12285:11:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12299:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12285:19:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8248,"nodeType":"ExpressionStatement","src":"12285:19:31"}]}},{"expression":{"components":[{"id":8261,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"12431:9:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"12442:5:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12430:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8203,"id":8264,"nodeType":"Return","src":"12423:25:31"}]}}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"11487:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8282,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11666:7:31","nodeType":"FunctionDefinition","parameters":{"id":8198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8193,"mutability":"mutable","name":"self","nameLocation":"11707:4:31","nodeType":"VariableDeclaration","scope":8282,"src":"11683:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8191,"nodeType":"UserDefinedTypeName","pathNode":{"id":8190,"name":"Checkpoint208","nameLocations":["11683:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"11683:13:31"},"referencedDeclaration":7887,"src":"11683:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8192,"nodeType":"ArrayTypeName","src":"11683:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"key","nameLocation":"11728:3:31","nodeType":"VariableDeclaration","scope":8282,"src":"11721:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8194,"name":"uint48","nodeType":"ElementaryTypeName","src":"11721:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8197,"mutability":"mutable","name":"value","nameLocation":"11749:5:31","nodeType":"VariableDeclaration","scope":8282,"src":"11741:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8196,"name":"uint208","nodeType":"ElementaryTypeName","src":"11741:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11673:87:31"},"returnParameters":{"id":8203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8200,"mutability":"mutable","name":"oldValue","nameLocation":"11786:8:31","nodeType":"VariableDeclaration","scope":8282,"src":"11778:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8199,"name":"uint208","nodeType":"ElementaryTypeName","src":"11778:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8202,"mutability":"mutable","name":"newValue","nameLocation":"11804:8:31","nodeType":"VariableDeclaration","scope":8282,"src":"11796:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8201,"name":"uint208","nodeType":"ElementaryTypeName","src":"11796:7:31","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11777:36:31"},"scope":8926,"src":"11657:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8333,"nodeType":"Block","src":"13095:267:31","statements":[{"body":{"id":8329,"nodeType":"Block","src":"13124:211:31","statements":[{"assignments":[8302],"declarations":[{"constant":false,"id":8302,"mutability":"mutable","name":"mid","nameLocation":"13146:3:31","nodeType":"VariableDeclaration","scope":8329,"src":"13138:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8301,"name":"uint256","nodeType":"ElementaryTypeName","src":"13138:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8308,"initialValue":{"arguments":[{"id":8305,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"13165:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8306,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"13170:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8303,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"13152:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13157:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"13152:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13152:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13138:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8310,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"13207:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8311,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"13213:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8309,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"13193:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13218:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7884,"src":"13193:29:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8314,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"13225:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13193:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8327,"nodeType":"Block","src":"13279:46:31","statements":[{"expression":{"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8321,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"13297:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8322,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"13303:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13309:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13303:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13297:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8326,"nodeType":"ExpressionStatement","src":"13297:13:31"}]},"id":8328,"nodeType":"IfStatement","src":"13189:136:31","trueBody":{"id":8320,"nodeType":"Block","src":"13230:43:31","statements":[{"expression":{"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8316,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"13248:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8317,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"13255:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13248:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8319,"nodeType":"ExpressionStatement","src":"13248:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8298,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"13112:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8299,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"13118:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13112:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8330,"nodeType":"WhileStatement","src":"13105:230:31"},{"expression":{"id":8331,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"13351:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8297,"id":8332,"nodeType":"Return","src":"13344:11:31"}]},"documentation":{"id":8283,"nodeType":"StructuredDocumentation","src":"12585:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8334,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12938:18:31","nodeType":"FunctionDefinition","parameters":{"id":8294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8287,"mutability":"mutable","name":"self","nameLocation":"12990:4:31","nodeType":"VariableDeclaration","scope":8334,"src":"12966:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8285,"nodeType":"UserDefinedTypeName","pathNode":{"id":8284,"name":"Checkpoint208","nameLocations":["12966:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"12966:13:31"},"referencedDeclaration":7887,"src":"12966:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8286,"nodeType":"ArrayTypeName","src":"12966:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"key","nameLocation":"13011:3:31","nodeType":"VariableDeclaration","scope":8334,"src":"13004:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8288,"name":"uint48","nodeType":"ElementaryTypeName","src":"13004:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8291,"mutability":"mutable","name":"low","nameLocation":"13032:3:31","nodeType":"VariableDeclaration","scope":8334,"src":"13024:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8290,"name":"uint256","nodeType":"ElementaryTypeName","src":"13024:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8293,"mutability":"mutable","name":"high","nameLocation":"13053:4:31","nodeType":"VariableDeclaration","scope":8334,"src":"13045:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8292,"name":"uint256","nodeType":"ElementaryTypeName","src":"13045:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12956:107:31"},"returnParameters":{"id":8297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8334,"src":"13086:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8295,"name":"uint256","nodeType":"ElementaryTypeName","src":"13086:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13085:9:31"},"scope":8926,"src":"12929:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8385,"nodeType":"Block","src":"13879:267:31","statements":[{"body":{"id":8381,"nodeType":"Block","src":"13908:211:31","statements":[{"assignments":[8354],"declarations":[{"constant":false,"id":8354,"mutability":"mutable","name":"mid","nameLocation":"13930:3:31","nodeType":"VariableDeclaration","scope":8381,"src":"13922:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8353,"name":"uint256","nodeType":"ElementaryTypeName","src":"13922:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8360,"initialValue":{"arguments":[{"id":8357,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"13949:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8358,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"13954:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8355,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"13936:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13941:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"13936:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13936:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13922:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8362,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"13991:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8363,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"13997:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8361,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8401,"src":"13977:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$7887_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13977:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14002:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7884,"src":"13977:29:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8366,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"14009:3:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13977:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8379,"nodeType":"Block","src":"14066:43:31","statements":[{"expression":{"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8375,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"14084:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8376,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"14091:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14084:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8378,"nodeType":"ExpressionStatement","src":"14084:10:31"}]},"id":8380,"nodeType":"IfStatement","src":"13973:136:31","trueBody":{"id":8374,"nodeType":"Block","src":"14014:46:31","statements":[{"expression":{"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8368,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"14032:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8369,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"14038:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14044:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14038:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14032:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8373,"nodeType":"ExpressionStatement","src":"14032:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8350,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"13896:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8351,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"13902:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13896:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8382,"nodeType":"WhileStatement","src":"13889:230:31"},{"expression":{"id":8383,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"14135:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8349,"id":8384,"nodeType":"Return","src":"14128:11:31"}]},"documentation":{"id":8335,"nodeType":"StructuredDocumentation","src":"13368:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8386,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13722:18:31","nodeType":"FunctionDefinition","parameters":{"id":8346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8339,"mutability":"mutable","name":"self","nameLocation":"13774:4:31","nodeType":"VariableDeclaration","scope":8386,"src":"13750:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8337,"nodeType":"UserDefinedTypeName","pathNode":{"id":8336,"name":"Checkpoint208","nameLocations":["13750:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"13750:13:31"},"referencedDeclaration":7887,"src":"13750:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8338,"nodeType":"ArrayTypeName","src":"13750:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8341,"mutability":"mutable","name":"key","nameLocation":"13795:3:31","nodeType":"VariableDeclaration","scope":8386,"src":"13788:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8340,"name":"uint48","nodeType":"ElementaryTypeName","src":"13788:6:31","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"low","nameLocation":"13816:3:31","nodeType":"VariableDeclaration","scope":8386,"src":"13808:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8342,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8345,"mutability":"mutable","name":"high","nameLocation":"13837:4:31","nodeType":"VariableDeclaration","scope":8386,"src":"13829:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"13829:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13740:107:31"},"returnParameters":{"id":8349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8386,"src":"13870:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8347,"name":"uint256","nodeType":"ElementaryTypeName","src":"13870:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13869:9:31"},"scope":8926,"src":"13713:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8400,"nodeType":"Block","src":"14429:125:31","statements":[{"AST":{"nativeSrc":"14448:100:31","nodeType":"YulBlock","src":"14448:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14469:1:31","nodeType":"YulLiteral","src":"14469:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"14472:9:31","nodeType":"YulIdentifier","src":"14472:9:31"}],"functionName":{"name":"mstore","nativeSrc":"14462:6:31","nodeType":"YulIdentifier","src":"14462:6:31"},"nativeSrc":"14462:20:31","nodeType":"YulFunctionCall","src":"14462:20:31"},"nativeSrc":"14462:20:31","nodeType":"YulExpressionStatement","src":"14462:20:31"},{"nativeSrc":"14495:43:31","nodeType":"YulAssignment","src":"14495:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14524:1:31","nodeType":"YulLiteral","src":"14524:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14527:4:31","nodeType":"YulLiteral","src":"14527:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14514:9:31","nodeType":"YulIdentifier","src":"14514:9:31"},"nativeSrc":"14514:18:31","nodeType":"YulFunctionCall","src":"14514:18:31"},{"name":"pos","nativeSrc":"14534:3:31","nodeType":"YulIdentifier","src":"14534:3:31"}],"functionName":{"name":"add","nativeSrc":"14510:3:31","nodeType":"YulIdentifier","src":"14510:3:31"},"nativeSrc":"14510:28:31","nodeType":"YulFunctionCall","src":"14510:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"14495:11:31","nodeType":"YulIdentifier","src":"14495:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8393,"isOffset":false,"isSlot":false,"src":"14534:3:31","valueSize":1},{"declaration":8397,"isOffset":false,"isSlot":true,"src":"14495:11:31","suffix":"slot","valueSize":1},{"declaration":8391,"isOffset":false,"isSlot":true,"src":"14472:9:31","suffix":"slot","valueSize":1}],"id":8399,"nodeType":"InlineAssembly","src":"14439:109:31"}]},"documentation":{"id":8387,"nodeType":"StructuredDocumentation","src":"14152:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8401,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14298:13:31","nodeType":"FunctionDefinition","parameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8391,"mutability":"mutable","name":"self","nameLocation":"14345:4:31","nodeType":"VariableDeclaration","scope":8401,"src":"14321:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8389,"nodeType":"UserDefinedTypeName","pathNode":{"id":8388,"name":"Checkpoint208","nameLocations":["14321:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"14321:13:31"},"referencedDeclaration":7887,"src":"14321:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8390,"nodeType":"ArrayTypeName","src":"14321:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$7887_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8393,"mutability":"mutable","name":"pos","nameLocation":"14367:3:31","nodeType":"VariableDeclaration","scope":8401,"src":"14359:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8392,"name":"uint256","nodeType":"ElementaryTypeName","src":"14359:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14311:65:31"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"result","nameLocation":"14421:6:31","nodeType":"VariableDeclaration","scope":8401,"src":"14399:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8396,"nodeType":"UserDefinedTypeName","pathNode":{"id":8395,"name":"Checkpoint208","nameLocations":["14399:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":7887,"src":"14399:13:31"},"referencedDeclaration":7887,"src":"14399:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$7887_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14398:30:31"},"scope":8926,"src":"14289:265:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":8406,"members":[{"constant":false,"id":8405,"mutability":"mutable","name":"_checkpoints","nameLocation":"14602:12:31","nodeType":"VariableDeclaration","scope":8406,"src":"14586:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8403,"nodeType":"UserDefinedTypeName","pathNode":{"id":8402,"name":"Checkpoint160","nameLocations":["14586:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"14586:13:31"},"referencedDeclaration":8411,"src":"14586:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8404,"nodeType":"ArrayTypeName","src":"14586:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14567:8:31","nodeType":"StructDefinition","scope":8926,"src":"14560:61:31","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":8411,"members":[{"constant":false,"id":8408,"mutability":"mutable","name":"_key","nameLocation":"14665:4:31","nodeType":"VariableDeclaration","scope":8411,"src":"14658:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8407,"name":"uint96","nodeType":"ElementaryTypeName","src":"14658:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8410,"mutability":"mutable","name":"_value","nameLocation":"14687:6:31","nodeType":"VariableDeclaration","scope":8411,"src":"14679:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8409,"name":"uint160","nodeType":"ElementaryTypeName","src":"14679:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14634:13:31","nodeType":"StructDefinition","scope":8926,"src":"14627:73:31","visibility":"public"},{"body":{"id":8433,"nodeType":"Block","src":"15161:62:31","statements":[{"expression":{"arguments":[{"expression":{"id":8427,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"15186:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15191:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"15186:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8429,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"15205:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"15210:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8426,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[7758,8282,8806],"referencedDeclaration":8806,"src":"15178:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15178:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8425,"id":8432,"nodeType":"Return","src":"15171:45:31"}]},"documentation":{"id":8412,"nodeType":"StructuredDocumentation","src":"14706:302:31","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":8434,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"15022:4:31","nodeType":"FunctionDefinition","parameters":{"id":8420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"self","nameLocation":"15053:4:31","nodeType":"VariableDeclaration","scope":8434,"src":"15036:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8414,"nodeType":"UserDefinedTypeName","pathNode":{"id":8413,"name":"Trace160","nameLocations":["15036:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"15036:8:31"},"referencedDeclaration":8406,"src":"15036:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8417,"mutability":"mutable","name":"key","nameLocation":"15074:3:31","nodeType":"VariableDeclaration","scope":8434,"src":"15067:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8416,"name":"uint96","nodeType":"ElementaryTypeName","src":"15067:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8419,"mutability":"mutable","name":"value","nameLocation":"15095:5:31","nodeType":"VariableDeclaration","scope":8434,"src":"15087:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8418,"name":"uint160","nodeType":"ElementaryTypeName","src":"15087:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15026:80:31"},"returnParameters":{"id":8425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8422,"mutability":"mutable","name":"oldValue","nameLocation":"15133:8:31","nodeType":"VariableDeclaration","scope":8434,"src":"15125:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8421,"name":"uint160","nodeType":"ElementaryTypeName","src":"15125:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8424,"mutability":"mutable","name":"newValue","nameLocation":"15151:8:31","nodeType":"VariableDeclaration","scope":8434,"src":"15143:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8423,"name":"uint160","nodeType":"ElementaryTypeName","src":"15143:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15124:36:31"},"scope":8926,"src":"15013:210:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8473,"nodeType":"Block","src":"15476:207:31","statements":[{"assignments":[8446],"declarations":[{"constant":false,"id":8446,"mutability":"mutable","name":"len","nameLocation":"15494:3:31","nodeType":"VariableDeclaration","scope":8473,"src":"15486:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8445,"name":"uint256","nodeType":"ElementaryTypeName","src":"15486:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8450,"initialValue":{"expression":{"expression":{"id":8447,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"15500:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15505:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"15500:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15518:6:31","memberName":"length","nodeType":"MemberAccess","src":"15500:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15486:38:31"},{"assignments":[8452],"declarations":[{"constant":false,"id":8452,"mutability":"mutable","name":"pos","nameLocation":"15542:3:31","nodeType":"VariableDeclaration","scope":8473,"src":"15534:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8451,"name":"uint256","nodeType":"ElementaryTypeName","src":"15534:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8460,"initialValue":{"arguments":[{"expression":{"id":8454,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"15567:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15572:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"15567:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8456,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"15586:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15591:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8458,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"15594:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8453,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7862,8386,8910],"referencedDeclaration":8910,"src":"15548:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15548:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15534:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8461,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"15615:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8462,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"15622:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15615:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8466,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"15646:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15651:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"15646:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8468,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"15665:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8465,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"15632:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15632:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15670:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"15632:44:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15615:61:31","trueExpression":{"hexValue":"30","id":8464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15628:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8444,"id":8472,"nodeType":"Return","src":"15608:68:31"}]},"documentation":{"id":8435,"nodeType":"StructuredDocumentation","src":"15229:154:31","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8474,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15397:11:31","nodeType":"FunctionDefinition","parameters":{"id":8441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8438,"mutability":"mutable","name":"self","nameLocation":"15426:4:31","nodeType":"VariableDeclaration","scope":8474,"src":"15409:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8437,"nodeType":"UserDefinedTypeName","pathNode":{"id":8436,"name":"Trace160","nameLocations":["15409:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"15409:8:31"},"referencedDeclaration":8406,"src":"15409:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8440,"mutability":"mutable","name":"key","nameLocation":"15439:3:31","nodeType":"VariableDeclaration","scope":8474,"src":"15432:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8439,"name":"uint96","nodeType":"ElementaryTypeName","src":"15432:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15408:35:31"},"returnParameters":{"id":8444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8474,"src":"15467:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8442,"name":"uint160","nodeType":"ElementaryTypeName","src":"15467:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15466:9:31"},"scope":8926,"src":"15388:295:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8515,"nodeType":"Block","src":"15938:209:31","statements":[{"assignments":[8486],"declarations":[{"constant":false,"id":8486,"mutability":"mutable","name":"len","nameLocation":"15956:3:31","nodeType":"VariableDeclaration","scope":8515,"src":"15948:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8485,"name":"uint256","nodeType":"ElementaryTypeName","src":"15948:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8490,"initialValue":{"expression":{"expression":{"id":8487,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"15962:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15967:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"15962:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15980:6:31","memberName":"length","nodeType":"MemberAccess","src":"15962:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15948:38:31"},{"assignments":[8492],"declarations":[{"constant":false,"id":8492,"mutability":"mutable","name":"pos","nameLocation":"16004:3:31","nodeType":"VariableDeclaration","scope":8515,"src":"15996:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8491,"name":"uint256","nodeType":"ElementaryTypeName","src":"15996:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8500,"initialValue":{"arguments":[{"expression":{"id":8494,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"16029:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16034:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"16029:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8496,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8480,"src":"16048:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":8497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16053:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8498,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"16056:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8493,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":8858,"src":"16010:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16010:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15996:64:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8501,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"16077:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16084:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16077:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8506,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8478,"src":"16106:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16111:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"16106:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8508,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"16125:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16131:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16125:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8505,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"16092:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16092:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16134:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"16092:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16077:63:31","trueExpression":{"hexValue":"30","id":8504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16088:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8484,"id":8514,"nodeType":"Return","src":"16070:70:31"}]},"documentation":{"id":8475,"nodeType":"StructuredDocumentation","src":"15689:156:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8516,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15859:11:31","nodeType":"FunctionDefinition","parameters":{"id":8481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8478,"mutability":"mutable","name":"self","nameLocation":"15888:4:31","nodeType":"VariableDeclaration","scope":8516,"src":"15871:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8477,"nodeType":"UserDefinedTypeName","pathNode":{"id":8476,"name":"Trace160","nameLocations":["15871:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"15871:8:31"},"referencedDeclaration":8406,"src":"15871:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8480,"mutability":"mutable","name":"key","nameLocation":"15901:3:31","nodeType":"VariableDeclaration","scope":8516,"src":"15894:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8479,"name":"uint96","nodeType":"ElementaryTypeName","src":"15894:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15870:35:31"},"returnParameters":{"id":8484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8516,"src":"15929:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8482,"name":"uint160","nodeType":"ElementaryTypeName","src":"15929:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15928:9:31"},"scope":8926,"src":"15850:297:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8600,"nodeType":"Block","src":"16546:512:31","statements":[{"assignments":[8528],"declarations":[{"constant":false,"id":8528,"mutability":"mutable","name":"len","nameLocation":"16564:3:31","nodeType":"VariableDeclaration","scope":8600,"src":"16556:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"16556:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8532,"initialValue":{"expression":{"expression":{"id":8529,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"16570:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16575:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"16570:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:31","memberName":"length","nodeType":"MemberAccess","src":"16570:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16556:38:31"},{"assignments":[8534],"declarations":[{"constant":false,"id":8534,"mutability":"mutable","name":"low","nameLocation":"16613:3:31","nodeType":"VariableDeclaration","scope":8600,"src":"16605:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8533,"name":"uint256","nodeType":"ElementaryTypeName","src":"16605:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8536,"initialValue":{"hexValue":"30","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16619:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16605:15:31"},{"assignments":[8538],"declarations":[{"constant":false,"id":8538,"mutability":"mutable","name":"high","nameLocation":"16638:4:31","nodeType":"VariableDeclaration","scope":8600,"src":"16630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8537,"name":"uint256","nodeType":"ElementaryTypeName","src":"16630:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8540,"initialValue":{"id":8539,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16645:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16630:18:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8541,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16663:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16669:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16663:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8575,"nodeType":"IfStatement","src":"16659:234:31","trueBody":{"id":8574,"nodeType":"Block","src":"16672:221:31","statements":[{"assignments":[8545],"declarations":[{"constant":false,"id":8545,"mutability":"mutable","name":"mid","nameLocation":"16694:3:31","nodeType":"VariableDeclaration","scope":8574,"src":"16686:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8544,"name":"uint256","nodeType":"ElementaryTypeName","src":"16686:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8552,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8546,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16700:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8549,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8528,"src":"16716:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8547,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"16706:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16711:4:31","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4815,"src":"16706:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16706:14:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16700:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16686:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8553,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"16738:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8555,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"16758:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16763:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"16758:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8557,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"16777:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8554,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"16744:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16782:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8408,"src":"16744:42:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16738:48:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8572,"nodeType":"Block","src":"16837:46:31","statements":[{"expression":{"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8566,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"16855:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8567,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"16861:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16867:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16861:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16855:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8571,"nodeType":"ExpressionStatement","src":"16855:13:31"}]},"id":8573,"nodeType":"IfStatement","src":"16734:149:31","trueBody":{"id":8565,"nodeType":"Block","src":"16788:43:31","statements":[{"expression":{"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8561,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"16806:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8562,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"16813:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16806:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8564,"nodeType":"ExpressionStatement","src":"16806:10:31"}]}}]}},{"assignments":[8577],"declarations":[{"constant":false,"id":8577,"mutability":"mutable","name":"pos","nameLocation":"16911:3:31","nodeType":"VariableDeclaration","scope":8600,"src":"16903:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8576,"name":"uint256","nodeType":"ElementaryTypeName","src":"16903:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8585,"initialValue":{"arguments":[{"expression":{"id":8579,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"16936:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16941:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"16936:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":8581,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"16955:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8582,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"16960:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8583,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"16965:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8578,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[7810,8334,8858],"referencedDeclaration":8858,"src":"16917:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16917:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16903:67:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8586,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"16988:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16995:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16988:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8591,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"17017:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17022:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"17017:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8593,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"17036:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17042:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8590,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"17003:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17045:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"17003:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16988:63:31","trueExpression":{"hexValue":"30","id":8589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16999:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8526,"id":8599,"nodeType":"Return","src":"16981:70:31"}]},"documentation":{"id":8517,"nodeType":"StructuredDocumentation","src":"16153:294:31","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8601,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16461:17:31","nodeType":"FunctionDefinition","parameters":{"id":8523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"self","nameLocation":"16496:4:31","nodeType":"VariableDeclaration","scope":8601,"src":"16479:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8519,"nodeType":"UserDefinedTypeName","pathNode":{"id":8518,"name":"Trace160","nameLocations":["16479:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"16479:8:31"},"referencedDeclaration":8406,"src":"16479:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8522,"mutability":"mutable","name":"key","nameLocation":"16509:3:31","nodeType":"VariableDeclaration","scope":8601,"src":"16502:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8521,"name":"uint96","nodeType":"ElementaryTypeName","src":"16502:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16478:35:31"},"returnParameters":{"id":8526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8601,"src":"16537:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8524,"name":"uint160","nodeType":"ElementaryTypeName","src":"16537:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16536:9:31"},"scope":8926,"src":"16452:606:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8630,"nodeType":"Block","src":"17249:135:31","statements":[{"assignments":[8611],"declarations":[{"constant":false,"id":8611,"mutability":"mutable","name":"pos","nameLocation":"17267:3:31","nodeType":"VariableDeclaration","scope":8630,"src":"17259:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8610,"name":"uint256","nodeType":"ElementaryTypeName","src":"17259:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8615,"initialValue":{"expression":{"expression":{"id":8612,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"17273:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17278:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"17273:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17291:6:31","memberName":"length","nodeType":"MemberAccess","src":"17273:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17259:38:31"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8616,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"17314:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17321:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17314:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8621,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"17343:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17348:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"17343:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8623,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"17362:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17368:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17362:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8620,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"17329:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17329:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17371:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"17329:48:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17314:63:31","trueExpression":{"hexValue":"30","id":8619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17325:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8609,"id":8629,"nodeType":"Return","src":"17307:70:31"}]},"documentation":{"id":8602,"nodeType":"StructuredDocumentation","src":"17064:109:31","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8631,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"17187:6:31","nodeType":"FunctionDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"self","nameLocation":"17211:4:31","nodeType":"VariableDeclaration","scope":8631,"src":"17194:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8604,"nodeType":"UserDefinedTypeName","pathNode":{"id":8603,"name":"Trace160","nameLocations":["17194:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"17194:8:31"},"referencedDeclaration":8406,"src":"17194:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17193:23:31"},"returnParameters":{"id":8609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8631,"src":"17240:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8607,"name":"uint160","nodeType":"ElementaryTypeName","src":"17240:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17239:9:31"},"scope":8926,"src":"17178:206:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8679,"nodeType":"Block","src":"17677:275:31","statements":[{"assignments":[8645],"declarations":[{"constant":false,"id":8645,"mutability":"mutable","name":"pos","nameLocation":"17695:3:31","nodeType":"VariableDeclaration","scope":8679,"src":"17687:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8644,"name":"uint256","nodeType":"ElementaryTypeName","src":"17687:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8649,"initialValue":{"expression":{"expression":{"id":8646,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"17701:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17706:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"17701:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17719:6:31","memberName":"length","nodeType":"MemberAccess","src":"17701:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17687:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8650,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8645,"src":"17739:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17746:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17739:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8677,"nodeType":"Block","src":"17800:146:31","statements":[{"assignments":[8661],"declarations":[{"constant":false,"id":8661,"mutability":"mutable","name":"ckpt","nameLocation":"17836:4:31","nodeType":"VariableDeclaration","scope":8677,"src":"17814:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8660,"nodeType":"UserDefinedTypeName","pathNode":{"id":8659,"name":"Checkpoint160","nameLocations":["17814:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"17814:13:31"},"referencedDeclaration":8411,"src":"17814:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8669,"initialValue":{"arguments":[{"expression":{"id":8663,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"17857:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17862:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"17857:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8665,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8645,"src":"17876:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17882:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17876:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8662,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"17843:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17843:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17814:70:31"},{"expression":{"components":[{"hexValue":"74727565","id":8670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17906:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8671,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"17912:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17917:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8408,"src":"17912:9:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":8673,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"17923:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17928:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"17923:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17905:30:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":8643,"id":8676,"nodeType":"Return","src":"17898:37:31"}]},"id":8678,"nodeType":"IfStatement","src":"17735:211:31","trueBody":{"id":8658,"nodeType":"Block","src":"17749:45:31","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17771:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17778:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17781:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17770:13:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8643,"id":8657,"nodeType":"Return","src":"17763:20:31"}]}}]},"documentation":{"id":8632,"nodeType":"StructuredDocumentation","src":"17390:168:31","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8680,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17572:16:31","nodeType":"FunctionDefinition","parameters":{"id":8636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8635,"mutability":"mutable","name":"self","nameLocation":"17606:4:31","nodeType":"VariableDeclaration","scope":8680,"src":"17589:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8634,"nodeType":"UserDefinedTypeName","pathNode":{"id":8633,"name":"Trace160","nameLocations":["17589:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"17589:8:31"},"referencedDeclaration":8406,"src":"17589:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17588:23:31"},"returnParameters":{"id":8643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8638,"mutability":"mutable","name":"exists","nameLocation":"17640:6:31","nodeType":"VariableDeclaration","scope":8680,"src":"17635:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8637,"name":"bool","nodeType":"ElementaryTypeName","src":"17635:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8640,"mutability":"mutable","name":"_key","nameLocation":"17655:4:31","nodeType":"VariableDeclaration","scope":8680,"src":"17648:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8639,"name":"uint96","nodeType":"ElementaryTypeName","src":"17648:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8642,"mutability":"mutable","name":"_value","nameLocation":"17669:6:31","nodeType":"VariableDeclaration","scope":8680,"src":"17661:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8641,"name":"uint160","nodeType":"ElementaryTypeName","src":"17661:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17634:42:31"},"scope":8926,"src":"17563:389:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8693,"nodeType":"Block","src":"18091:48:31","statements":[{"expression":{"expression":{"expression":{"id":8689,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"18108:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18113:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"18108:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18126:6:31","memberName":"length","nodeType":"MemberAccess","src":"18108:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8688,"id":8692,"nodeType":"Return","src":"18101:31:31"}]},"documentation":{"id":8681,"nodeType":"StructuredDocumentation","src":"17958:57:31","text":" @dev Returns the number of checkpoint."},"id":8694,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18029:6:31","nodeType":"FunctionDefinition","parameters":{"id":8685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8684,"mutability":"mutable","name":"self","nameLocation":"18053:4:31","nodeType":"VariableDeclaration","scope":8694,"src":"18036:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8683,"nodeType":"UserDefinedTypeName","pathNode":{"id":8682,"name":"Trace160","nameLocations":["18036:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"18036:8:31"},"referencedDeclaration":8406,"src":"18036:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"18035:23:31"},"returnParameters":{"id":8688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8694,"src":"18082:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8686,"name":"uint256","nodeType":"ElementaryTypeName","src":"18082:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18081:9:31"},"scope":8926,"src":"18020:119:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8711,"nodeType":"Block","src":"18303:46:31","statements":[{"expression":{"baseExpression":{"expression":{"id":8706,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"18320:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":8707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18325:12:31","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8405,"src":"18320:17:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":8709,"indexExpression":{"id":8708,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"18338:3:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18320:22:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":8705,"id":8710,"nodeType":"Return","src":"18313:29:31"}]},"documentation":{"id":8695,"nodeType":"StructuredDocumentation","src":"18145:61:31","text":" @dev Returns checkpoint at given position."},"id":8712,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"18220:2:31","nodeType":"FunctionDefinition","parameters":{"id":8701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8698,"mutability":"mutable","name":"self","nameLocation":"18240:4:31","nodeType":"VariableDeclaration","scope":8712,"src":"18223:21:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":8697,"nodeType":"UserDefinedTypeName","pathNode":{"id":8696,"name":"Trace160","nameLocations":["18223:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":8406,"src":"18223:8:31"},"referencedDeclaration":8406,"src":"18223:8:31","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$8406_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":8700,"mutability":"mutable","name":"pos","nameLocation":"18253:3:31","nodeType":"VariableDeclaration","scope":8712,"src":"18246:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8699,"name":"uint32","nodeType":"ElementaryTypeName","src":"18246:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"18222:35:31"},"returnParameters":{"id":8705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8712,"src":"18281:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8703,"nodeType":"UserDefinedTypeName","pathNode":{"id":8702,"name":"Checkpoint160","nameLocations":["18281:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"18281:13:31"},"referencedDeclaration":8411,"src":"18281:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18280:22:31"},"scope":8926,"src":"18211:138:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8805,"nodeType":"Block","src":"18682:765:31","statements":[{"assignments":[8729],"declarations":[{"constant":false,"id":8729,"mutability":"mutable","name":"pos","nameLocation":"18700:3:31","nodeType":"VariableDeclaration","scope":8805,"src":"18692:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8728,"name":"uint256","nodeType":"ElementaryTypeName","src":"18692:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8732,"initialValue":{"expression":{"id":8730,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"18706:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18711:6:31","memberName":"length","nodeType":"MemberAccess","src":"18706:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18692:25:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8733,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"18732:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18738:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18732:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8803,"nodeType":"Block","src":"19333:108:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8794,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"19378:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"19391:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8793,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"19357:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19372:4:31","19383:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19357:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8411_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8790,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"19347:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19352:4:31","memberName":"push","nodeType":"MemberAccess","src":"19347:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8411_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19347:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8798,"nodeType":"ExpressionStatement","src":"19347:52:31"},{"expression":{"components":[{"hexValue":"30","id":8799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19421:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"19424:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19420:10:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":8727,"id":8802,"nodeType":"Return","src":"19413:17:31"}]},"id":8804,"nodeType":"IfStatement","src":"18728:713:31","trueBody":{"id":8789,"nodeType":"Block","src":"18741:586:31","statements":[{"assignments":[8738],"declarations":[{"constant":false,"id":8738,"mutability":"mutable","name":"last","nameLocation":"18777:4:31","nodeType":"VariableDeclaration","scope":8789,"src":"18755:26:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8737,"nodeType":"UserDefinedTypeName","pathNode":{"id":8736,"name":"Checkpoint160","nameLocations":["18755:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"18755:13:31"},"referencedDeclaration":8411,"src":"18755:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":8745,"initialValue":{"arguments":[{"id":8740,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"18798:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8741,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"18804:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18810:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18804:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8739,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"18784:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18784:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18755:57:31"},{"assignments":[8747],"declarations":[{"constant":false,"id":8747,"mutability":"mutable","name":"lastKey","nameLocation":"18833:7:31","nodeType":"VariableDeclaration","scope":8789,"src":"18826:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8746,"name":"uint96","nodeType":"ElementaryTypeName","src":"18826:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":8750,"initialValue":{"expression":{"id":8748,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"18843:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18848:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8408,"src":"18843:9:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"18826:26:31"},{"assignments":[8752],"declarations":[{"constant":false,"id":8752,"mutability":"mutable","name":"lastValue","nameLocation":"18874:9:31","nodeType":"VariableDeclaration","scope":8789,"src":"18866:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8751,"name":"uint160","nodeType":"ElementaryTypeName","src":"18866:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":8755,"initialValue":{"expression":{"id":8753,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"18886:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18891:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"18886:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"18866:31:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8756,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"18971:7:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8757,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"18981:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18971:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8763,"nodeType":"IfStatement","src":"18967:89:31","trueBody":{"id":8762,"nodeType":"Block","src":"18986:70:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8759,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"19011:28:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19011:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8761,"nodeType":"RevertStatement","src":"19004:37:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8764,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"19119:7:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8765,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"19130:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19119:14:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8783,"nodeType":"Block","src":"19193:85:31","statements":[{"expression":{"arguments":[{"arguments":[{"id":8778,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8719,"src":"19242:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"19255:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8777,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8411,"src":"19221:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19236:4:31","19247:6:31"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19221:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$8411_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":8774,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"19211:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19216:4:31","memberName":"push","nodeType":"MemberAccess","src":"19211:9:31","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$8411_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19211:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8782,"nodeType":"ExpressionStatement","src":"19211:52:31"}]},"id":8784,"nodeType":"IfStatement","src":"19115:163:31","trueBody":{"id":8773,"nodeType":"Block","src":"19135:52:31","statements":[{"expression":{"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8767,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"19153:4:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19158:6:31","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8410,"src":"19153:11:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"19167:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"19153:19:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":8772,"nodeType":"ExpressionStatement","src":"19153:19:31"}]}},{"expression":{"components":[{"id":8785,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"19299:9:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":8786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"19310:5:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":8787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19298:18:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":8727,"id":8788,"nodeType":"Return","src":"19291:25:31"}]}}]},"documentation":{"id":8713,"nodeType":"StructuredDocumentation","src":"18355:165:31","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8806,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18534:7:31","nodeType":"FunctionDefinition","parameters":{"id":8722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"mutability":"mutable","name":"self","nameLocation":"18575:4:31","nodeType":"VariableDeclaration","scope":8806,"src":"18551:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8715,"nodeType":"UserDefinedTypeName","pathNode":{"id":8714,"name":"Checkpoint160","nameLocations":["18551:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"18551:13:31"},"referencedDeclaration":8411,"src":"18551:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8716,"nodeType":"ArrayTypeName","src":"18551:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8719,"mutability":"mutable","name":"key","nameLocation":"18596:3:31","nodeType":"VariableDeclaration","scope":8806,"src":"18589:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8718,"name":"uint96","nodeType":"ElementaryTypeName","src":"18589:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8721,"mutability":"mutable","name":"value","nameLocation":"18617:5:31","nodeType":"VariableDeclaration","scope":8806,"src":"18609:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8720,"name":"uint160","nodeType":"ElementaryTypeName","src":"18609:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18541:87:31"},"returnParameters":{"id":8727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8724,"mutability":"mutable","name":"oldValue","nameLocation":"18654:8:31","nodeType":"VariableDeclaration","scope":8806,"src":"18646:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8723,"name":"uint160","nodeType":"ElementaryTypeName","src":"18646:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":8726,"mutability":"mutable","name":"newValue","nameLocation":"18672:8:31","nodeType":"VariableDeclaration","scope":8806,"src":"18664:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8725,"name":"uint160","nodeType":"ElementaryTypeName","src":"18664:7:31","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18645:36:31"},"scope":8926,"src":"18525:922:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8857,"nodeType":"Block","src":"19963:267:31","statements":[{"body":{"id":8853,"nodeType":"Block","src":"19992:211:31","statements":[{"assignments":[8826],"declarations":[{"constant":false,"id":8826,"mutability":"mutable","name":"mid","nameLocation":"20014:3:31","nodeType":"VariableDeclaration","scope":8853,"src":"20006:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8825,"name":"uint256","nodeType":"ElementaryTypeName","src":"20006:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8832,"initialValue":{"arguments":[{"id":8829,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"20033:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8830,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"20038:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8827,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"20020:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20025:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"20020:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20020:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20006:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8834,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"20075:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8835,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"20081:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8833,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"20061:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20086:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8408,"src":"20061:29:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8838,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8813,"src":"20093:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20061:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8851,"nodeType":"Block","src":"20147:46:31","statements":[{"expression":{"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8845,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"20165:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8846,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"20171:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20177:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20165:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8850,"nodeType":"ExpressionStatement","src":"20165:13:31"}]},"id":8852,"nodeType":"IfStatement","src":"20057:136:31","trueBody":{"id":8844,"nodeType":"Block","src":"20098:43:31","statements":[{"expression":{"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8840,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"20116:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8841,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"20123:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8843,"nodeType":"ExpressionStatement","src":"20116:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8822,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"19980:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8823,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"19986:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19980:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8854,"nodeType":"WhileStatement","src":"19973:230:31"},{"expression":{"id":8855,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"20219:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8821,"id":8856,"nodeType":"Return","src":"20212:11:31"}]},"documentation":{"id":8807,"nodeType":"StructuredDocumentation","src":"19453:339:31","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8858,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19806:18:31","nodeType":"FunctionDefinition","parameters":{"id":8818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8811,"mutability":"mutable","name":"self","nameLocation":"19858:4:31","nodeType":"VariableDeclaration","scope":8858,"src":"19834:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8809,"nodeType":"UserDefinedTypeName","pathNode":{"id":8808,"name":"Checkpoint160","nameLocations":["19834:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"19834:13:31"},"referencedDeclaration":8411,"src":"19834:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8810,"nodeType":"ArrayTypeName","src":"19834:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8813,"mutability":"mutable","name":"key","nameLocation":"19879:3:31","nodeType":"VariableDeclaration","scope":8858,"src":"19872:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8812,"name":"uint96","nodeType":"ElementaryTypeName","src":"19872:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8815,"mutability":"mutable","name":"low","nameLocation":"19900:3:31","nodeType":"VariableDeclaration","scope":8858,"src":"19892:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8814,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8817,"mutability":"mutable","name":"high","nameLocation":"19921:4:31","nodeType":"VariableDeclaration","scope":8858,"src":"19913:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8816,"name":"uint256","nodeType":"ElementaryTypeName","src":"19913:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19824:107:31"},"returnParameters":{"id":8821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8858,"src":"19954:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8819,"name":"uint256","nodeType":"ElementaryTypeName","src":"19954:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19953:9:31"},"scope":8926,"src":"19797:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8909,"nodeType":"Block","src":"20747:267:31","statements":[{"body":{"id":8905,"nodeType":"Block","src":"20776:211:31","statements":[{"assignments":[8878],"declarations":[{"constant":false,"id":8878,"mutability":"mutable","name":"mid","nameLocation":"20798:3:31","nodeType":"VariableDeclaration","scope":8905,"src":"20790:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8877,"name":"uint256","nodeType":"ElementaryTypeName","src":"20790:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8884,"initialValue":{"arguments":[{"id":8881,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"20817:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8882,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"20822:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8879,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"20804:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20809:7:31","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"20804:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20804:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20790:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8886,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8863,"src":"20859:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":8887,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"20865:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8885,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[7877,8401,8925],"referencedDeclaration":8925,"src":"20845:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$8411_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":8888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20845:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":8889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20870:4:31","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8408,"src":"20845:29:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8890,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8865,"src":"20877:3:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20845:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8903,"nodeType":"Block","src":"20934:43:31","statements":[{"expression":{"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8899,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"20952:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8900,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"20959:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20952:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8902,"nodeType":"ExpressionStatement","src":"20952:10:31"}]},"id":8904,"nodeType":"IfStatement","src":"20841:136:31","trueBody":{"id":8898,"nodeType":"Block","src":"20882:46:31","statements":[{"expression":{"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8892,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"20900:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8893,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"20906:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20912:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20906:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20900:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8897,"nodeType":"ExpressionStatement","src":"20900:13:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8874,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8867,"src":"20764:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8875,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"20770:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20764:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8906,"nodeType":"WhileStatement","src":"20757:230:31"},{"expression":{"id":8907,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"21003:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8873,"id":8908,"nodeType":"Return","src":"20996:11:31"}]},"documentation":{"id":8859,"nodeType":"StructuredDocumentation","src":"20236:340:31","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8910,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20590:18:31","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8863,"mutability":"mutable","name":"self","nameLocation":"20642:4:31","nodeType":"VariableDeclaration","scope":8910,"src":"20618:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8861,"nodeType":"UserDefinedTypeName","pathNode":{"id":8860,"name":"Checkpoint160","nameLocations":["20618:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"20618:13:31"},"referencedDeclaration":8411,"src":"20618:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8862,"nodeType":"ArrayTypeName","src":"20618:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8865,"mutability":"mutable","name":"key","nameLocation":"20663:3:31","nodeType":"VariableDeclaration","scope":8910,"src":"20656:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8864,"name":"uint96","nodeType":"ElementaryTypeName","src":"20656:6:31","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8867,"mutability":"mutable","name":"low","nameLocation":"20684:3:31","nodeType":"VariableDeclaration","scope":8910,"src":"20676:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8866,"name":"uint256","nodeType":"ElementaryTypeName","src":"20676:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8869,"mutability":"mutable","name":"high","nameLocation":"20705:4:31","nodeType":"VariableDeclaration","scope":8910,"src":"20697:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8868,"name":"uint256","nodeType":"ElementaryTypeName","src":"20697:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20608:107:31"},"returnParameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8910,"src":"20738:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"20738:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20737:9:31"},"scope":8926,"src":"20581:433:31","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8924,"nodeType":"Block","src":"21297:125:31","statements":[{"AST":{"nativeSrc":"21316:100:31","nodeType":"YulBlock","src":"21316:100:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21337:1:31","nodeType":"YulLiteral","src":"21337:1:31","type":"","value":"0"},{"name":"self.slot","nativeSrc":"21340:9:31","nodeType":"YulIdentifier","src":"21340:9:31"}],"functionName":{"name":"mstore","nativeSrc":"21330:6:31","nodeType":"YulIdentifier","src":"21330:6:31"},"nativeSrc":"21330:20:31","nodeType":"YulFunctionCall","src":"21330:20:31"},"nativeSrc":"21330:20:31","nodeType":"YulExpressionStatement","src":"21330:20:31"},{"nativeSrc":"21363:43:31","nodeType":"YulAssignment","src":"21363:43:31","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21392:1:31","nodeType":"YulLiteral","src":"21392:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"21395:4:31","nodeType":"YulLiteral","src":"21395:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"21382:9:31","nodeType":"YulIdentifier","src":"21382:9:31"},"nativeSrc":"21382:18:31","nodeType":"YulFunctionCall","src":"21382:18:31"},{"name":"pos","nativeSrc":"21402:3:31","nodeType":"YulIdentifier","src":"21402:3:31"}],"functionName":{"name":"add","nativeSrc":"21378:3:31","nodeType":"YulIdentifier","src":"21378:3:31"},"nativeSrc":"21378:28:31","nodeType":"YulFunctionCall","src":"21378:28:31"},"variableNames":[{"name":"result.slot","nativeSrc":"21363:11:31","nodeType":"YulIdentifier","src":"21363:11:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8917,"isOffset":false,"isSlot":false,"src":"21402:3:31","valueSize":1},{"declaration":8921,"isOffset":false,"isSlot":true,"src":"21363:11:31","suffix":"slot","valueSize":1},{"declaration":8915,"isOffset":false,"isSlot":true,"src":"21340:9:31","suffix":"slot","valueSize":1}],"id":8923,"nodeType":"InlineAssembly","src":"21307:109:31"}]},"documentation":{"id":8911,"nodeType":"StructuredDocumentation","src":"21020:132:31","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8925,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"21166:13:31","nodeType":"FunctionDefinition","parameters":{"id":8918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8915,"mutability":"mutable","name":"self","nameLocation":"21213:4:31","nodeType":"VariableDeclaration","scope":8925,"src":"21189:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":8913,"nodeType":"UserDefinedTypeName","pathNode":{"id":8912,"name":"Checkpoint160","nameLocations":["21189:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"21189:13:31"},"referencedDeclaration":8411,"src":"21189:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":8914,"nodeType":"ArrayTypeName","src":"21189:15:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$8411_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":8917,"mutability":"mutable","name":"pos","nameLocation":"21235:3:31","nodeType":"VariableDeclaration","scope":8925,"src":"21227:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"21227:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21179:65:31"},"returnParameters":{"id":8922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8921,"mutability":"mutable","name":"result","nameLocation":"21289:6:31","nodeType":"VariableDeclaration","scope":8925,"src":"21267:28:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":8920,"nodeType":"UserDefinedTypeName","pathNode":{"id":8919,"name":"Checkpoint160","nameLocations":["21267:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":8411,"src":"21267:13:31"},"referencedDeclaration":8411,"src":"21267:13:31","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$8411_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"21266:30:31"},"scope":8926,"src":"21157:265:31","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":8927,"src":"668:20756:31","usedErrors":[7353],"usedEvents":[]}],"src":"201:21224:31"},"id":31},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[5436],"SafeCast":[7201],"Time":[9200]},"id":9201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8928,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":8930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9201,"sourceUnit":5437,"src":"130:38:32","symbolAliases":[{"foreign":{"id":8929,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"138:4:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":8932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9201,"sourceUnit":7202,"src":"169:46:32","symbolAliases":[{"foreign":{"id":8931,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"177:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":8933,"nodeType":"StructuredDocumentation","src":"217:422:32","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":9200,"linearizedBaseContracts":[9200],"name":"Time","nameLocation":"648:4:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8935,"libraryName":{"id":8934,"name":"Time","nameLocations":["665:4:32"],"nodeType":"IdentifierPath","referencedDeclaration":9200,"src":"665:4:32"},"nodeType":"UsingForDirective","src":"659:17:32"},{"body":{"id":8947,"nodeType":"Block","src":"802:58:32","statements":[{"expression":{"arguments":[{"expression":{"id":8943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8941,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"819:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:32","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6191,"src":"819:17:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8940,"id":8946,"nodeType":"Return","src":"812:41:32"}]},"documentation":{"id":8936,"nodeType":"StructuredDocumentation","src":"682:63:32","text":" @dev Get the block timestamp as a Timepoint."},"id":8948,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:32","nodeType":"FunctionDefinition","parameters":{"id":8937,"nodeType":"ParameterList","parameters":[],"src":"768:2:32"},"returnParameters":{"id":8940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8948,"src":"794:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8938,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:32"},"scope":9200,"src":"750:110:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8960,"nodeType":"Block","src":"985:55:32","statements":[{"expression":{"arguments":[{"expression":{"id":8956,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:32","memberName":"number","nodeType":"MemberAccess","src":"1020:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8954,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"1002:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7201_$","typeString":"type(library SafeCast)"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:32","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6191,"src":"1002:17:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8953,"id":8959,"nodeType":"Return","src":"995:38:32"}]},"documentation":{"id":8949,"nodeType":"StructuredDocumentation","src":"866:60:32","text":" @dev Get the block number as a Timepoint."},"id":8961,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:32","nodeType":"FunctionDefinition","parameters":{"id":8950,"nodeType":"ParameterList","parameters":[],"src":"951:2:32"},"returnParameters":{"id":8953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8961,"src":"977:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8951,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:32"},"scope":9200,"src":"931:109:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":8963,"name":"Delay","nameLocation":"2377:5:32","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:32","underlyingType":{"id":8962,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":8977,"nodeType":"Block","src":"2572:44:32","statements":[{"expression":{"arguments":[{"id":8974,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"2600:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8972,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"2589:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8963_$","typeString":"type(Time.Delay)"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:32","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:32","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"functionReturnParameters":8971,"id":8976,"nodeType":"Return","src":"2582:27:32"}]},"documentation":{"id":8964,"nodeType":"StructuredDocumentation","src":"2400:103:32","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":8978,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:32","nodeType":"FunctionDefinition","parameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8966,"mutability":"mutable","name":"duration","nameLocation":"2532:8:32","nodeType":"VariableDeclaration","scope":8978,"src":"2525:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8965,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:32"},"returnParameters":{"id":8971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8978,"src":"2565:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":8969,"nodeType":"UserDefinedTypeName","pathNode":{"id":8968,"name":"Delay","nameLocations":["2565:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"2565:5:32"},"referencedDeclaration":8963,"src":"2565:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:32"},"scope":9200,"src":"2508:108:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9015,"nodeType":"Block","src":"3016:159:32","statements":[{"expression":{"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8993,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"3027:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8994,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"3040:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8995,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"3052:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8996,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3026:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8997,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8982,"src":"3062:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3067:6:32","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"3062:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8963_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"src":"3026:49:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9001,"nodeType":"ExpressionStatement","src":"3026:49:32"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9002,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"3092:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9003,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"3102:9:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3092:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":9009,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"3136:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9010,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"3149:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9011,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"3161:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3135:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3092:76:32","trueExpression":{"components":[{"id":9005,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"3115:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:18:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8992,"id":9014,"nodeType":"Return","src":"3085:83:32"}]},"documentation":{"id":8979,"nodeType":"StructuredDocumentation","src":"2622:241:32","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":9016,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:32","nodeType":"FunctionDefinition","parameters":{"id":8985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8982,"mutability":"mutable","name":"self","nameLocation":"2903:4:32","nodeType":"VariableDeclaration","scope":9016,"src":"2897:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":8981,"nodeType":"UserDefinedTypeName","pathNode":{"id":8980,"name":"Delay","nameLocations":["2897:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"2897:5:32"},"referencedDeclaration":8963,"src":"2897:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8984,"mutability":"mutable","name":"timepoint","nameLocation":"2924:9:32","nodeType":"VariableDeclaration","scope":9016,"src":"2917:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8983,"name":"uint48","nodeType":"ElementaryTypeName","src":"2917:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:52:32"},"returnParameters":{"id":8992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8987,"mutability":"mutable","name":"valueBefore","nameLocation":"2969:11:32","nodeType":"VariableDeclaration","scope":9016,"src":"2962:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8986,"name":"uint32","nodeType":"ElementaryTypeName","src":"2962:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8989,"mutability":"mutable","name":"valueAfter","nameLocation":"2989:10:32","nodeType":"VariableDeclaration","scope":9016,"src":"2982:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8988,"name":"uint32","nodeType":"ElementaryTypeName","src":"2982:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8991,"mutability":"mutable","name":"effect","nameLocation":"3008:6:32","nodeType":"VariableDeclaration","scope":9016,"src":"3001:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8990,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2961:54:32"},"scope":9200,"src":"2868:307:32","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9035,"nodeType":"Block","src":"3499:53:32","statements":[{"expression":{"arguments":[{"id":9030,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9020,"src":"3527:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9031,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8948,"src":"3533:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9029,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"3516:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8963_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":9033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9028,"id":9034,"nodeType":"Return","src":"3509:36:32"}]},"documentation":{"id":9017,"nodeType":"StructuredDocumentation","src":"3181:207:32","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":9036,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3402:7:32","nodeType":"FunctionDefinition","parameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9020,"mutability":"mutable","name":"self","nameLocation":"3416:4:32","nodeType":"VariableDeclaration","scope":9036,"src":"3410:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9019,"nodeType":"UserDefinedTypeName","pathNode":{"id":9018,"name":"Delay","nameLocations":["3410:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"3410:5:32"},"referencedDeclaration":8963,"src":"3410:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3409:12:32"},"returnParameters":{"id":9028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9023,"mutability":"mutable","name":"valueBefore","nameLocation":"3452:11:32","nodeType":"VariableDeclaration","scope":9036,"src":"3445:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9022,"name":"uint32","nodeType":"ElementaryTypeName","src":"3445:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9025,"mutability":"mutable","name":"valueAfter","nameLocation":"3472:10:32","nodeType":"VariableDeclaration","scope":9036,"src":"3465:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9024,"name":"uint32","nodeType":"ElementaryTypeName","src":"3465:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9027,"mutability":"mutable","name":"effect","nameLocation":"3491:6:32","nodeType":"VariableDeclaration","scope":9036,"src":"3484:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9026,"name":"uint48","nodeType":"ElementaryTypeName","src":"3484:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3444:54:32"},"scope":9200,"src":"3393:159:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9053,"nodeType":"Block","src":"3665:74:32","statements":[{"assignments":[9046,null,null],"declarations":[{"constant":false,"id":9046,"mutability":"mutable","name":"delay","nameLocation":"3683:5:32","nodeType":"VariableDeclaration","scope":9053,"src":"3676:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9045,"name":"uint32","nodeType":"ElementaryTypeName","src":"3676:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":9050,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9047,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"3696:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:7:32","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":9036,"src":"3696:12:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8963_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3675:35:32"},{"expression":{"id":9051,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"3727:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9044,"id":9052,"nodeType":"Return","src":"3720:12:32"}]},"documentation":{"id":9037,"nodeType":"StructuredDocumentation","src":"3558:46:32","text":" @dev Get the current value."},"id":9054,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3618:3:32","nodeType":"FunctionDefinition","parameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"self","nameLocation":"3628:4:32","nodeType":"VariableDeclaration","scope":9054,"src":"3622:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9039,"nodeType":"UserDefinedTypeName","pathNode":{"id":9038,"name":"Delay","nameLocations":["3622:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"3622:5:32"},"referencedDeclaration":8963,"src":"3622:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3621:12:32"},"returnParameters":{"id":9044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9054,"src":"3657:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9042,"name":"uint32","nodeType":"ElementaryTypeName","src":"3657:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3656:8:32"},"scope":9200,"src":"3609:130:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9109,"nodeType":"Block","src":"4189:234:32","statements":[{"assignments":[9071],"declarations":[{"constant":false,"id":9071,"mutability":"mutable","name":"value","nameLocation":"4206:5:32","nodeType":"VariableDeclaration","scope":9109,"src":"4199:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9070,"name":"uint32","nodeType":"ElementaryTypeName","src":"4199:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9075,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9072,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"4214:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4219:3:32","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9054,"src":"4214:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8963_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":9074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4199:25:32"},{"assignments":[9077],"declarations":[{"constant":false,"id":9077,"mutability":"mutable","name":"setback","nameLocation":"4241:7:32","nodeType":"VariableDeclaration","scope":9109,"src":"4234:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9076,"name":"uint32","nodeType":"ElementaryTypeName","src":"4234:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9093,"initialValue":{"arguments":[{"arguments":[{"id":9082,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9062,"src":"4267:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"4279:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9084,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"4287:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4279:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4317:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4279:39:32","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"4298:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9087,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"4306:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4298:16:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9080,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"4258:4:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5436_$","typeString":"type(library Math)"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:3:32","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"4258:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:61:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4251:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9078,"name":"uint32","nodeType":"ElementaryTypeName","src":"4251:6:32","typeDescriptions":{}}},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4234:86:32"},{"expression":{"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9094,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4330:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9095,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8948,"src":"4339:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9097,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"4353:7:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4339:21:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4330:30:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9100,"nodeType":"ExpressionStatement","src":"4330:30:32"},{"expression":{"components":[{"arguments":[{"id":9102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"4383:5:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9103,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"4390:8:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9104,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4400:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9101,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"4378:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},{"id":9106,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4409:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4377:39:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$8963_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":9069,"id":9108,"nodeType":"Return","src":"4370:46:32"}]},"documentation":{"id":9055,"nodeType":"StructuredDocumentation","src":"3745:283:32","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":9110,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"4042:10:32","nodeType":"FunctionDefinition","parameters":{"id":9063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"self","nameLocation":"4068:4:32","nodeType":"VariableDeclaration","scope":9110,"src":"4062:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9057,"nodeType":"UserDefinedTypeName","pathNode":{"id":9056,"name":"Delay","nameLocations":["4062:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"4062:5:32"},"referencedDeclaration":8963,"src":"4062:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"newValue","nameLocation":"4089:8:32","nodeType":"VariableDeclaration","scope":9110,"src":"4082:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9059,"name":"uint32","nodeType":"ElementaryTypeName","src":"4082:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9062,"mutability":"mutable","name":"minSetback","nameLocation":"4114:10:32","nodeType":"VariableDeclaration","scope":9110,"src":"4107:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9061,"name":"uint32","nodeType":"ElementaryTypeName","src":"4107:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4052:78:32"},"returnParameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9066,"mutability":"mutable","name":"updatedDelay","nameLocation":"4160:12:32","nodeType":"VariableDeclaration","scope":9110,"src":"4154:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9065,"nodeType":"UserDefinedTypeName","pathNode":{"id":9064,"name":"Delay","nameLocations":["4154:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"4154:5:32"},"referencedDeclaration":8963,"src":"4154:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9068,"mutability":"mutable","name":"effect","nameLocation":"4181:6:32","nodeType":"VariableDeclaration","scope":9110,"src":"4174:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9067,"name":"uint48","nodeType":"ElementaryTypeName","src":"4174:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4153:35:32"},"scope":9200,"src":"4033:390:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9160,"nodeType":"Block","src":"4656:212:32","statements":[{"assignments":[9124],"declarations":[{"constant":false,"id":9124,"mutability":"mutable","name":"raw","nameLocation":"4674:3:32","nodeType":"VariableDeclaration","scope":9160,"src":"4666:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9123,"name":"uint112","nodeType":"ElementaryTypeName","src":"4666:7:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":9129,"initialValue":{"arguments":[{"id":9127,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"4693:4:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}],"expression":{"id":9125,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"4680:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8963_$","typeString":"type(Time.Delay)"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4686:6:32","memberName":"unwrap","nodeType":"MemberAccess","src":"4680:12:32","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$8963_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4666:32:32"},{"expression":{"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9130,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"4709:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9133,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"4729:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4722:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9131,"name":"uint32","nodeType":"ElementaryTypeName","src":"4722:6:32","typeDescriptions":{}}},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4709:24:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9136,"nodeType":"ExpressionStatement","src":"4709:24:32"},{"expression":{"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9137,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"4743:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9140,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"4764:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":9141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4764:9:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4757:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9138,"name":"uint32","nodeType":"ElementaryTypeName","src":"4757:6:32","typeDescriptions":{}}},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4743:31:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9145,"nodeType":"ExpressionStatement","src":"4743:31:32"},{"expression":{"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9146,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"4784:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9149,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"4800:3:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4800:9:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4793:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9147,"name":"uint48","nodeType":"ElementaryTypeName","src":"4793:6:32","typeDescriptions":{}}},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4784:26:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9154,"nodeType":"ExpressionStatement","src":"4784:26:32"},{"expression":{"components":[{"id":9155,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"4829:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9156,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"4842:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9157,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9121,"src":"4854:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:33:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9122,"id":9159,"nodeType":"Return","src":"4821:40:32"}]},"documentation":{"id":9111,"nodeType":"StructuredDocumentation","src":"4429:117:32","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":9161,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4560:6:32","nodeType":"FunctionDefinition","parameters":{"id":9115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9114,"mutability":"mutable","name":"self","nameLocation":"4573:4:32","nodeType":"VariableDeclaration","scope":9161,"src":"4567:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"Delay","nameLocations":["4567:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"4567:5:32"},"referencedDeclaration":8963,"src":"4567:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4566:12:32"},"returnParameters":{"id":9122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9117,"mutability":"mutable","name":"valueBefore","nameLocation":"4609:11:32","nodeType":"VariableDeclaration","scope":9161,"src":"4602:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9116,"name":"uint32","nodeType":"ElementaryTypeName","src":"4602:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9119,"mutability":"mutable","name":"valueAfter","nameLocation":"4629:10:32","nodeType":"VariableDeclaration","scope":9161,"src":"4622:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9118,"name":"uint32","nodeType":"ElementaryTypeName","src":"4622:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9121,"mutability":"mutable","name":"effect","nameLocation":"4648:6:32","nodeType":"VariableDeclaration","scope":9161,"src":"4641:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9120,"name":"uint48","nodeType":"ElementaryTypeName","src":"4641:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4601:54:32"},"scope":9200,"src":"4551:317:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9198,"nodeType":"Block","src":"5041:112:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9178,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"5078:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9176,"name":"uint112","nodeType":"ElementaryTypeName","src":"5070:7:32","typeDescriptions":{}}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5070:21:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5069:23:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9185,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9164,"src":"5104:11:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5096:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9183,"name":"uint112","nodeType":"ElementaryTypeName","src":"5096:7:32","typeDescriptions":{}}},"id":9186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":9187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5096:26:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5095:28:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:54:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9193,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9166,"src":"5134:10:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9191,"name":"uint112","nodeType":"ElementaryTypeName","src":"5126:7:32","typeDescriptions":{}}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:19:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:76:32","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":9174,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"5058:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8963_$","typeString":"type(Time.Delay)"}},"id":9175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5064:4:32","memberName":"wrap","nodeType":"MemberAccess","src":"5058:10:32","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8963_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:88:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"functionReturnParameters":9173,"id":9197,"nodeType":"Return","src":"5051:95:32"}]},"documentation":{"id":9162,"nodeType":"StructuredDocumentation","src":"4874:64:32","text":" @dev pack the components into a Delay object."},"id":9199,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4952:4:32","nodeType":"FunctionDefinition","parameters":{"id":9169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9164,"mutability":"mutable","name":"valueBefore","nameLocation":"4964:11:32","nodeType":"VariableDeclaration","scope":9199,"src":"4957:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9163,"name":"uint32","nodeType":"ElementaryTypeName","src":"4957:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9166,"mutability":"mutable","name":"valueAfter","nameLocation":"4984:10:32","nodeType":"VariableDeclaration","scope":9199,"src":"4977:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9165,"name":"uint32","nodeType":"ElementaryTypeName","src":"4977:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9168,"mutability":"mutable","name":"effect","nameLocation":"5003:6:32","nodeType":"VariableDeclaration","scope":9199,"src":"4996:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9167,"name":"uint48","nodeType":"ElementaryTypeName","src":"4996:6:32","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4956:54:32"},"returnParameters":{"id":9173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9199,"src":"5034:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"},"typeName":{"id":9171,"nodeType":"UserDefinedTypeName","pathNode":{"id":9170,"name":"Delay","nameLocations":["5034:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":8963,"src":"5034:5:32"},"referencedDeclaration":8963,"src":"5034:5:32","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8963","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"5033:7:32"},"scope":9200,"src":"4943:210:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9201,"src":"640:4515:32","usedErrors":[],"usedEvents":[]}],"src":"104:5052:32"},"id":32},"contracts/Blocklist.sol":{"ast":{"absolutePath":"contracts/Blocklist.sol","exportedSymbols":{"ERC20":[1711],"ERC20Blocklist":[9369]},"id":9370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9202,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9370,"sourceUnit":1712,"src":"59:68:33","symbolAliases":[{"foreign":{"id":9203,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"67:5:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9206,"name":"ERC20","nameLocations":["724:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"724:5:33"},"id":9207,"nodeType":"InheritanceSpecifier","src":"724:5:33"}],"canonicalName":"ERC20Blocklist","contractDependencies":[],"contractKind":"contract","documentation":{"id":9205,"nodeType":"StructuredDocumentation","src":"129:558:33","text":" @dev Extension of {ERC20} that allows to implement a blocklist\n mechanism that can be managed by an authorized account with the\n {_blockUser} and {_unblockUser} functions.\n The blocklist provides the guarantee to the contract owner\n (e.g. a DAO or a well-configured multisig) that any account won't be\n able to execute transfers or approvals to other entities to operate\n on its behalf if {_blockUser} was not called with such account as an\n argument. Similarly, the account will be unblocked again if\n {_unblockUser} is called."},"fullyImplemented":true,"id":9369,"linearizedBaseContracts":[9369,1711,1101,2181,1789,2247],"name":"ERC20Blocklist","nameLocation":"706:14:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":9208,"nodeType":"StructuredDocumentation","src":"736:86:33","text":" @dev Blocked status of addresses. True if blocked, False otherwise."},"id":9212,"mutability":"mutable","name":"_blocked","nameLocation":"866:8:33","nodeType":"VariableDeclaration","scope":9369,"src":"827:47:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9211,"keyName":"user","keyNameLocation":"843:4:33","keyType":{"id":9209,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"827:29:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9210,"name":"bool","nodeType":"ElementaryTypeName","src":"851:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":9213,"nodeType":"StructuredDocumentation","src":"881:55:33","text":" @dev Emitted when a user is blocked."},"eventSelector":"ca86d8c91ca6d00afd863578cc633a0901fad724592f89649629fe65f61410d2","id":9217,"name":"UserBlocked","nameLocation":"947:11:33","nodeType":"EventDefinition","parameters":{"id":9216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9215,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"975:4:33","nodeType":"VariableDeclaration","scope":9217,"src":"959:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9214,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"958:22:33"},"src":"941:40:33"},{"anonymous":false,"documentation":{"id":9218,"nodeType":"StructuredDocumentation","src":"987:57:33","text":" @dev Emitted when a user is unblocked."},"eventSelector":"798117ec059ab8d319461ef2502b1f9d8a47cd966bfd1f3e23b6f26c30bebb77","id":9222,"name":"UserUnblocked","nameLocation":"1055:13:33","nodeType":"EventDefinition","parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1085:4:33","nodeType":"VariableDeclaration","scope":9222,"src":"1069:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9219,"name":"address","nodeType":"ElementaryTypeName","src":"1069:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1068:22:33"},"src":"1049:42:33"},{"documentation":{"id":9223,"nodeType":"StructuredDocumentation","src":"1097:73:33","text":" @dev The operation failed because the user is blocked."},"errorSelector":"bfe39372","id":9227,"name":"ERC20Blocked","nameLocation":"1181:12:33","nodeType":"ErrorDefinition","parameters":{"id":9226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9225,"mutability":"mutable","name":"user","nameLocation":"1202:4:33","nodeType":"VariableDeclaration","scope":9227,"src":"1194:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9224,"name":"address","nodeType":"ElementaryTypeName","src":"1194:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1193:14:33"},"src":"1175:33:33"},{"body":{"id":9239,"nodeType":"Block","src":"1348:41:33","statements":[{"expression":{"baseExpression":{"id":9235,"name":"_blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"1365:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9237,"indexExpression":{"id":9236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"1374:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1365:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9234,"id":9238,"nodeType":"Return","src":"1358:24:33"}]},"documentation":{"id":9228,"nodeType":"StructuredDocumentation","src":"1214:65:33","text":" @dev Returns the blocked status of an account."},"functionSelector":"e5962195","id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"blocked","nameLocation":"1293:7:33","nodeType":"FunctionDefinition","parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"account","nameLocation":"1309:7:33","nodeType":"VariableDeclaration","scope":9240,"src":"1301:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9229,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1300:17:33"},"returnParameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9240,"src":"1342:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9232,"name":"bool","nodeType":"ElementaryTypeName","src":"1342:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1341:6:33"},"scope":9369,"src":"1284:105:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":9270,"nodeType":"Block","src":"1574:180:33","statements":[{"assignments":[9249],"declarations":[{"constant":false,"id":9249,"mutability":"mutable","name":"isBlocked","nameLocation":"1589:9:33","nodeType":"VariableDeclaration","scope":9270,"src":"1584:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9248,"name":"bool","nodeType":"ElementaryTypeName","src":"1584:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9253,"initialValue":{"arguments":[{"id":9251,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1609:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9250,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"1601:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1601:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1584:30:33"},{"condition":{"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1628:10:33","subExpression":{"id":9254,"name":"isBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"1629:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9267,"nodeType":"IfStatement","src":"1624:98:33","trueBody":{"id":9266,"nodeType":"Block","src":"1640:82:33","statements":[{"expression":{"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9256,"name":"_blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"1654:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9258,"indexExpression":{"id":9257,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1663:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1654:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1671:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1654:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9261,"nodeType":"ExpressionStatement","src":"1654:21:33"},{"eventCall":{"arguments":[{"id":9263,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1706:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9262,"name":"UserBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"1694:11:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9265,"nodeType":"EmitStatement","src":"1689:22:33"}]}},{"expression":{"id":9268,"name":"isBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"1738:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9247,"id":9269,"nodeType":"Return","src":"1731:16:33"}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"1395:108:33","text":" @dev Blocks a user from receiving and transferring tokens, including minting and burning."},"id":9271,"implemented":true,"kind":"function","modifiers":[],"name":"_blockUser","nameLocation":"1517:10:33","nodeType":"FunctionDefinition","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"user","nameLocation":"1536:4:33","nodeType":"VariableDeclaration","scope":9271,"src":"1528:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9242,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1527:14:33"},"returnParameters":{"id":9247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9271,"src":"1568:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9245,"name":"bool","nodeType":"ElementaryTypeName","src":"1568:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1567:6:33"},"scope":9369,"src":"1508:246:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9300,"nodeType":"Block","src":"1943:182:33","statements":[{"assignments":[9280],"declarations":[{"constant":false,"id":9280,"mutability":"mutable","name":"isBlocked","nameLocation":"1958:9:33","nodeType":"VariableDeclaration","scope":9300,"src":"1953:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9279,"name":"bool","nodeType":"ElementaryTypeName","src":"1953:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9284,"initialValue":{"arguments":[{"id":9282,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"1978:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9281,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"1970:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1970:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1953:30:33"},{"condition":{"id":9285,"name":"isBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"1997:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9297,"nodeType":"IfStatement","src":"1993:100:33","trueBody":{"id":9296,"nodeType":"Block","src":"2008:85:33","statements":[{"expression":{"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9286,"name":"_blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"2022:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9288,"indexExpression":{"id":9287,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"2031:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2039:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2022:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9291,"nodeType":"ExpressionStatement","src":"2022:22:33"},{"eventCall":{"arguments":[{"id":9293,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9274,"src":"2077:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9292,"name":"UserUnblocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"2063:13:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:19:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9295,"nodeType":"EmitStatement","src":"2058:24:33"}]}},{"expression":{"id":9298,"name":"isBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"2109:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9278,"id":9299,"nodeType":"Return","src":"2102:16:33"}]},"documentation":{"id":9272,"nodeType":"StructuredDocumentation","src":"1760:110:33","text":" @dev Unblocks a user from receiving and transferring tokens, including minting and burning."},"id":9301,"implemented":true,"kind":"function","modifiers":[],"name":"_unblockUser","nameLocation":"1884:12:33","nodeType":"FunctionDefinition","parameters":{"id":9275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9274,"mutability":"mutable","name":"user","nameLocation":"1905:4:33","nodeType":"VariableDeclaration","scope":9301,"src":"1897:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9273,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1896:14:33"},"returnParameters":{"id":9278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9301,"src":"1937:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9276,"name":"bool","nodeType":"ElementaryTypeName","src":"1937:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1936:6:33"},"scope":9369,"src":"1875:250:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1518],"body":{"id":9336,"nodeType":"Block","src":"2264:151:33","statements":[{"condition":{"arguments":[{"id":9313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"2286:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9312,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"2278:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2278:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9319,"nodeType":"IfStatement","src":"2274:44:33","trueBody":{"errorCall":{"arguments":[{"id":9316,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"2313:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9315,"name":"ERC20Blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"2300:12:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9318,"nodeType":"RevertStatement","src":"2293:25:33"}},{"condition":{"arguments":[{"id":9321,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9306,"src":"2340:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9320,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"2332:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9327,"nodeType":"IfStatement","src":"2328:40:33","trueBody":{"errorCall":{"arguments":[{"id":9324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9306,"src":"2365:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9323,"name":"ERC20Blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"2352:12:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2352:16:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9326,"nodeType":"RevertStatement","src":"2345:23:33"}},{"expression":{"arguments":[{"id":9331,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"2392:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9332,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9306,"src":"2398:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"2402:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9328,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2378:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Blocklist_$9369_$","typeString":"type(contract super ERC20Blocklist)"}},"id":9330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2384:7:33","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"2378:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9335,"nodeType":"ExpressionStatement","src":"2378:30:33"}]},"documentation":{"id":9302,"nodeType":"StructuredDocumentation","src":"2131:44:33","text":" @dev See {ERC20-_update}."},"id":9337,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2189:7:33","nodeType":"FunctionDefinition","overrides":{"id":9310,"nodeType":"OverrideSpecifier","overrides":[],"src":"2255:8:33"},"parameters":{"id":9309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9304,"mutability":"mutable","name":"from","nameLocation":"2205:4:33","nodeType":"VariableDeclaration","scope":9337,"src":"2197:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9303,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9306,"mutability":"mutable","name":"to","nameLocation":"2219:2:33","nodeType":"VariableDeclaration","scope":9337,"src":"2211:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9305,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9308,"mutability":"mutable","name":"value","nameLocation":"2231:5:33","nodeType":"VariableDeclaration","scope":9337,"src":"2223:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2196:41:33"},"returnParameters":{"id":9311,"nodeType":"ParameterList","parameters":[],"src":"2264:0:33"},"scope":9369,"src":"2180:235:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1662],"body":{"id":9367,"nodeType":"Block","src":"2578:121:33","statements":[{"condition":{"arguments":[{"id":9351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"2600:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9350,"name":"blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9240,"src":"2592:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9357,"nodeType":"IfStatement","src":"2588:46:33","trueBody":{"errorCall":{"arguments":[{"id":9354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"2628:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9353,"name":"ERC20Blocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"2615:12:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:19:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9356,"nodeType":"RevertStatement","src":"2608:26:33"}},{"expression":{"arguments":[{"id":9361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"2659:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9342,"src":"2666:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"2675:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9364,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9346,"src":"2682:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9358,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2644:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Blocklist_$9369_$","typeString":"type(contract super ERC20Blocklist)"}},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2650:8:33","memberName":"_approve","nodeType":"MemberAccess","referencedDeclaration":1662,"src":"2644:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":9365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2644:48:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9366,"nodeType":"ExpressionStatement","src":"2644:48:33"}]},"documentation":{"id":9338,"nodeType":"StructuredDocumentation","src":"2421:45:33","text":" @dev See {ERC20-_approve}."},"id":9368,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"2480:8:33","nodeType":"FunctionDefinition","overrides":{"id":9348,"nodeType":"OverrideSpecifier","overrides":[],"src":"2569:8:33"},"parameters":{"id":9347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9340,"mutability":"mutable","name":"owner","nameLocation":"2497:5:33","nodeType":"VariableDeclaration","scope":9368,"src":"2489:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9339,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9342,"mutability":"mutable","name":"spender","nameLocation":"2512:7:33","nodeType":"VariableDeclaration","scope":9368,"src":"2504:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9341,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9344,"mutability":"mutable","name":"value","nameLocation":"2529:5:33","nodeType":"VariableDeclaration","scope":9368,"src":"2521:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2521:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9346,"mutability":"mutable","name":"emitEvent","nameLocation":"2541:9:33","nodeType":"VariableDeclaration","scope":9368,"src":"2536:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9345,"name":"bool","nodeType":"ElementaryTypeName","src":"2536:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2488:63:33"},"returnParameters":{"id":9349,"nodeType":"ParameterList","parameters":[],"src":"2578:0:33"},"scope":9369,"src":"2471:228:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":9370,"src":"688:2013:33","usedErrors":[1071,1076,1081,1090,1095,1100,9227],"usedEvents":[1723,1732,9217,9222]}],"src":"33:2668:33"},"id":33},"contracts/Custodian.sol":{"ast":{"absolutePath":"contracts/Custodian.sol","exportedSymbols":{"ERC20":[1711],"ERC20Custodian":[9594]},"id":9595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9371,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:34"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9595,"sourceUnit":1712,"src":"58:68:34","symbolAliases":[{"foreign":{"id":9372,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"66:5:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9375,"name":"ERC20","nameLocations":["731:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"731:5:34"},"id":9376,"nodeType":"InheritanceSpecifier","src":"731:5:34"}],"canonicalName":"ERC20Custodian","contractDependencies":[],"contractKind":"contract","documentation":{"id":9374,"nodeType":"StructuredDocumentation","src":"128:566:34","text":" @dev Extension of {ERC20} that allows to implement a custodian\n mechanism that can be managed by an authorized account with the\n {freeze} and {unfreeze} functions.\n This mechanism allows a custodian (e.g. a DAO or a\n well-configured multisig) to freeze and unfreeze the balance\n of a user.\n The frozen balance is not available for transfers or approvals\n to other entities to operate on its behalf if {freeze} was not\n called with such account as an argument. Similarly, the account\n will be unfrozen again if {unfreeze} is called."},"fullyImplemented":false,"id":9594,"linearizedBaseContracts":[9594,1711,1101,2181,1789,2247],"name":"ERC20Custodian","nameLocation":"713:14:34","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":9377,"nodeType":"StructuredDocumentation","src":"743:68:34","text":" @dev The amount of tokens frozen by user address."},"id":9381,"mutability":"mutable","name":"_frozen","nameLocation":"865:7:34","nodeType":"VariableDeclaration","scope":9594,"src":"816:56:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9380,"keyName":"user","keyNameLocation":"832:4:34","keyType":{"id":9378,"name":"address","nodeType":"ElementaryTypeName","src":"824:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"816:39:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"amount","valueNameLocation":"848:6:34","valueType":{"id":9379,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":9382,"nodeType":"StructuredDocumentation","src":"879:195:34","text":" @dev Emitted when tokens are frozen for a user.\n @param user The address of the user whose tokens were frozen.\n @param amount The amount of tokens that were frozen."},"eventSelector":"a065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45","id":9388,"name":"TokensFrozen","nameLocation":"1085:12:34","nodeType":"EventDefinition","parameters":{"id":9387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9384,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1114:4:34","nodeType":"VariableDeclaration","scope":9388,"src":"1098:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9383,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9386,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1128:6:34","nodeType":"VariableDeclaration","scope":9388,"src":"1120:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1097:38:34"},"src":"1079:57:34"},{"anonymous":false,"documentation":{"id":9389,"nodeType":"StructuredDocumentation","src":"1142:201:34","text":" @dev Emitted when tokens are unfrozen for a user.\n @param user The address of the user whose tokens were unfrozen.\n @param amount The amount of tokens that were unfrozen."},"eventSelector":"9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6","id":9395,"name":"TokensUnfrozen","nameLocation":"1354:14:34","nodeType":"EventDefinition","parameters":{"id":9394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9391,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1385:4:34","nodeType":"VariableDeclaration","scope":9395,"src":"1369:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9390,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9393,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1399:6:34","nodeType":"VariableDeclaration","scope":9395,"src":"1391:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1368:38:34"},"src":"1348:59:34"},{"documentation":{"id":9396,"nodeType":"StructuredDocumentation","src":"1413:96:34","text":" @dev The operation failed because the user has insufficient unfrozen balance."},"errorSelector":"14884b49","id":9400,"name":"ERC20InsufficientUnfrozenBalance","nameLocation":"1520:32:34","nodeType":"ErrorDefinition","parameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9398,"mutability":"mutable","name":"user","nameLocation":"1561:4:34","nodeType":"VariableDeclaration","scope":9400,"src":"1553:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9397,"name":"address","nodeType":"ElementaryTypeName","src":"1553:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1552:14:34"},"src":"1514:53:34"},{"documentation":{"id":9401,"nodeType":"StructuredDocumentation","src":"1573:94:34","text":" @dev The operation failed because the user has insufficient frozen balance."},"errorSelector":"b4767c88","id":9405,"name":"ERC20InsufficientFrozenBalance","nameLocation":"1678:30:34","nodeType":"ErrorDefinition","parameters":{"id":9404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9403,"mutability":"mutable","name":"user","nameLocation":"1717:4:34","nodeType":"VariableDeclaration","scope":9405,"src":"1709:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9402,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1708:14:34"},"src":"1672:51:34"},{"documentation":{"id":9406,"nodeType":"StructuredDocumentation","src":"1729:113:34","text":" @dev Error thrown when a non-custodian account attempts to perform a custodian-only operation."},"errorSelector":"bb4be5f3","id":9408,"name":"ERC20NotCustodian","nameLocation":"1853:17:34","nodeType":"ErrorDefinition","parameters":{"id":9407,"nodeType":"ParameterList","parameters":[],"src":"1870:2:34"},"src":"1847:26:34"},{"documentation":{"id":9409,"nodeType":"StructuredDocumentation","src":"1879:83:34","text":" @dev Error thrown when trying to freeze tokens for address zero."},"errorSelector":"959d408b","id":9411,"name":"ERC20FreezeAddressZero","nameLocation":"1973:22:34","nodeType":"ErrorDefinition","parameters":{"id":9410,"nodeType":"ParameterList","parameters":[],"src":"1995:2:34"},"src":"1967:31:34"},{"body":{"id":9424,"nodeType":"Block","src":"2113:87:34","statements":[{"condition":{"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2127:27:34","subExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"2141:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9414,"name":"_isCustodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"2128:12:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9422,"nodeType":"IfStatement","src":"2123:59:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9419,"name":"ERC20NotCustodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9408,"src":"2163:17:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:19:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9421,"nodeType":"RevertStatement","src":"2156:26:34"}},{"id":9423,"nodeType":"PlaceholderStatement","src":"2192:1:34"}]},"documentation":{"id":9412,"nodeType":"StructuredDocumentation","src":"2004:79:34","text":" @dev Modifier to restrict access to custodian accounts only."},"id":9425,"name":"onlyCustodian","nameLocation":"2097:13:34","nodeType":"ModifierDefinition","parameters":{"id":9413,"nodeType":"ParameterList","parameters":[],"src":"2110:2:34"},"src":"2088:112:34","virtual":false,"visibility":"internal"},{"body":{"id":9437,"nodeType":"Block","src":"2350:37:34","statements":[{"expression":{"baseExpression":{"id":9433,"name":"_frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"2367:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9435,"indexExpression":{"id":9434,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"2375:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2367:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9432,"id":9436,"nodeType":"Return","src":"2360:20:34"}]},"documentation":{"id":9426,"nodeType":"StructuredDocumentation","src":"2206:71:34","text":" @dev Returns the amount of tokens frozen for a user."},"functionSelector":"d0516650","id":9438,"implemented":true,"kind":"function","modifiers":[],"name":"frozen","nameLocation":"2291:6:34","nodeType":"FunctionDefinition","parameters":{"id":9429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9428,"mutability":"mutable","name":"user","nameLocation":"2306:4:34","nodeType":"VariableDeclaration","scope":9438,"src":"2298:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9427,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:14:34"},"returnParameters":{"id":9432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9438,"src":"2341:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2340:9:34"},"scope":9594,"src":"2282:105:34","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9479,"nodeType":"Block","src":"2795:237:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9448,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"2809:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2817:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9449,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:34","typeDescriptions":{}}},"id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2809:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9457,"nodeType":"IfStatement","src":"2805:55:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9454,"name":"ERC20FreezeAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"2836:22:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9456,"nodeType":"RevertStatement","src":"2829:31:34"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9459,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"2891:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9458,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9547,"src":"2874:16:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9461,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"2899:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2874:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9467,"nodeType":"IfStatement","src":"2870:82:34","trueBody":{"errorCall":{"arguments":[{"id":9464,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"2947:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9463,"name":"ERC20InsufficientUnfrozenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"2914:32:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2914:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9466,"nodeType":"RevertStatement","src":"2907:45:34"}},{"expression":{"id":9472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9468,"name":"_frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"2962:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9470,"indexExpression":{"id":9469,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"2970:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2962:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"2978:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2962:22:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9473,"nodeType":"ExpressionStatement","src":"2962:22:34"},{"eventCall":{"arguments":[{"id":9475,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"3012:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"3018:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9474,"name":"TokensFrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9388,"src":"2999:12:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9478,"nodeType":"EmitStatement","src":"2994:31:34"}]},"documentation":{"id":9439,"nodeType":"StructuredDocumentation","src":"2393:320:34","text":" @dev Adjusts the amount of tokens frozen for a user.\n @param user The address of the user whose tokens to freeze.\n @param amount The amount of tokens frozen.\n Requirements:\n - The user must have sufficient unfrozen balance.\n - The user cannot be address(0)."},"functionSelector":"24bce60c","id":9480,"implemented":true,"kind":"function","modifiers":[{"id":9446,"kind":"modifierInvocation","modifierName":{"id":9445,"name":"onlyCustodian","nameLocations":["2781:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":9425,"src":"2781:13:34"},"nodeType":"ModifierInvocation","src":"2781:13:34"}],"name":"freeze","nameLocation":"2727:6:34","nodeType":"FunctionDefinition","parameters":{"id":9444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"user","nameLocation":"2742:4:34","nodeType":"VariableDeclaration","scope":9480,"src":"2734:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9440,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9443,"mutability":"mutable","name":"amount","nameLocation":"2756:6:34","nodeType":"VariableDeclaration","scope":9480,"src":"2748:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2733:30:34"},"returnParameters":{"id":9447,"nodeType":"ParameterList","parameters":[],"src":"2795:0:34"},"scope":9594,"src":"2718:314:34","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":9527,"nodeType":"Block","src":"3428:287:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9490,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"3442:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3458:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3450:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9491,"name":"address","nodeType":"ElementaryTypeName","src":"3450:7:34","typeDescriptions":{}}},"id":9494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3442:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9499,"nodeType":"IfStatement","src":"3438:55:34","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9496,"name":"ERC20FreezeAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9411,"src":"3469:22:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3469:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9498,"nodeType":"RevertStatement","src":"3462:31:34"}},{"assignments":[9501],"declarations":[{"constant":false,"id":9501,"mutability":"mutable","name":"frozenAmount","nameLocation":"3511:12:34","nodeType":"VariableDeclaration","scope":9527,"src":"3503:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9505,"initialValue":{"arguments":[{"id":9503,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"3533:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9502,"name":"frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"3526:6:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3503:35:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9506,"name":"frozenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9501,"src":"3552:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9507,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9485,"src":"3567:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3552:21:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9513,"nodeType":"IfStatement","src":"3548:70:34","trueBody":{"errorCall":{"arguments":[{"id":9510,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"3613:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9509,"name":"ERC20InsufficientFrozenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9405,"src":"3582:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:36:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9512,"nodeType":"RevertStatement","src":"3575:43:34"}},{"expression":{"id":9520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9514,"name":"_frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"3628:7:34","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9516,"indexExpression":{"id":9515,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"3636:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3628:13:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9517,"name":"frozenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9501,"src":"3644:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9485,"src":"3659:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3644:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3628:37:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9521,"nodeType":"ExpressionStatement","src":"3628:37:34"},{"eventCall":{"arguments":[{"id":9523,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"3695:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9485,"src":"3701:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9522,"name":"TokensUnfrozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9395,"src":"3680:14:34","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3680:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9526,"nodeType":"EmitStatement","src":"3675:33:34"}]},"documentation":{"id":9481,"nodeType":"StructuredDocumentation","src":"3038:306:34","text":" @dev Unfreezes tokens for a user.\n @param user The address of the user whose tokens to unfreeze.\n @param amount The amount of tokens to unfreeze.\n Requirements:\n - The user must have sufficient frozen balance.\n - The user cannot be address(0)."},"functionSelector":"7b46b80b","id":9528,"implemented":true,"kind":"function","modifiers":[{"id":9488,"kind":"modifierInvocation","modifierName":{"id":9487,"name":"onlyCustodian","nameLocations":["3414:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":9425,"src":"3414:13:34"},"nodeType":"ModifierInvocation","src":"3414:13:34"}],"name":"unfreeze","nameLocation":"3358:8:34","nodeType":"FunctionDefinition","parameters":{"id":9486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9483,"mutability":"mutable","name":"user","nameLocation":"3375:4:34","nodeType":"VariableDeclaration","scope":9528,"src":"3367:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9482,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9485,"mutability":"mutable","name":"amount","nameLocation":"3389:6:34","nodeType":"VariableDeclaration","scope":9528,"src":"3381:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3381:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3366:30:34"},"returnParameters":{"id":9489,"nodeType":"ParameterList","parameters":[],"src":"3428:0:34"},"scope":9594,"src":"3349:366:34","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":9546,"nodeType":"Block","src":"4027:65:34","statements":[{"expression":{"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9536,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"4037:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9538,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9531,"src":"4059:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9537,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4049:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":9541,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9531,"src":"4077:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9540,"name":"frozen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"4070:6:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4070:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4049:36:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4037:48:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9545,"nodeType":"ExpressionStatement","src":"4037:48:34"}]},"documentation":{"id":9529,"nodeType":"StructuredDocumentation","src":"3721:218:34","text":" @dev Returns the available (unfrozen) balance of an account.\n @param account The address to query the available balance of.\n @return available The amount of tokens available for transfer."},"functionSelector":"a0821be3","id":9547,"implemented":true,"kind":"function","modifiers":[],"name":"availableBalance","nameLocation":"3953:16:34","nodeType":"FunctionDefinition","parameters":{"id":9532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9531,"mutability":"mutable","name":"account","nameLocation":"3978:7:34","nodeType":"VariableDeclaration","scope":9547,"src":"3970:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9530,"name":"address","nodeType":"ElementaryTypeName","src":"3970:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3969:17:34"},"returnParameters":{"id":9535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9534,"mutability":"mutable","name":"available","nameLocation":"4016:9:34","nodeType":"VariableDeclaration","scope":9547,"src":"4008:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4007:19:34"},"scope":9594,"src":"3944:148:34","stateMutability":"view","virtual":false,"visibility":"public"},{"documentation":{"id":9548,"nodeType":"StructuredDocumentation","src":"4098:175:34","text":" @dev Checks if the user is a custodian.\n @param user The address of the user to check.\n @return True if the user is authorized, false otherwise."},"id":9555,"implemented":false,"kind":"function","modifiers":[],"name":"_isCustodian","nameLocation":"4287:12:34","nodeType":"FunctionDefinition","parameters":{"id":9551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9550,"mutability":"mutable","name":"user","nameLocation":"4308:4:34","nodeType":"VariableDeclaration","scope":9555,"src":"4300:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9549,"name":"address","nodeType":"ElementaryTypeName","src":"4300:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4299:14:34"},"returnParameters":{"id":9554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9555,"src":"4345:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9552,"name":"bool","nodeType":"ElementaryTypeName","src":"4345:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4344:6:34"},"scope":9594,"src":"4278:73:34","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1518],"body":{"id":9592,"nodeType":"Block","src":"4490:184:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9566,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4504:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4520:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9567,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:34","typeDescriptions":{}}},"id":9570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4504:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9573,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4543:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9572,"name":"availableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9547,"src":"4526:16:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"4551:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4526:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4504:52:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9583,"nodeType":"IfStatement","src":"4500:128:34","trueBody":{"id":9582,"nodeType":"Block","src":"4558:70:34","statements":[{"errorCall":{"arguments":[{"id":9579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4612:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9578,"name":"ERC20InsufficientUnfrozenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"4579:32:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4579:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9581,"nodeType":"RevertStatement","src":"4572:45:34"}]}},{"expression":{"arguments":[{"id":9587,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"4651:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"4657:2:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"4661:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9584,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4637:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Custodian_$9594_$","typeString":"type(contract super ERC20Custodian)"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4643:7:34","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"4637:13:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4637:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9591,"nodeType":"ExpressionStatement","src":"4637:30:34"}]},"documentation":{"id":9556,"nodeType":"StructuredDocumentation","src":"4357:44:34","text":" @dev See {ERC20-_update}."},"id":9593,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4415:7:34","nodeType":"FunctionDefinition","overrides":{"id":9564,"nodeType":"OverrideSpecifier","overrides":[],"src":"4481:8:34"},"parameters":{"id":9563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9558,"mutability":"mutable","name":"from","nameLocation":"4431:4:34","nodeType":"VariableDeclaration","scope":9593,"src":"4423:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9557,"name":"address","nodeType":"ElementaryTypeName","src":"4423:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9560,"mutability":"mutable","name":"to","nameLocation":"4445:2:34","nodeType":"VariableDeclaration","scope":9593,"src":"4437:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9559,"name":"address","nodeType":"ElementaryTypeName","src":"4437:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9562,"mutability":"mutable","name":"value","nameLocation":"4457:5:34","nodeType":"VariableDeclaration","scope":9593,"src":"4449:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:41:34"},"returnParameters":{"id":9565,"nodeType":"ParameterList","parameters":[],"src":"4490:0:34"},"scope":9594,"src":"4406:268:34","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":9595,"src":"695:3981:34","usedErrors":[1071,1076,1081,1090,1095,1100,9400,9405,9408,9411],"usedEvents":[1723,1732,9388,9395]}],"src":"32:4644:34"},"id":34},"contracts/USVP.sol":{"ast":{"absolutePath":"contracts/USVP.sol","exportedSymbols":{"AccessControl":[295],"ERC20":[1711],"ERC20Blocklist":[9369],"ERC20Burnable":[1835],"ERC20Custodian":[9594],"ERC20Pausable":[1869],"ERC20Permit":[2023],"ERC20Votes":[2155],"Nonces":[2315],"USVP":[9892]},"id":9893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9596,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"81:24:35"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":9598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":296,"src":"107:79:35","symbolAliases":[{"foreign":{"id":9597,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"115:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":1712,"src":"187:68:35","symbolAliases":[{"foreign":{"id":9599,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"195:5:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Blocklist.sol","file":"./Blocklist.sol","id":9602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":9370,"src":"256:47:35","symbolAliases":[{"foreign":{"id":9601,"name":"ERC20Blocklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9369,"src":"264:14:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":9604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":1836,"src":"304:95:35","symbolAliases":[{"foreign":{"id":9603,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"312:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Custodian.sol","file":"./Custodian.sol","id":9606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":9595,"src":"400:47:35","symbolAliases":[{"foreign":{"id":9605,"name":"ERC20Custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9594,"src":"408:14:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":9608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":1870,"src":"448:95:35","symbolAliases":[{"foreign":{"id":9607,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"456:13:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":9610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":2024,"src":"544:91:35","symbolAliases":[{"foreign":{"id":9609,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"552:11:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":9612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":2156,"src":"636:89:35","symbolAliases":[{"foreign":{"id":9611,"name":"ERC20Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"644:10:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"@openzeppelin/contracts/utils/Nonces.sol","id":9614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9893,"sourceUnit":2316,"src":"726:64:35","symbolAliases":[{"foreign":{"id":9613,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"734:6:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9616,"name":"ERC20","nameLocations":["888:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"888:5:35"},"id":9617,"nodeType":"InheritanceSpecifier","src":"888:5:35"},{"baseName":{"id":9618,"name":"ERC20Burnable","nameLocations":["900:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"900:13:35"},"id":9619,"nodeType":"InheritanceSpecifier","src":"900:13:35"},{"baseName":{"id":9620,"name":"ERC20Pausable","nameLocations":["920:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"920:13:35"},"id":9621,"nodeType":"InheritanceSpecifier","src":"920:13:35"},{"baseName":{"id":9622,"name":"AccessControl","nameLocations":["940:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"940:13:35"},"id":9623,"nodeType":"InheritanceSpecifier","src":"940:13:35"},{"baseName":{"id":9624,"name":"ERC20Blocklist","nameLocations":["960:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":9369,"src":"960:14:35"},"id":9625,"nodeType":"InheritanceSpecifier","src":"960:14:35"},{"baseName":{"id":9626,"name":"ERC20Custodian","nameLocations":["981:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":9594,"src":"981:14:35"},"id":9627,"nodeType":"InheritanceSpecifier","src":"981:14:35"},{"baseName":{"id":9628,"name":"ERC20Permit","nameLocations":["1002:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"1002:11:35"},"id":9629,"nodeType":"InheritanceSpecifier","src":"1002:11:35"},{"baseName":{"id":9630,"name":"ERC20Votes","nameLocations":["1020:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":2155,"src":"1020:10:35"},"id":9631,"nodeType":"InheritanceSpecifier","src":"1020:10:35"}],"canonicalName":"USVP","contractDependencies":[],"contractKind":"contract","documentation":{"id":9615,"nodeType":"StructuredDocumentation","src":"792:74:35","text":"@custom:security-contact guardcolombia@gmail.com, telegram @wanagrow "},"fullyImplemented":true,"id":9892,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[9892,2155,1008,1044,461,1059,2023,2315,3720,1033,2217,9594,9369,295,3818,3830,378,1869,2484,1835,1711,1101,2181,1789,2247],"name":"USVP","nameLocation":"875:4:35","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":9636,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1062:11:35","nodeType":"VariableDeclaration","scope":9892,"src":"1038:62:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1038:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":9634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1086:13:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":9633,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1076:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1076:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":9641,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"1130:11:35","nodeType":"VariableDeclaration","scope":9892,"src":"1106:62:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1106:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":9639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1154:13:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":9638,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1144:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1144:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"b3de4214","id":9646,"mutability":"constant","name":"LIMITER_ROLE","nameLocation":"1198:12:35","nodeType":"VariableDeclaration","scope":9892,"src":"1174:64:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1174:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4c494d495445525f524f4c45","id":9644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1223:14:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c","typeString":"literal_string \"LIMITER_ROLE\""},"value":"LIMITER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c","typeString":"literal_string \"LIMITER_ROLE\""}],"id":9643,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1213:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1213:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c79445d0","id":9651,"mutability":"constant","name":"CUSTODIAN_ROLE","nameLocation":"1268:14:35","nodeType":"VariableDeclaration","scope":9892,"src":"1244:68:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1244:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"435553544f4449414e5f524f4c45","id":9649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1295:16:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_e28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b9","typeString":"literal_string \"CUSTODIAN_ROLE\""},"value":"CUSTODIAN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b9","typeString":"literal_string \"CUSTODIAN_ROLE\""}],"id":9648,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1285:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1285:27:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cb6b0c","id":9658,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"1384:10:35","nodeType":"VariableDeclaration","scope":9892,"src":"1360:58:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":9657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030","id":9653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1397:10:35","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1410:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1416:2:35","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1410:8:35","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1397:21:35","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb475","id":9666,"name":"TokensMinted","nameLocation":"1494:12:35","nodeType":"EventDefinition","parameters":{"id":9665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9660,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1523:2:35","nodeType":"VariableDeclaration","scope":9666,"src":"1507:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9659,"name":"address","nodeType":"ElementaryTypeName","src":"1507:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9662,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1535:6:35","nodeType":"VariableDeclaration","scope":9666,"src":"1527:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9664,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"1551:11:35","nodeType":"VariableDeclaration","scope":9666,"src":"1543:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1506:57:35"},"src":"1488:76:35"},{"body":{"id":9722,"nodeType":"Block","src":"1784:349:35","statements":[{"expression":{"arguments":[{"id":9687,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1805:18:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9688,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9668,"src":"1825:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9686,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1794:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:44:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9690,"nodeType":"ExpressionStatement","src":"1794:44:35"},{"expression":{"arguments":[{"id":9692,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"1859:11:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9693,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9670,"src":"1872:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9691,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1848:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9695,"nodeType":"ExpressionStatement","src":"1848:31:35"},{"expression":{"arguments":[{"id":9697,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9641,"src":"1900:11:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9698,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"1913:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9696,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1889:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:31:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9700,"nodeType":"ExpressionStatement","src":"1889:31:35"},{"expression":{"arguments":[{"id":9702,"name":"LIMITER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"1941:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9703,"name":"limiter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"1955:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9701,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1930:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:33:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9705,"nodeType":"ExpressionStatement","src":"1930:33:35"},{"expression":{"arguments":[{"id":9707,"name":"CUSTODIAN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"1984:14:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9708,"name":"custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9676,"src":"2000:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9706,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1973:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1973:37:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9710,"nodeType":"ExpressionStatement","src":"1973:37:35"},{"expression":{"arguments":[{"expression":{"id":9712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2085:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2089:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2085:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323030303030303030","id":9714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2097:9:35","typeDescriptions":{"typeIdentifier":"t_rational_200000000_by_1","typeString":"int_const 200000000"},"value":"200000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2109:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9716,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2115:8:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":9717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2109:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2097:28:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9711,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2079:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:47:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9721,"nodeType":"ExpressionStatement","src":"2079:47:35"}]},"id":9723,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"55535650","id":9679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1736:6:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_78f60d831525688ab021004c434eeacb90ba83c4d0af8a1e18901ee28c898f59","typeString":"literal_string \"USVP\""},"value":"USVP"},{"hexValue":"55535650","id":9680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1744:6:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_78f60d831525688ab021004c434eeacb90ba83c4d0af8a1e18901ee28c898f59","typeString":"literal_string \"USVP\""},"value":"USVP"}],"id":9681,"kind":"baseConstructorSpecifier","modifierName":{"id":9678,"name":"ERC20","nameLocations":["1730:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1730:5:35"},"nodeType":"ModifierInvocation","src":"1730:21:35"},{"arguments":[{"hexValue":"55535650","id":9683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1772:6:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_78f60d831525688ab021004c434eeacb90ba83c4d0af8a1e18901ee28c898f59","typeString":"literal_string \"USVP\""},"value":"USVP"}],"id":9684,"kind":"baseConstructorSpecifier","modifierName":{"id":9682,"name":"ERC20Permit","nameLocations":["1760:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"1760:11:35"},"nodeType":"ModifierInvocation","src":"1760:19:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9668,"mutability":"mutable","name":"defaultAdmin","nameLocation":"1599:12:35","nodeType":"VariableDeclaration","scope":9723,"src":"1591:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9667,"name":"address","nodeType":"ElementaryTypeName","src":"1591:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9670,"mutability":"mutable","name":"pauser","nameLocation":"1630:6:35","nodeType":"VariableDeclaration","scope":9723,"src":"1622:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9669,"name":"address","nodeType":"ElementaryTypeName","src":"1622:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9672,"mutability":"mutable","name":"minter","nameLocation":"1655:6:35","nodeType":"VariableDeclaration","scope":9723,"src":"1647:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9671,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9674,"mutability":"mutable","name":"limiter","nameLocation":"1680:7:35","nodeType":"VariableDeclaration","scope":9723,"src":"1672:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9673,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9676,"mutability":"mutable","name":"custodian","nameLocation":"1706:9:35","nodeType":"VariableDeclaration","scope":9723,"src":"1698:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9675,"name":"address","nodeType":"ElementaryTypeName","src":"1698:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1581:140:35"},"returnParameters":{"id":9685,"nodeType":"ParameterList","parameters":[],"src":"1784:0:35"},"scope":9892,"src":"1570:563:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9732,"nodeType":"Block","src":"2185:25:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9729,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2195:6:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2195:8:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9731,"nodeType":"ExpressionStatement","src":"2195:8:35"}]},"functionSelector":"8456cb59","id":9733,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9726,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"2172:11:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9727,"kind":"modifierInvocation","modifierName":{"id":9725,"name":"onlyRole","nameLocations":["2163:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2163:8:35"},"nodeType":"ModifierInvocation","src":"2163:21:35"}],"name":"pause","nameLocation":"2148:5:35","nodeType":"FunctionDefinition","parameters":{"id":9724,"nodeType":"ParameterList","parameters":[],"src":"2153:2:35"},"returnParameters":{"id":9728,"nodeType":"ParameterList","parameters":[],"src":"2185:0:35"},"scope":9892,"src":"2139:71:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9742,"nodeType":"Block","src":"2264:27:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9739,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2274:8:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9741,"nodeType":"ExpressionStatement","src":"2274:10:35"}]},"functionSelector":"3f4ba83a","id":9743,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9736,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"2251:11:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9737,"kind":"modifierInvocation","modifierName":{"id":9735,"name":"onlyRole","nameLocations":["2242:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2242:8:35"},"nodeType":"ModifierInvocation","src":"2242:21:35"}],"name":"unpause","nameLocation":"2225:7:35","nodeType":"FunctionDefinition","parameters":{"id":9734,"nodeType":"ParameterList","parameters":[],"src":"2232:2:35"},"returnParameters":{"id":9738,"nodeType":"ParameterList","parameters":[],"src":"2264:0:35"},"scope":9892,"src":"2216:75:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9775,"nodeType":"Block","src":"2368:172:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9754,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2386:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2386:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"2402:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2386:22:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9758,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"2412:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2386:36:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555356503a204d617820737570706c79206578636565646564","id":9760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2424:27:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_589e28ac608f9f143058f2a935e77548174e1807f5c66c589a20fb07312f6b13","typeString":"literal_string \"USVP: Max supply exceeded\""},"value":"USVP: Max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_589e28ac608f9f143058f2a935e77548174e1807f5c66c589a20fb07312f6b13","typeString":"literal_string \"USVP: Max supply exceeded\""}],"id":9753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2378:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:74:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9762,"nodeType":"ExpressionStatement","src":"2378:74:35"},{"expression":{"arguments":[{"id":9764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9745,"src":"2468:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9765,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"2472:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9763,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2462:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2462:17:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9767,"nodeType":"ExpressionStatement","src":"2462:17:35"},{"eventCall":{"arguments":[{"id":9769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9745,"src":"2507:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"2511:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9771,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2519:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2519:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9768,"name":"TokensMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"2494:12:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2494:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9774,"nodeType":"EmitStatement","src":"2489:44:35"}]},"functionSelector":"40c10f19","id":9776,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9750,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9641,"src":"2355:11:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9751,"kind":"modifierInvocation","modifierName":{"id":9749,"name":"onlyRole","nameLocations":["2346:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2346:8:35"},"nodeType":"ModifierInvocation","src":"2346:21:35"}],"name":"mint","nameLocation":"2306:4:35","nodeType":"FunctionDefinition","parameters":{"id":9748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9745,"mutability":"mutable","name":"to","nameLocation":"2319:2:35","nodeType":"VariableDeclaration","scope":9776,"src":"2311:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9744,"name":"address","nodeType":"ElementaryTypeName","src":"2311:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9747,"mutability":"mutable","name":"amount","nameLocation":"2331:6:35","nodeType":"VariableDeclaration","scope":9776,"src":"2323:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2323:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2310:28:35"},"returnParameters":{"id":9752,"nodeType":"ParameterList","parameters":[],"src":"2368:0:35"},"scope":9892,"src":"2297:243:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9788,"nodeType":"Block","src":"2609:33:35","statements":[{"expression":{"arguments":[{"id":9785,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9778,"src":"2630:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9784,"name":"_blockUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9271,"src":"2619:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2619:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9787,"nodeType":"ExpressionStatement","src":"2619:16:35"}]},"functionSelector":"3da01325","id":9789,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9781,"name":"LIMITER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"2595:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9782,"kind":"modifierInvocation","modifierName":{"id":9780,"name":"onlyRole","nameLocations":["2586:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2586:8:35"},"nodeType":"ModifierInvocation","src":"2586:22:35"}],"name":"blockUser","nameLocation":"2555:9:35","nodeType":"FunctionDefinition","parameters":{"id":9779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9778,"mutability":"mutable","name":"user","nameLocation":"2573:4:35","nodeType":"VariableDeclaration","scope":9789,"src":"2565:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9777,"name":"address","nodeType":"ElementaryTypeName","src":"2565:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2564:14:35"},"returnParameters":{"id":9783,"nodeType":"ParameterList","parameters":[],"src":"2609:0:35"},"scope":9892,"src":"2546:96:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9801,"nodeType":"Block","src":"2713:35:35","statements":[{"expression":{"arguments":[{"id":9798,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9791,"src":"2736:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9797,"name":"_unblockUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9301,"src":"2723:12:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":9799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9800,"nodeType":"ExpressionStatement","src":"2723:18:35"}]},"functionSelector":"39d319e5","id":9802,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9794,"name":"LIMITER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"2699:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9795,"kind":"modifierInvocation","modifierName":{"id":9793,"name":"onlyRole","nameLocations":["2690:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2690:8:35"},"nodeType":"ModifierInvocation","src":"2690:22:35"}],"name":"unblockUser","nameLocation":"2657:11:35","nodeType":"FunctionDefinition","parameters":{"id":9792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9791,"mutability":"mutable","name":"user","nameLocation":"2677:4:35","nodeType":"VariableDeclaration","scope":9802,"src":"2669:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9790,"name":"address","nodeType":"ElementaryTypeName","src":"2669:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2668:14:35"},"returnParameters":{"id":9796,"nodeType":"ParameterList","parameters":[],"src":"2713:0:35"},"scope":9892,"src":"2648:100:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9555],"body":{"id":9815,"nodeType":"Block","src":"2828:53:35","statements":[{"expression":{"arguments":[{"id":9811,"name":"CUSTODIAN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"2853:14:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9812,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9804,"src":"2869:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9810,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2845:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2845:29:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9809,"id":9814,"nodeType":"Return","src":"2838:36:35"}]},"id":9816,"implemented":true,"kind":"function","modifiers":[],"name":"_isCustodian","nameLocation":"2763:12:35","nodeType":"FunctionDefinition","overrides":{"id":9806,"nodeType":"OverrideSpecifier","overrides":[],"src":"2804:8:35"},"parameters":{"id":9805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9804,"mutability":"mutable","name":"user","nameLocation":"2784:4:35","nodeType":"VariableDeclaration","scope":9816,"src":"2776:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9803,"name":"address","nodeType":"ElementaryTypeName","src":"2776:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2775:14:35"},"returnParameters":{"id":9809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9816,"src":"2822:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9807,"name":"bool","nodeType":"ElementaryTypeName","src":"2822:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2821:6:35"},"scope":9892,"src":"2754:127:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9826,"nodeType":"Block","src":"3008:50:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9821,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9658,"src":"3025:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9822,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"3038:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3038:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3025:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9820,"id":9825,"nodeType":"Return","src":"3018:33:35"}]},"functionSelector":"da0239a6","id":9827,"implemented":true,"kind":"function","modifiers":[],"name":"remainingSupply","nameLocation":"2960:15:35","nodeType":"FunctionDefinition","parameters":{"id":9817,"nodeType":"ParameterList","parameters":[],"src":"2975:2:35"},"returnParameters":{"id":9820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9827,"src":"2999:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2998:9:35"},"scope":9892,"src":"2951:107:35","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1518,1868,2110,9337,9593],"body":{"id":9850,"nodeType":"Block","src":"3305:47:35","statements":[{"expression":{"arguments":[{"id":9845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9829,"src":"3329:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"3335:2:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"3339:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9842,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3315:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_USVP_$9892_$","typeString":"type(contract super USVP)"}},"id":9844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:35","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2110,"src":"3315:13:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3315:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9849,"nodeType":"ExpressionStatement","src":"3315:30:35"}]},"id":9851,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3140:7:35","nodeType":"FunctionDefinition","overrides":{"id":9840,"nodeType":"OverrideSpecifier","overrides":[{"id":9835,"name":"ERC20","nameLocations":["3239:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"3239:5:35"},{"id":9836,"name":"ERC20Pausable","nameLocations":["3246:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"3246:13:35"},{"id":9837,"name":"ERC20Blocklist","nameLocations":["3261:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":9369,"src":"3261:14:35"},{"id":9838,"name":"ERC20Custodian","nameLocations":["3277:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":9594,"src":"3277:14:35"},{"id":9839,"name":"ERC20Votes","nameLocations":["3293:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":2155,"src":"3293:10:35"}],"src":"3230:74:35"},"parameters":{"id":9834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9829,"mutability":"mutable","name":"from","nameLocation":"3165:4:35","nodeType":"VariableDeclaration","scope":9851,"src":"3157:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9828,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9831,"mutability":"mutable","name":"to","nameLocation":"3188:2:35","nodeType":"VariableDeclaration","scope":9851,"src":"3180:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9830,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9833,"mutability":"mutable","name":"value","nameLocation":"3209:5:35","nodeType":"VariableDeclaration","scope":9851,"src":"3201:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3201:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3147:73:35"},"returnParameters":{"id":9841,"nodeType":"ParameterList","parameters":[],"src":"3305:0:35"},"scope":9892,"src":"3131:221:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1662,9368],"body":{"id":9874,"nodeType":"Block","src":"3521:65:35","statements":[{"expression":{"arguments":[{"id":9868,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"3546:5:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9869,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9855,"src":"3553:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"3562:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9871,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"3569:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9865,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3531:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_USVP_$9892_$","typeString":"type(contract super USVP)"}},"id":9867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3537:8:35","memberName":"_approve","nodeType":"MemberAccess","referencedDeclaration":9368,"src":"3531:14:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:48:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9873,"nodeType":"ExpressionStatement","src":"3531:48:35"}]},"id":9875,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"3367:8:35","nodeType":"FunctionDefinition","overrides":{"id":9863,"nodeType":"OverrideSpecifier","overrides":[{"id":9861,"name":"ERC20","nameLocations":["3498:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"3498:5:35"},{"id":9862,"name":"ERC20Blocklist","nameLocations":["3505:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":9369,"src":"3505:14:35"}],"src":"3489:31:35"},"parameters":{"id":9860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9853,"mutability":"mutable","name":"owner","nameLocation":"3393:5:35","nodeType":"VariableDeclaration","scope":9875,"src":"3385:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9852,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9855,"mutability":"mutable","name":"spender","nameLocation":"3417:7:35","nodeType":"VariableDeclaration","scope":9875,"src":"3409:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9854,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9857,"mutability":"mutable","name":"value","nameLocation":"3443:5:35","nodeType":"VariableDeclaration","scope":9875,"src":"3435:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9859,"mutability":"mutable","name":"emitEvent","nameLocation":"3464:9:35","nodeType":"VariableDeclaration","scope":9875,"src":"3459:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9858,"name":"bool","nodeType":"ElementaryTypeName","src":"3459:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3375:104:35"},"returnParameters":{"id":9864,"nodeType":"ParameterList","parameters":[],"src":"3521:0:35"},"scope":9892,"src":"3358:228:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2012,2274],"body":{"id":9890,"nodeType":"Block","src":"3697:43:35","statements":[{"expression":{"arguments":[{"id":9887,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"3727:5:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9885,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3714:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_USVP_$9892_$","typeString":"type(contract super USVP)"}},"id":9886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3720:6:35","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"3714:12:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:19:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9884,"id":9889,"nodeType":"Return","src":"3707:26:35"}]},"functionSelector":"7ecebe00","id":9891,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3601:6:35","nodeType":"FunctionDefinition","overrides":{"id":9881,"nodeType":"OverrideSpecifier","overrides":[{"id":9879,"name":"ERC20Permit","nameLocations":["3658:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":2023,"src":"3658:11:35"},{"id":9880,"name":"Nonces","nameLocations":["3671:6:35"],"nodeType":"IdentifierPath","referencedDeclaration":2315,"src":"3671:6:35"}],"src":"3649:29:35"},"parameters":{"id":9878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9877,"mutability":"mutable","name":"owner","nameLocation":"3625:5:35","nodeType":"VariableDeclaration","scope":9891,"src":"3617:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9876,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3607:29:35"},"returnParameters":{"id":9884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9891,"src":"3688:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3688:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3687:9:35"},"scope":9892,"src":"3592:148:35","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9893,"src":"866:2876:35","usedErrors":[305,308,386,512,519,1071,1076,1081,1090,1095,1100,1900,1907,2043,2257,2389,2392,2498,2500,3156,3161,3166,5446,7353,9227,9400,9405,9408,9411],"usedEvents":[317,326,335,395,404,1013,1723,1732,2381,2386,9217,9222,9388,9395,9666]}],"src":"81:3661:35"},"id":35}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220feb4cc4d0fd78e849870b536e8e8bff91af5bae1ae5a248b6ef4bde05cd7f11564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB4 0xCC 0x4D 0xF 0xD7 DUP15 DUP5 SWAP9 PUSH17 0xB536E8E8BFF91AF5BAE1AE5A248B6EF4BD 0xE0 0x5C 0xD7 CALL ISZERO PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220feb4cc4d0fd78e849870b536e8e8bff91af5bae1ae5a248b6ef4bde05cd7f11564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB4 0xCC 0x4D 0xF 0xD7 DUP15 DUP5 SWAP9 PUSH17 0xB536E8E8BFF91AF5BAE1AE5A248B6EF4BD 0xE0 0x5C 0xD7 CALL ISZERO PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:18:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220f79f4cec272a9c86e8025b3d24aa6809c04f8556b51099169927ba441757013664736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 SWAP16 0x4C 0xEC 0x27 0x2A SWAP13 DUP7 0xE8 MUL JUMPDEST RETURNDATASIZE 0x24 0xAA PUSH9 0x9C04F8556B5109916 SWAP10 0x27 0xBA PREVRANDAO OR JUMPI ADD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3026:20:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220f79f4cec272a9c86e8025b3d24aa6809c04f8556b51099169927ba441757013664736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 SWAP16 0x4C 0xEC 0x27 0x2A SWAP13 DUP7 0xE8 MUL JUMPDEST RETURNDATASIZE 0x24 0xAA PUSH9 0x9C04F8556B5109916 SWAP10 0x27 0xBA PREVRANDAO OR JUMPI ADD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1255:3026:20:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220e528dfa0f0e78e0697193b5801fbe1bd221df03aba086d8045ef672cee3d2a7664736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x28 0xDF LOG0 CREATE 0xE7 DUP15 MOD SWAP8 NOT EXTCODESIZE PC ADD 0xFB 0xE1 0xBD 0x22 SAR CREATE GASPRICE 0xBA ADDMOD PUSH14 0x8045EF672CEE3D2A7664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220e528dfa0f0e78e0697193b5801fbe1bd221df03aba086d8045ef672cee3d2a7664736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x28 0xDF LOG0 CREATE 0xE7 DUP15 MOD SWAP8 NOT EXTCODESIZE PC ADD 0xFB 0xE1 0xBD 0x22 SAR CREATE GASPRICE 0xBA ADDMOD PUSH14 0x8045EF672CEE3D2A7664736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220a9e331f07e2186a751e575114531ef089856cc20053486a29049e123381a3b4d64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE3 BALANCE CREATE PUSH31 0x2186A751E575114531EF089856CC20053486A29049E123381A3B4D64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"251:3680:22:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220a9e331f07e2186a751e575114531ef089856cc20053486a29049e123381a3b4d64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE3 BALANCE CREATE PUSH31 0x2186A751E575114531EF089856CC20053486A29049E123381A3B4D64736F6C PUSH4 0x43000816 STOP CALLER ","sourceMap":"251:3680:22:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220fe68385ffe4edbb959b1812052653ee2701fff825f269caa0abba695b0824fef64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH9 0x385FFE4EDBB959B181 KECCAK256 MSTORE PUSH6 0x3EE2701FFF82 PUSH0 0x26 SWAP13 0xAA EXP 0xBB 0xA6 SWAP6 0xB0 DUP3 0x4F 0xEF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:23:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220fe68385ffe4edbb959b1812052653ee2701fff825f269caa0abba695b0824fef64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH9 0x385FFE4EDBB959B181 KECCAK256 MSTORE PUSH6 0x3EE2701FFF82 PUSH0 0x26 SWAP13 0xAA EXP 0xBB 0xA6 SWAP6 0xB0 DUP3 0x4F 0xEF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:23:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122010662aefb3a995512d9cc80ee84648af1f74c9e755ec7334172fe7623620f3a364736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH7 0x2AEFB3A995512D SWAP13 0xC8 0xE 0xE8 CHAINID BASEFEE 0xAF 0x1F PUSH21 0xC9E755EC7334172FE7623620F3A364736F6C634300 ADDMOD AND STOP CALLER ","sourceMap":"521:3181:25:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122010662aefb3a995512d9cc80ee84648af1f74c9e755ec7334172fe7623620f3a364736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH7 0x2AEFB3A995512D SWAP13 0xC8 0xE 0xE8 CHAINID BASEFEE 0xAF 0x1F PUSH21 0xC9E755EC7334172FE7623620F3A364736F6C634300 ADDMOD AND STOP CALLER ","sourceMap":"521:3181:25:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220f5f190a9c379eb7fbc66fe2b983c012946176531fd2607c63d01638716275d7964736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 CALL SWAP1 0xA9 0xC3 PUSH26 0xEB7FBC66FE2B983C012946176531FD2607C63D01638716275D79 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220f5f190a9c379eb7fbc66fe2b983c012946176531fd2607c63d01638716275d7964736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 CALL SWAP1 0xA9 0xC3 PUSH26 0xEB7FBC66FE2B983C012946176531FD2607C63D01638716275D79 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:28026:28:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220b66beaafbeefb9218796a5bd012d0207879e805f7a239a04a0095e2dbfcaa9ab64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH12 0xEAAFBEEFB9218796A5BD012D MUL SMOD DUP8 SWAP15 DUP1 PUSH0 PUSH27 0x239A04A0095E2DBFCAA9AB64736F6C634300081600330000000000 ","sourceMap":"769:34173:29:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b66beaafbeefb9218796a5bd012d0207879e805f7a239a04a0095e2dbfcaa9ab64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH12 0xEAAFBEEFB9218796A5BD012D MUL SMOD DUP8 SWAP15 DUP1 PUSH0 PUSH27 0x239A04A0095E2DBFCAA9AB64736F6C634300081600330000000000 ","sourceMap":"769:34173:29:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220951d25de6d1c93b414364e5996d588c74fc4a1e4d0129f85c9f0cb01a5d2d31a64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SAR 0x25 0xDE PUSH14 0x1C93B414364E5996D588C74FC4A1 0xE4 0xD0 SLT SWAP16 DUP6 0xC9 CREATE 0xCB ADD 0xA5 0xD2 0xD3 BYTE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220951d25de6d1c93b414364e5996d588c74fc4a1e4d0129f85c9f0cb01a5d2d31a64736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SAR 0x25 0xDE PUSH14 0x1C93B414364E5996D588C74FC4A1 0xE4 0xD0 SLT SWAP16 DUP6 0xC9 CREATE 0xCB ADD 0xA5 0xD2 0xD3 BYTE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:30:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220a3a0cdbe15aecad4730981dc44053da8ad066461f30328f4a56873b117d8202864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 LOG0 0xCD 0xBE ISZERO 0xAE 0xCA 0xD4 PUSH20 0x981DC44053DA8AD066461F30328F4A56873B117 0xD8 KECCAK256 0x28 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"668:20756:31:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220a3a0cdbe15aecad4730981dc44053da8ad066461f30328f4a56873b117d8202864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 LOG0 0xCD 0xBE ISZERO 0xAE 0xCA 0xD4 PUSH20 0x981DC44053DA8AD066461F30328F4A56873B117 0xD8 KECCAK256 0x28 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"668:20756:31:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220c963d7838286638b8b9a78929d19f69fa4a273a673c831c90cdee5a71f38a54364736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH4 0xD7838286 PUSH4 0x8B8B9A78 SWAP3 SWAP14 NOT 0xF6 SWAP16 LOG4 LOG2 PUSH20 0xA673C831C90CDEE5A71F38A54364736F6C634300 ADDMOD AND STOP CALLER ","sourceMap":"640:4515:32:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220c963d7838286638b8b9a78929d19f69fa4a273a673c831c90cdee5a71f38a54364736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH4 0xD7838286 PUSH4 0x8B8B9A78 SWAP3 SWAP14 NOT 0xF6 SWAP16 LOG4 LOG2 PUSH20 0xA673C831C90CDEE5A71F38A54364736F6C634300 ADDMOD AND STOP CALLER ","sourceMap":"640:4515:32:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"contracts/Blocklist.sol":{"ERC20Blocklist":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20Blocked","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"UserBlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"UserUnblocked","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"blocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","blocked(address)":"e5962195","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20Blocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserUnblocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"blocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows to implement a blocklist mechanism that can be managed by an authorized account with the {_blockUser} and {_unblockUser} functions. The blocklist provides the guarantee to the contract owner (e.g. a DAO or a well-configured multisig) that any account won't be able to execute transfers or approvals to other entities to operate on its behalf if {_blockUser} was not called with such account as an argument. Similarly, the account will be unblocked again if {_unblockUser} is called.\",\"errors\":{\"ERC20Blocked(address)\":[{\"details\":\"The operation failed because the user is blocked.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"UserBlocked(address)\":{\"details\":\"Emitted when a user is blocked.\"},\"UserUnblocked(address)\":{\"details\":\"Emitted when a user is unblocked.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"blocked(address)\":{\"details\":\"Returns the blocked status of an account.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"_blocked\":{\"details\":\"Blocked status of addresses. True if blocked, False otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Blocklist.sol\":\"ERC20Blocklist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Blocklist.sol\":{\"keccak256\":\"0xe8aee3283f4de7cab9bf88aaf7d39c81bcdafcfcb8fbe7392171892f34523d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ea43a9c318854299457e15e7380188e43e186c4c3a33bf2ec101f22ba81bcd7\",\"dweb:/ipfs/QmbiNb9mWh2mZZHQ9Gpi3TD6ZCDbyR2KBPwpVdhRtEr4gx\"]}},\"version\":1}"}},"contracts/Custodian.sol":{"ERC20Custodian":{"abi":[{"inputs":[],"name":"ERC20FreezeAddressZero","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20InsufficientFrozenBalance","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20InsufficientUnfrozenBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ERC20NotCustodian","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensUnfrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableBalance","outputs":[{"internalType":"uint256","name":"available","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"freeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"frozen","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unfreeze","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","availableBalance(address)":"a0821be3","balanceOf(address)":"70a08231","decimals()":"313ce567","freeze(address,uint256)":"24bce60c","frozen(address)":"d0516650","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unfreeze(address,uint256)":"7b46b80b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC20FreezeAddressZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20InsufficientFrozenBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20InsufficientUnfrozenBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20NotCustodian\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows to implement a custodian mechanism that can be managed by an authorized account with the {freeze} and {unfreeze} functions. This mechanism allows a custodian (e.g. a DAO or a well-configured multisig) to freeze and unfreeze the balance of a user. The frozen balance is not available for transfers or approvals to other entities to operate on its behalf if {freeze} was not called with such account as an argument. Similarly, the account will be unfrozen again if {unfreeze} is called.\",\"errors\":{\"ERC20FreezeAddressZero()\":[{\"details\":\"Error thrown when trying to freeze tokens for address zero.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InsufficientFrozenBalance(address)\":[{\"details\":\"The operation failed because the user has insufficient frozen balance.\"}],\"ERC20InsufficientUnfrozenBalance(address)\":[{\"details\":\"The operation failed because the user has insufficient unfrozen balance.\"}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20NotCustodian()\":[{\"details\":\"Error thrown when a non-custodian account attempts to perform a custodian-only operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"TokensFrozen(address,uint256)\":{\"details\":\"Emitted when tokens are frozen for a user.\",\"params\":{\"amount\":\"The amount of tokens that were frozen.\",\"user\":\"The address of the user whose tokens were frozen.\"}},\"TokensUnfrozen(address,uint256)\":{\"details\":\"Emitted when tokens are unfrozen for a user.\",\"params\":{\"amount\":\"The amount of tokens that were unfrozen.\",\"user\":\"The address of the user whose tokens were unfrozen.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"availableBalance(address)\":{\"details\":\"Returns the available (unfrozen) balance of an account.\",\"params\":{\"account\":\"The address to query the available balance of.\"},\"returns\":{\"available\":\"The amount of tokens available for transfer.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"freeze(address,uint256)\":{\"details\":\"Adjusts the amount of tokens frozen for a user.\",\"params\":{\"amount\":\"The amount of tokens frozen. Requirements: - The user must have sufficient unfrozen balance. - The user cannot be address(0).\",\"user\":\"The address of the user whose tokens to freeze.\"}},\"frozen(address)\":{\"details\":\"Returns the amount of tokens frozen for a user.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unfreeze(address,uint256)\":{\"details\":\"Unfreezes tokens for a user.\",\"params\":{\"amount\":\"The amount of tokens to unfreeze. Requirements: - The user must have sufficient frozen balance. - The user cannot be address(0).\",\"user\":\"The address of the user whose tokens to unfreeze.\"}}},\"stateVariables\":{\"_frozen\":{\"details\":\"The amount of tokens frozen by user address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Custodian.sol\":\"ERC20Custodian\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Custodian.sol\":{\"keccak256\":\"0xf52b63373090a4e13dbf06242bdd075ba796a2f73c7bdff50aba3f8d8424a8dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7fa14d9abfa489e8f3871f964c82f03653af73e17de1a9d69f2f4b59bcc620\",\"dweb:/ipfs/QmQTbXBY1LYBagEcho9CLRmkmHZUUfpW6vYG6xyeyTjGrz\"]}},\"version\":1}"}},"contracts/USVP.sol":{"USVP":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"pauser","type":"address"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"address","name":"limiter","type":"address"},{"internalType":"address","name":"custodian","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20Blocked","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[],"name":"ERC20FreezeAddressZero","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20InsufficientFrozenBalance","type":"error"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"ERC20InsufficientUnfrozenBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ERC20NotCustodian","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensFrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"TokensMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensUnfrozen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"UserBlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"UserUnblocked","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CUSTODIAN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LIMITER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"availableBalance","outputs":[{"internalType":"uint256","name":"available","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"blockUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"blocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"freeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"frozen","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"remainingSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"unblockUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unfreeze","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_addresst_addresst_address_fromMemory":{"entryPoint":259,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256_uint256":{"entryPoint":4545,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_bytes32_uint256_address":{"entryPoint":2238,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":3575,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":2602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_rational_by_uint256":{"entryPoint":3586,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":2814,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":421,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Checkpoint208_storage_ptr":{"entryPoint":5012,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_Checkpoint208_storage_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr":{"entryPoint":5322,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint208":{"entryPoint":3516,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":4625,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":536,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":560,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint208":{"entryPoint":3780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3353,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1447,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":211,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":1412,"id":null,"parameterSlots":2,"returnSlots":0},"constant_CUSTODIAN_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":502,"id":null,"parameterSlots":0,"returnSlots":1},"constant_FALLBACK_SENTINEL":{"entryPoint":2150,"id":null,"parameterSlots":0,"returnSlots":1},"constant_LIMITER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MINTER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_PAUSER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TYPE_HASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_AccessControl":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_EIP712":{"entryPoint":1009,"id":3590,"parameterSlots":4,"returnSlots":0},"constructor_ERC165":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20":{"entryPoint":1767,"id":1248,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Blocklist":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Burnable":{"entryPoint":1245,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Custodian":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Pausable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Permit":{"entryPoint":935,"id":1918,"parameterSlots":3,"returnSlots":0},"constructor_ERC20Votes":{"entryPoint":879,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_IAccessControl":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_IERC165":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_IERC20Permit":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_IERC5267":{"entryPoint":1145,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_IERC5805":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_IERC6372":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_IVotes":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"constructor_Nonces":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":0},"constructor_Pausable":{"entryPoint":1219,"id":2401,"parameterSlots":2,"returnSlots":0},"constructor_USVP":{"entryPoint":580,"id":9723,"parameterSlots":5,"returnSlots":0},"constructor_Votes":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":2686,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_bytes_to_bytes32":{"entryPoint":2621,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_EIP712_to_address":{"entryPoint":998,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_200000000_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_208_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2027,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":486,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":2011,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":1977,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_78f6_to_string":{"entryPoint":476,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_c89e_to_string":{"entryPoint":925,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_rational_by_to_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":987,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":965,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint208_to_uint208":{"entryPoint":5186,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint208_to_uint256":{"entryPoint":3135,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint208":{"entryPoint":3616,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint48":{"entryPoint":5725,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint48_to_uint256":{"entryPoint":5701,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint48_to_uint48":{"entryPoint":5104,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_USVP":{"entryPoint":346,"id":null,"parameterSlots":0,"returnSlots":5},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":1530,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_78f60d831525688ab021004c434eeacb90ba83c4d0af8a1e18901ee28c898f59":{"entryPoint":448,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":900,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2508,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_Checkpoint208_to_struct_Checkpoint":{"entryPoint":5236,"id":null,"parameterSlots":2,"returnSlots":0},"dispatch_internal_in_out":{"entryPoint":5838,"id":null,"parameterSlots":3,"returnSlots":1},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1301,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":3832,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":2432,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint208":{"entryPoint":4362,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":3103,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint48":{"entryPoint":5373,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":146,"id":null,"parameterSlots":2,"returnSlots":0},"fun__push":{"entryPoint":3720,"id":971,"parameterSlots":3,"returnSlots":2},"fun__update":{"entryPoint":2977,"id":9593,"parameterSlots":3,"returnSlots":0},"fun_add":{"entryPoint":3563,"id":985,"parameterSlots":2,"returnSlots":1},"fun_availableBalance":{"entryPoint":3367,"id":9547,"parameterSlots":1,"returnSlots":1},"fun_balanceOf":{"entryPoint":4222,"id":1297,"parameterSlots":1,"returnSlots":1},"fun_blockNumber":{"entryPoint":5001,"id":8961,"parameterSlots":0,"returnSlots":1},"fun_blocked":{"entryPoint":4282,"id":9240,"parameterSlots":1,"returnSlots":1},"fun_buildDomainSeparator":{"entryPoint":2315,"id":3637,"parameterSlots":0,"returnSlots":1},"fun_clock":{"entryPoint":4352,"id":530,"parameterSlots":0,"returnSlots":1},"fun_decimals":{"entryPoint":1999,"id":1275,"parameterSlots":0,"returnSlots":1},"fun_delegates":{"entryPoint":3855,"id":657,"parameterSlots":1,"returnSlots":1},"fun_frozen":{"entryPoint":4255,"id":9438,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":1821,"id":256,"parameterSlots":2,"returnSlots":1},"fun_hasRole":{"entryPoint":2455,"id":80,"parameterSlots":2,"returnSlots":1},"fun_insert":{"entryPoint":5396,"id":8282,"parameterSlots":3,"returnSlots":2},"fun_latest":{"entryPoint":4388,"id":8107,"parameterSlots":1,"returnSlots":1},"fun_maxSupply":{"entryPoint":3154,"id":2056,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":2042,"id":1551,"parameterSlots":2,"returnSlots":0},"fun_moveDelegateVotes":{"entryPoint":3888,"id":899,"parameterSlots":3,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":2229,"parameterSlots":0,"returnSlots":1},"fun_paused":{"entryPoint":5689,"id":2426,"parameterSlots":0,"returnSlots":1},"fun_push":{"entryPoint":4477,"id":7910,"parameterSlots":3,"returnSlots":2},"fun_requireNotPaused":{"entryPoint":4510,"id":2438,"parameterSlots":0,"returnSlots":0},"fun_subtract":{"entryPoint":3820,"id":999,"parameterSlots":2,"returnSlots":1},"fun_toShortString":{"entryPoint":2697,"id":2544,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":2162,"id":2642,"parameterSlots":2,"returnSlots":1},"fun_toUint208":{"entryPoint":3644,"id":5631,"parameterSlots":1,"returnSlots":1},"fun_toUint48":{"entryPoint":5741,"id":6191,"parameterSlots":1,"returnSlots":1},"fun_totalSupply":{"entryPoint":3123,"id":1284,"parameterSlots":0,"returnSlots":1},"fun_transferVotingUnits":{"entryPoint":3172,"id":821,"parameterSlots":3,"returnSlots":0},"fun_unsafeAccess":{"entryPoint":null,"id":8401,"parameterSlots":2,"returnSlots":1},"fun_update":{"entryPoint":2495,"id":9851,"parameterSlots":3,"returnSlots":0},"fun_update_1518":{"entryPoint":4639,"id":1518,"parameterSlots":3,"returnSlots":0},"fun_update_1868":{"entryPoint":4339,"id":1868,"parameterSlots":3,"returnSlots":0},"fun_update_2110":{"entryPoint":2838,"id":2110,"parameterSlots":3,"returnSlots":0},"fun_update_9337":{"entryPoint":3401,"id":9337,"parameterSlots":3,"returnSlots":0},"fun_update_inner":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":1793,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_whenNotPaused":{"entryPoint":4309,"id":2409,"parameterSlots":3,"returnSlots":0},"panic_error_0x00":{"entryPoint":1257,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":514,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1279,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5024,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x51":{"entryPoint":5816,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":3843,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":2443,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint208":{"entryPoint":4376,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":3111,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint48":{"entryPoint":5384,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_Checkpoint208__dyn_ptr":{"entryPoint":5046,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_uint256":{"entryPoint":1398,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_78f60d831525688ab021004c434eeacb90ba83c4d0af8a1e18901ee28c898f59":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_1_shift":{"entryPoint":1173,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":1347,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":5089,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":4586,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_6":{"entryPoint":5167,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":1188,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_string_to_string":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint208_to_uint208":{"entryPoint":5208,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint48_to_uint48":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_Checkpoint208_to_struct_Checkpoint":{"entryPoint":5298,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":1368,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":226,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"61016060405234620000775762000023620000196200015a565b9392909262000244565b60405161358e620016fa823960805181611d84015260a05181611db1015260c05181611d49015260e05181612491015261010051816124700152610120518161225701526101405181612284015261358e90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000b457604052565b6200007c565b90620000d1620000c960405190565b928362000092565b565b6001600160a01b031690565b90565b6001600160a01b038116036200007757565b90505190620000d182620000e2565b919060a08382031262000077576200011c8184620000f4565b926200012c8260208301620000f4565b92620000df620001408460408501620000f4565b936080620001528260608701620000f4565b9401620000f4565b6200017d62004cc8803803806200017181620000ba565b92833981019062000103565b9091929394565b6001600160401b038111620000b457602090601f01601f19160190565b0190565b90620001bb620001b58362000184565b620000ba565b918252565b620001cc6004620001a5565b630555356560e41b602082015290565b620000df620001c0565b620000df620000df620000df9290565b620000df6000620001e6565b634e487b7160e01b600052601160045260246000fd5b60ff16604d81116200022a57600a0a90565b62000202565b818102929181159184041417156200022a57565b6200030e92620002be6200033696959362000296620002e694620002866200026b620001dc565b62000275620001dc565b6200027f620001dc565b916200036f565b62000290620001f6565b6200071d565b507f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200071d565b507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66200071d565b507ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c6200071d565b507fe28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b96200071d565b50620000d162000368620003536200034d620007cf565b62000218565b62000362630bebc200620001e6565b62000230565b33620007fa565b620000d19283928392839283929091620003a7565b620003906001620001a5565b603160f81b602082015290565b620000df62000384565b90620000d19291620003b86200039d565b620000d1939291620003f1565b620000df90620000d3906001600160a01b031682565b620000df90620003c5565b620000df90620003db565b6200040662000446946200042b939462000479565b6200041360098262000872565b6101205262000424600a8462000872565b6101405290565b6200043f62000438825190565b9160200190565b2060e05290565b6200045362000438825190565b20610100524660a052620004666200090b565b6080526200047430620003e6565b60c052565b620000d1918291829182918291829182918291829190620004c3565b9060ff905b9181191691161790565b90620004b7620000df620004bf92151590565b825462000495565b9055565b90620004cf91620004dd565b620000d160006005620004a4565b90620000d191620006e7565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000538575b60208310146200053257565b620004ff565b91607f169162000526565b9160001960089290920291821b911b6200049a565b91906200056d620000df620004bf93620001e6565b90835462000543565b620000d19160009162000558565b81811062000590575050565b80620005a0600060019362000576565b0162000584565b9190601f8111620005b757505050565b620005cb620000d193600052602060002090565b906020601f840181900483019310620005ef575b6020601f90910104019062000584565b9091508190620005df565b9062000604815190565b906001600160401b038211620000b4576200062c8262000625855462000515565b85620005a7565b602090601f83116001146200066b57620004bf9291600091836200065f575b5050600019600883021c1916906002021790565b0151905038806200064b565b601f198316916200068185600052602060002090565b9260005b818110620006c257509160029391856001969410620006a8575b50505002019055565b01516000196008601f8516021c191690553880806200069f565b9193602060018192878701518155019501920162000685565b90620000d191620005fa565b90620006f9620000d1926003620006db565b6004620006db565b905b600052602052604060002090565b906200070390620003e6565b620007316200072d838362000997565b1590565b15620007b2576200075e6001620007588460006200075186600662000701565b0162000711565b620004a4565b6200077d620007766200076f339390565b93620003e6565b91620003e6565b917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d620007a960405190565b600090a4600190565b5050600090565b620007c9620000df620000df9290565b60ff1690565b620000df6012620007b9565b620000d3620000df620000df9290565b620000df90620007db565b9052565b9190620008086000620007eb565b926001600160a01b0384166001600160a01b038216146200082f57620000d19293620009bf565b62000862846200083e60405190565b63ec442f0560e01b8152918291600483016001600160a01b03909116815260200190565b0390fd5b620000df60ff620001e6565b805162000888620008846020620001e6565b9190565b10156200089b57620000df915062000a89565b6000620008a9620008b09390565b01620006db565b620000df620000df62000866565b90959492620000d194620008f5620008fc92620008ee608096620008e760a088019c6000890152565b6020870152565b6040850152565b6060830152565b01906001600160a01b03169052565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200096f6200093a60e05190565b6101005190620009626200094e30620003e6565b6040519586946020860194469286620008be565b9081038252038262000092565b6200097c62000438825190565b2090565b620000df90620007c9565b620000df905462000980565b620000df91600062000751620009b993620009b0600090565b50600662000701565b6200098b565b90620000d1929162000b16565b60005b838110620009e05750506000910152565b8181015183820152602001620009cf565b62000a1662000a20602093620001a19362000a0a815190565b80835293849260200190565b95869101620009cc565b601f01601f191690565b6020808252620000df92910190620009f1565b62000a5962000a5562000a4e835190565b9260200190565b5190565b906020811062000a67575090565b62000a7a90600019906020036008021b90565b1690565b620000df90620001e6565b8062000a93825190565b62000aa362000884601f620001e6565b1162000ad85750620000df8162000ad162000acc62000ac6620000df9562000a3d565b62000a7e565b915190565b17620001e6565b620008629062000ae760405190565b63305a27a960e01b81529182916004830162000a2a565b908152604081019291620000d19160200152565b0152565b92919062000b2682828662000ba1565b62000b36620000d36000620007eb565b6001600160a01b0385161462000b53575b620000d1929362000c64565b62000b5d62000c33565b9362000b6862000c52565b9485811162000b7a5750935062000b47565b85906200086262000b8a60405190565b630e58ae9360e11b81529283926004840162000afe565b92919062000bb4620000d36000620007eb565b6001600160a01b03851614158062000c0b575b62000bd857620000d1929362000d49565b620008628462000be760405190565b6314884b4960e01b8152918291600483016001600160a01b03909116815260200190565b5062000c178462000d27565b821162000bc7565b620000df9081565b620000df905462000c1f565b620000df600262000c27565b620000df9081906001600160d01b031681565b620000df6001600160d01b0362000c3f565b9062000cc662000cbf620000d1949362000ca962000c836000620007eb565b6001600160a01b0381166001600160a01b0384161462000cf1576001600160a01b031690565b6001600160a01b0385161462000ccd5762000f0f565b9162000f0f565b9062000f30565b62000ce962000cdc8662000e3c565b600e5b60025b9062000e88565b505062000f0f565b62000d0b62000d008862000e3c565b600e5b600162000ce2565b50506001600160a01b031690565b919082039182116200022a57565b620000df9062000d4262000d3b826200107e565b916200109f565b9062000d19565b9291909262000d5881620010ba565b62000dad5762000d6884620010ba565b62000d7a5792620000d19293620010f3565b620008628462000d8960405190565b635ff1c9b960e11b8152918291600483016001600160a01b03909116815260200190565b620008629062000d8960405190565b62000dd8906001600160d01b03165b916001600160d01b031690565b01906001600160d01b0382116200022a57565b620000df919062000dbc565b620007f690620007b9565b916020620000d192949362000b126040820196600083019062000df7565b62000e30620000df620000df9290565b6001600160d01b031690565b62000e4e6001600160d01b0362000c3f565b811162000e6057620000df9062000e20565b620008629062000e6f60405190565b6306dfcc6560e41b815291829160d06004840162000e02565b9062000eb962000ec09362000e9b600090565b5062000ea662001100565b9262000eb28562001124565b90620016ce565b916200117d565b9091565b62000ed8906001600160d01b031662000dcb565b9003906001600160d01b0382116200022a57565b620000df919062000ec4565b620000df90620000d3565b620000df905462000ef8565b62000f2a620000df9162000f21600090565b50600c62000711565b62000f03565b9091906001600160a01b0383166001600160a01b03821614158062001069575b62000f5a57505050565b62000f949062000f6b6000620007eb565b906001600160a01b0382166001600160a01b0382160362001013575b506001600160a01b031690565b6001600160a01b0383160362000fa8575050565b8162000ff56200077662000fe660008051602062004ca88339815191529462000d036200088462000fdf62000fee99600d62000711565b9262000e3c565b959062000c3f565b9462000c3f565b926200100e6200100460405190565b9283928362000afe565b0390a2565b60008051602062004ca883398151915281620010506200077662000fe66200104162000fee96600d62000711565b62000cdf620008848b62000e3c565b926200105f6200100460405190565b0390a23862000f87565b50620010766000620001e6565b821162000f50565b62001099620000df9162001090600090565b50600062000711565b62000c27565b62001099620000df91620010b1600090565b50600862000711565b620009b9620000df91620010cc600090565b50600762000711565b90620000d19291620010e66200119e565b90620000d192916200121f565b90620000d19291620010d5565b620000df62001389565b620000df9060301c62000e30565b620000df90546200110a565b8054906000906200113582620001e6565b8303620011495750620000df915062000e20565b620000df926200116a62000884846200117694019262000d426001620001e6565b60005260206000200190565b0162001118565b9062001198600062000ec0949362001193600090565b500190565b62001514565b620011a862001639565b620011af57565b60405163d93c066560e01b8152600490fd5b6001600160a01b039091168152606081019392620000d192909160409162000b12906020830152565b90600019906200049a565b9062001209620000df620004bf92620001e6565b8254620011ea565b919082018092116200022a57565b8160006200122d81620007eb565b6001600160a01b0381166001600160a01b03851603620013035760008051602062004c8883398151915293620012d793620012bf936200128e6200076f94620000d3620012868c62001280600262000c27565b62001211565b6002620011f5565b6001600160a01b03831603620012dc575050620012b96200128688620012b5600262000c27565b0390565b620003e6565b93620012ca60405190565b9182918290815260200190565b0390a3565b620012b991620012ec9162000711565b620012fc89620001a18362000c27565b90620011f5565b9091506200131662001099848462000711565b858110620013625760008051602062004c888339815191529385620012d7946200128e620012bf95620000d3620013508c6200076f980390565b6200135c878662000711565b620011f5565b8362000862876200137260405190565b63391434e360e21b815293849360048501620011c1565b620000df436200166d565b620000df6040620000ba565b634e487b7160e01b600052603260045260246000fd5b8054821015620013db57620013d2600191600052602060002090565b91020190600090565b620013a0565b9065ffffffffffff906200049a565b62001408620000df620000df9265ffffffffffff1690565b65ffffffffffff1690565b9062001427620000df620004bf92620013f0565b8254620013e1565b9065ffffffffffff199060301b6200049a565b620000df9062000e30906001600160d01b031682565b906200146c620000df620004bf9262001442565b82546200142f565b620000d191620014ab906020906200149d62001496825165ffffffffffff1690565b8562001413565b01516001600160d01b031690565b9062001458565b9190620014c457620000d19162001474565b620004e9565b9081549168010000000000000000831015620000b45782620014f6916001620000d195018155620013b6565b90620014b2565b620000df9062001408565b620000df9054620014fd565b9192919081546000906200152882620001e6565b811115620015f4576200155362001546839262000d426001620001e6565b8560005260206000200190565b016200155f8162001508565b916200156b8262001118565b9465ffffffffffff851665ffffffffffff851611620015e257879365ffffffffffff868116911603620015a657505062000884925062001458565b91509150620015cd6200088493620015bd62001394565b9384019065ffffffffffff169052565b6001600160d01b0386166020830152620014ca565b604051632520601d60e01b8152600490fd5b5090620016339062000884936200161e6200160e62001394565b65ffffffffffff90931685840152565b6001600160d01b0387166020830152620014ca565b62000e20565b620000df60056200098b565b620000df620000df620000df9265ffffffffffff1690565b62001408620000df620000df9290565b6200167e65ffffffffffff62001645565b81116200169057620000df906200165d565b62000862906200169f60405190565b6306dfcc6560e41b815291829160306004840162000e02565b634e487b7160e01b600052605160045260246000fd5b91909180600114620016ed57600203620016b857620000df9162000eec565b50620000df9162000deb56fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461032257806306fdde031461031d578063095ea7b31461031857806318160ddd1461031357806323b872dd1461030e578063248a9ca31461030957806324bce60c146103045780632f2ff15d146102ff578063313ce567146102fa57806332cb6b0c146102f55780633644e515146102f057806336568abe146102eb57806339d319e5146102e65780633a46b1a8146102e15780633da01325146102dc5780633f4ba83a146102d757806340c10f19146102d257806342966c68146102cd5780634bf5d7e9146102c8578063587cde1e146102c35780635c19a95c146102be5780635c975abb146102b95780636fcfff45146102b457806370a08231146102af57806379cc6790146102aa5780637b46b80b146102a55780637ecebe00146102a05780638456cb591461029b57806384b0196e146102965780638e539e8c1461029157806391d148541461028c57806391ddadf41461028757806395d89b41146102825780639ab24eb01461027d578063a0821be314610278578063a217fddf14610273578063a9059cbb1461026e578063b3de421414610269578063c3cda52014610264578063c79445d01461025f578063d05166501461025a578063d505accf14610255578063d539139314610250578063d547741f1461024b578063da0239a614610246578063dd62ed3e14610241578063e59621951461023c578063e63ab1e9146102375763f1127ed80361032757610d30565b610c90565b610c75565b610c59565b610c22565b610c09565b610bd0565b610bb1565b610b37565b610afe565b610adf565b610a3d565b610a21565b610a06565b6109d9565b6109be565b6109a3565b61096f565b610953565b610938565b610904565b61081a565b6107ff565b6107e6565b6107cd565b6107b2565b610780565b610765565b61074d565b610718565b6106fd565b6106e5565b6106cc565b6106b4565b61069c565b610680565b610668565b61063b565b610620565b610605565b6105ac565b610593565b610552565b610537565b610507565b6104b2565b610496565b610411565b610369565b600080fd5b6001600160e01b031981165b0361032757565b9050359061034c8261032c565b565b90602082820312610327576103629161033f565b90565b9052565b346103275761039661038461037f36600461034e565b610dd9565b60405191829182901515815260200190565b0390f35b600091031261032757565b60005b8381106103b85750506000910152565b81810151838201526020016103a8565b6103e96103f26020936103fc936103dd815190565b80835293849260200190565b958691016103a5565b601f01601f191690565b0190565b6020808252610362929101906103c8565b346103275761042136600461039a565b61039661042c610f48565b60405191829182610400565b6001600160a01b031690565b6001600160a01b038116610338565b9050359061034c82610444565b80610338565b9050359061034c82610460565b91906040838203126103275761036290602061048f8286610453565b9401610466565b34610327576103966103846104ac366004610473565b90610f52565b34610327576104c236600461039a565b6103966104cd610f73565b6040515b9182918290815260200190565b9091606082840312610327576103626104f78484610453565b93604061048f8260208701610453565b346103275761039661038461051d3660046104de565b91610f7d565b906020828203126103275761036291610466565b34610327576103966104cd61054d366004610523565b610fa4565b346103275761056b610565366004610473565b90611130565b604051005b91906040838203126103275761036290602061058c8286610466565b9401610453565b346103275761056b6105a6366004610570565b9061115d565b34610327576105bc36600461039a565b6103966105c761117a565b6040519182918260ff909116815260200190565b6103626103626103629290565b6103626b033b2e3c9fd0803ce80000006105db565b6103626105e8565b346103275761061536600461039a565b6103966104cd6105fd565b346103275761063036600461039a565b6103966104cd611184565b346103275761056b61064e366004610570565b9061118c565b906020828203126103275761036291610453565b346103275761056b61067b366004610654565b6111f6565b34610327576103966104cd610696366004610473565b90611226565b346103275761056b6106af366004610654565b6112d4565b34610327576106c436600461039a565b61056b611311565b346103275761056b6106df366004610473565b90611438565b346103275761056b6106f8366004610523565b611442565b346103275761070d36600461039a565b61039661042c6114d4565b346103275761039661073361072e366004610654565b611533565b604051918291826001600160a01b03909116815260200190565b346103275761056b610760366004610654565b61154f565b346103275761077536600461039a565b610396610384611571565b346103275761039661079b610796366004610654565b61157b565b6040519182918263ffffffff909116815260200190565b34610327576103966104cd6107c8366004610654565b611584565b346103275761056b6107e0366004610473565b906115a0565b346103275761056b6107f9366004610473565b90611673565b34610327576103966104cd610815366004610654565b61167d565b346103275761082a36600461039a565b61056b6116ba565b9061085261084b610841845190565b8084529260200190565b9260200190565b9060005b8181106108635750505090565b9091926108806108796001928651815260200190565b9460200190565b929101610856565b939591946108e06108d86108f7956108ca6108f0956103629c9a6108bd60e08c019260008d01906001600160f81b0319169052565b8a820360208c01526103c8565b9088820360408a01526103c8565b976060870152565b6001600160a01b03166080850152565b60a0830152565b60c0818403910152610832565b346103275761091436600461039a565b61039661091f61170f565b9361092f97959793919360405190565b97889788610888565b34610327576103966104cd61094e366004610523565b611755565b3461032757610396610384610969366004610570565b9061178d565b346103275761097f36600461039a565b61039661098a6117ad565b6040519182918265ffffffffffff909116815260200190565b34610327576109b336600461039a565b61039661042c6117b5565b34610327576103966104cd6109d4366004610654565b6117bf565b34610327576103966104cd6109ef366004610654565b6117e1565b61036260006105db565b6103626109f4565b3461032757610a1636600461039a565b6103966104cd6109fe565b3461032757610396610384610a37366004610473565b906117fd565b3461032757610a4d36600461039a565b6103967ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c6104cd565b60ff8116610338565b9050359061034c82610a76565b909160c08284031261032757610aa28383610453565b92610ab08160208501610466565b92610abe8260408301610466565b92610362610acf8460608501610a7f565b9360a061048f8260808701610466565b346103275761056b610af2366004610a8c565b9493909392919261183e565b3461032757610b0e36600461039a565b6103967fe28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b96104cd565b34610327576103966104cd610b4d366004610654565b6118fb565b60e08183031261032757610b668282610453565b92610b748360208401610453565b92610b828160408501610466565b92610b908260608301610466565b92610362610ba18460808501610a7f565b9360c061048f8260a08701610466565b346103275761056b610bc4366004610b52565b95949094939193611992565b3461032757610be036600461039a565b6103967f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66104cd565b346103275761056b610c1c366004610570565b90611a8d565b3461032757610c3236600461039a565b6103966104cd611a97565b91906040838203126103275761036290602061058c8286610453565b34610327576103966104cd610c6f366004610c3d565b90611aaa565b3461032757610396610384610c8b366004610654565b611aca565b3461032757610ca036600461039a565b6103967f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104cd565b63ffffffff8116610338565b9050359061034c82610cc9565b919060408382031261032757610362906020610cfe8286610453565b9401610cd5565b60408101929161034c9190805165ffffffffffff1682526020908101516001600160d01b0316910152565b3461032757610396610d4c610d46366004610ce2565b90611b09565b60405191829182610d05565b634e487b7160e01b600052601160045260246000fd5b610d89906001600160d01b03165b916001600160d01b031690565b01906001600160d01b038211610d9b57565b610d58565b6103629190610d6e565b610dbc906001600160d01b0316610d7c565b9003906001600160d01b038211610d9b57565b6103629190610daa565b637965db0b60e01b6001600160e01b0319821614908115610df8575090565b61036291506001600160e01b0319166301ffc9a760e01b1490565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610e49575b6020831014610e4457565b610e13565b91607f1691610e39565b80546000939291610e70610e6683610e29565b8085529360200190565b9160018116908115610ec25750600114610e8957505050565b610e9c9192939450600052602060002090565b916000925b818410610eae5750500190565b805484840152602090930192600101610ea1565b92949550505060ff1916825215156020020190565b9061036291610e53565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610f1957604052565b610ee1565b9061034c610f3892610f2f60405190565b93848092610ed7565b0383610ef7565b61036290610f1e565b6103626003610f3f565b610f5d919033611b1c565b600190565b6103629081565b6103629054610f62565b6103626002610f69565b610f5d929190610f8f83335b83611b50565b611bb5565b905b600052602052604060002090565b6001610fbd61036292610fb5600090565b506006610f94565b01610f69565b90610fd4610fd033611c62565b1590565b610fe15761034c91611068565b60405163bb4be5f360e01b8152600490fd5b0390fd5b6104386103626103629290565b61036290610ff7565b61036290610438906001600160a01b031682565b6103629061100d565b61036290611021565b90610f969061102a565b90600019905b9181191691161790565b9061105d610362611064926105db565b825461103d565b9055565b6110756104386000611004565b6001600160a01b0382161461111e5761108d816117e1565b8290611098565b9190565b106110ed576110e86110de826110d9856110d47fa065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45966008611033565b61104d565b61102a565b926104d160405190565b0390a2565b610ff3906110fa60405190565b6314884b4960e01b8152918291600483016001600160a01b03909116815260200190565b60405163959d408b60e01b8152600490fd5b9061034c91610fc3565b9061034c9161115061114b82610fa4565b611c8c565b9061115a91611cb7565b50565b9061034c9161113a565b6111746103626103629290565b60ff1690565b6103626012611167565b610362611d33565b9061119633610438565b6001600160a01b038216036111ae5761115a91611dd7565b60405163334bd91960e11b8152600490fd5b61034c906111ed7ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c611c8c565b61115a90611e34565b61034c906111c0565b6103626103626103629265ffffffffffff1690565b6103629081906001600160d01b031681565b61122e6117ad565b611237816111ff565b83101561126857506103629161125d61125761036261126394600d611033565b91611ebd565b90611f3e565b611214565b82610ff361127560405190565b637669fc0f60e11b81529283926004840190815265ffffffffffff909116602082015260400190565b61034c906112cb7ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c611c8c565b61115a9061201d565b61034c9061129e565b6113067f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611c8c565b61034c61034c6120b5565b61034c6112dd565b61034c91906113477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6611c8c565b6113bc565b91908201809211610d9b57565b1561136057565b60405162461bcd60e51b815260206004820152601960248201527f555356503a204d617820737570706c79206578636565646564000000000000006044820152606490fd5b90815260408101929161034c9160200152565b0152565b7f2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb475906114076113f2846113ed610f73565b61134c565b6114006110946103626105e8565b1115611359565b61141183826120bd565b61142261141c610f73565b9161102a565b926110e861142f60405190565b928392836113a5565b9061034c91611319565b61034c90336120fa565b6120fa565b9061034c61145e60405190565b9283610ef7565b67ffffffffffffffff8111610f1957602090601f01601f19160190565b9061149461148f83611465565b611451565b918252565b6114a3601d611482565b7f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b610362611499565b6114dc6117ad565b6115016114f56114ea612138565b65ffffffffffff1690565b9165ffffffffffff1690565b0361150e576103626114cc565b6040516301bfc1c560e61b8152600490fd5b61036290610438565b6103629054611520565b61154a61036291611542600090565b50600c611033565b611529565b61034c9033612167565b612167565b61036290611174565b610362905461155e565b6103626005611567565b610362906121e1565b61159b61036291611593600090565b506000611033565b610f69565b61034c919061144c8233610f89565b906115bc610fd033611c62565b610fe15761034c916115d6565b91908203918211610d9b57565b6115e36104386000611004565b6001600160a01b0382161461111e576115fb816118fb565b828110611642576110de7f9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6926110d9611637866110e8956115c9565b6110d4836008611033565b610ff38261164f60405190565b63168ecf9160e31b8152918291600483016001600160a01b03909116815260200190565b9061034c916115af565b61036290612200565b6116af7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611c8c565b61034c61034c61224a565b61034c611686565b67ffffffffffffffff8111610f195760208091020190565b9061149461148f836116c2565b369037565b9061034c6117026116fc846116da565b936116c2565b601f1901602084016116e7565b611717612252565b9061172061227f565b9061172a3061102a565b61173460006105db565b61174661174160006105db565b6116ec565b600f60f81b9594934693929190565b61175d6117ad565b611766816111ff565b82101561178057506112636103629161125d611257600e90565b90610ff361127560405190565b6103629160006117a26117a893610fb5600090565b01611033565b611567565b610362612138565b6103626004610f3f565b6112636117dc610362610362936117d4600090565b50600d611033565b6122aa565b610362906117f76117f182611584565b916118fb565b906115c9565b610f5d919033611bb5565b6113b861034c94611837606094989795611827608086019a6000870152565b6001600160a01b03166020850152565b6040830152565b919594919390928642116118d457916118cd91611559936118c8866118b08961034c9b9c6118a461188c7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf90565b9161189660405190565b958694602086019485611808565b90810382520382610ef7565b6118c26118bb825190565b9160200190565b206122e5565b61230e565b918261234c565b610ff3876118e160405190565b632341d78760e11b81529182916004830190815260200190565b61159b6103629161190a600090565b506008611033565b91946119616113b89298979561195a60a09661194a61034c9a61193a60c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b6001600160a01b03909116815260408101929161034c916020905b01906001600160a01b03169052565b9695929491949390936119a28190565b4211611a4b57906118c8856118b08a611a039796956118a46119e17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c990565b916119eb84612383565b8d6119f560405190565b978896602088019687611912565b6001600160a01b0385166001600160a01b03821603611a27575061034c9293611b1c565b8490610ff3611a3560405190565b6325c0072360e11b815292839260048401611968565b610ff390611a5860405190565b63313c898160e11b81529182916004830190815260200190565b9061034c91611a8361114b82610fa4565b9061115a91611dd7565b9061034c91611a72565b610362611aa26105e8565b6117f7610f73565b61036291611ac561159b92611abd600090565b506001611033565b611033565b6117a861036291611ad9600090565b506007611033565b6103626040611451565b611af3611ae1565b906000825260006020830152565b610362611aeb565b9061036291611b16611b01565b506123aa565b9160019161034c936123c2565b6001600160a01b03909116815260608101939261034c9290916040916113b8906020830152565b91611b5b8284611aaa565b6000198103611b6b575b50505050565b818110611b915791611b82611b8894926000940390565b916123c2565b38808080611b65565b82610ff383611b9f60405190565b637dc7a0d960e11b815293849360048501611b29565b929190611bc26000611004565b936001600160a01b0385166001600160a01b03821614611c31576001600160a01b0385166001600160a01b03831614611c005761034c9394506123ce565b610ff385611c0d60405190565b63ec442f0560e01b8152918291600483016001600160a01b03909116815260200190565b610ff385611c3e60405190565b634b637e8f60e11b8152918291600483016001600160a01b03909116815260200190565b610362907fe28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b961178d565b61034c9033906123d9565b9060ff90611043565b90611cb061036261106492151590565b8254611c97565b611cc4610fd0838361178d565b15611d2c57611ce46001611cdf8460006117a2866006610f94565b611ca0565b611cf861141c611cf2339390565b9361102a565b917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d611d2360405190565b600090a4600190565b5050600090565b611d3c3061102a565b611d766001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916001600160a01b031690565b1480611dae575b15611da6577f000000000000000000000000000000000000000000000000000000000000000090565b61036261244a565b507f00000000000000000000000000000000000000000000000000000000000000004614611d7d565b611de1828261178d565b15611d2c57611dfb6000611cdf84826117a2866006610f94565b611e0961141c611cf2339390565b917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b611d2360405190565b611e3d81611aca565b9081611e47575090565b806110d96000611cdf611e5b946007611033565b7f798117ec059ab8d319461ef2502b1f9d8a47cd966bfd1f3e23b6f26c30bebb77611e8560405190565b600090a290565b61036590611167565b91602061034c9294936113b860408201966000830190611e8c565b6114ea6103626103629290565b611ecc65ffffffffffff6111ff565b8111611edb5761036290611eb0565b610ff390611ee860405190565b6306dfcc6560e41b8152918291603060048401611e95565b610362906114ea565b6103629054611f00565b6103629060301c5b6001600160d01b031690565b6103629054611f13565b611f1b6103626103629290565b8054611f6f90600092611f50846105db565b8483611f5c60056105db565b8111611fb1575b509091015b9485612786565b611f78826105db565b8103611f8957506103629150611f31565b61036292611f9e611fab926117f760016105db565b9060005260206000200190565b01611f27565b806117f7611fbe92612535565b611fdf6114ea83611fd9848883015b60005260206000200190565b01611f09565b65ffffffffffff89161015611ffe57611f6892939450935b9291611f63565b611f6892506120179061201160016105db565b9061134c565b92611ff7565b61202681611aca565b908115612031575090565b806110d96001611cdf612045946007611033565b7fca86d8c91ca6d00afd863578cc633a0901fad724592f89649629fe65f61410d2611e8560405190565b6120776127fc565b61034c61208660006005611ca0565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120b033610733565b0390a1565b61034c61206f565b91906120c96000611004565b926001600160a01b0384166001600160a01b038216146120ed5761034c92936123ce565b610ff384611c0d60405190565b91906121066000611004565b926001600160a01b0384166001600160a01b0382161461212b579261034c92936123ce565b610ff384611c3e60405190565b61036243611ebd565b906001600160a01b0390611043565b906121606103626110649261102a565b8254612141565b61034c916121db61217783611533565b9261218c8361218783600c611033565b612150565b6121958161102a565b61219e8561102a565b6121a78561102a565b917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f6121d260405190565b600090a461281f565b91612828565b6121fb6121f6610362610362936117d4600090565b612969565b6129a6565b610362906129e7565b6122116129f6565b61034c61222060016005611ca0565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120b033610733565b61034c612209565b6103627f000000000000000000000000000000000000000000000000000000000000000060095b90612ab2565b6103627f0000000000000000000000000000000000000000000000000000000000000000600a612279565b8054906000906122b9826105db565b83036122ca57506103629150611f31565b61036292611fcd61109484611fab9401926117f760016105db565b610362906122f1611d33565b6042916040519161190160f01b8352600283015260228201522090565b91610362939161232693612320600090565b50612b19565b90929192612c14565b6001600160a01b03909116815260408101929161034c9160200152565b61235581612383565b91829003612361575050565b610ff361236d60405190565b6301d4b62360e61b81529283926004840161232f565b6123929060005b50600b611033565b61036261239e82610f69565b91600183015b9061104d565b906123bd610362610362936117d4611b01565b612d62565b9061034c939291612d81565b9061034c9291612dcd565b906123e7610fd0828461178d565b6123ef575050565b610ff36123fb60405190565b63e2517d3f60e01b81529283926004840161232f565b9095949261034c946124436119839261243c60809661243560a088019c6000890152565b6020870152565b6040850152565b6060830152565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6124cf7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006118a46124bc3061102a565b6040519586946020860194469286612411565b6124da6118bb825190565b2090565b610362906124f26110946103629460ff1690565b901c90565b6103629061250b6110946103629460ff1690565b901b90565b634e487b7160e01b600052601260045260246000fd5b8115612530570490565b612510565b6001612540816105db565b821115612782579061268d61268861036261268161264d61264d61267761265261264d61266d61264d61264d8c6103fc6103629f61264361264d61265c6126669361263361262d88612591846105db565b9061259f600160801b6105db565b8b101561275a575b6125b4600160401b6105db565b811015612738575b6125ca6401000000006105db565b811015612716575b6125de620100006105db565b8110156126f4575b6125f16101006105db565b8110156126d2575b61260360106105db565b8110156126aa575b61261861109460046105db565b1015612692575b61262960036105db565b0290565b91611167565b9e8f9c8d809b81978280966124de565b6103fc818d612526565b6124de565b6103fc818a612526565b6103fc8187612526565b8092612526565b6103fc818c612526565b6103fc8189612526565b8094612526565b821190565b900390565b6126a59061269f85611167565b906124f7565b61261f565b6126c16126cc916126bb6004611167565b906124de565b9161269f6002611167565b9061260b565b6126e36126ee916126bb6008611167565b9161269f6004611167565b906125f9565b612705612710916126bb6010611167565b9161269f6008611167565b906125e6565b612727612732916126bb6020611167565b9161269f6010611167565b906125d2565b612749612754916126bb6040611167565b9161269f6020611167565b906125bc565b5061277c61277161276b6080611167565b8c6124de565b9161269f6040611167565b906125a7565b5090565b93919092612792600090565b505b808210156127f4576127a68183612e47565b906127bd6000611fd9848960005260206000200190565b6127ce65ffffffffffff87166114f5565b11156127dd5750915b91612794565b9291506127ee9061201160016105db565b906127d7565b925050915090565b612807610fd0611571565b61280d57565b604051638dfc202b60e01b8152600490fd5b61036290611584565b9091906001600160a01b0383166001600160a01b038216141580612957575b61285057505050565b6128869061285e6000611004565b906001600160a01b0382166001600160a01b038216036128f5575b506001600160a01b031690565b6001600160a01b03831603612899575050565b8161142261141c6128e87fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724946128df6110946128d96128ef99600d611033565b92612e6c565b60015b90612eb0565b9590611214565b94611214565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248161294161141c6128e861292e6128ef96600d611033565b61293a6110948b612e6c565b60026128e2565b9261294e61142f60405190565b0390a238612879565b5061296260006105db565b8211612847565b600061036291612977600090565b50015490565b6103626103626103629263ffffffff1690565b61299d6103626103629290565b63ffffffff1690565b6129b363ffffffff61297d565b81116129c25761036290612990565b610ff3906129cf60405190565b6306dfcc6560e41b8152918291602060048401611e95565b61159b6103629161238a600090565b6129fe611571565b612a0457565b60405163d93c066560e01b8152600490fd5b61036260ff6105db565b80546000939291612a33610e6683610e29565b9160018116908115610ec25750600114612a4c57505050565b612a5f9192939450600052602060002090565b916000925b818410612a715750500190565b805484840152602090930192600101612a64565b9061036291612a20565b9061034c610f3892612aa060405190565b93848092612a85565b61036290612a8f565b9081612ac2611094610362612a16565b14612ad1575061036290612ef9565b6103629150612aa9565b610362906105db565b6113b861034c94611837606094989795612b03608086019a6000870152565b60ff166020850152565b6040513d6000823e3d90fd5b9091612b2484612adb565b612b506110947f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06105db565b11612bd15790612b7260209460009493612b6960405190565b94859485612ae4565b838052039060015afa15612bcc57600051600091612b8f83611004565b6001600160a01b0381166001600160a01b03841614612bb85750612bb2836105db565b91929190565b915091612bc4906105db565b909160019190565b612b0d565b505050612bde6000611004565b9160039190565b634e487b7160e01b600052602160045260246000fd5b60041115612c0557565b612be5565b9061034c82612bfb565b612c1e6000612c0a565b612c2782612c0a565b03612c30575050565b612c3a6001612c0a565b612c4382612c0a565b03612c5a5760405163f645eedf60e01b8152600490fd5b612c646002612c0a565b612c6d82612c0a565b03612c9b57610ff3612c7e83612adb565b60405163fce698f760e01b81529182916004830190815260200190565b612cae612ca86003612c0a565b91612c0a565b14612cb65750565b610ff390612cc360405190565b6335e2f38360e21b81529182916004830190815260200190565b634e487b7160e01b600052603260045260246000fd5b8054821015612d1657612d0d600191600052602060002090565b91020190600090565b612cdd565b9061034c612d496000612d2c611ae1565b94611fab612d3b838301611f09565b65ffffffffffff1687840152565b6001600160d01b03166020840152565b61036290612d1b565b610362916000612d7b92612d74611b01565b5001612cf3565b50612d59565b93929190612d8e85611aca565b612d9c5761034c9394612f20565b610ff385612da960405190565b635ff1c9b960e11b8152918291600483016001600160a01b03909116815260200190565b929190612ddb82828661301d565b612de86104386000611004565b6001600160a01b03851614612e02575b61034c929361307b565b612e0a610f73565b93612e1361306b565b94858111612e2357509350612df8565b8590610ff3612e3160405190565b630e58ae9360e11b8152928392600484016113a5565b61201161036292612e56600090565b508083169218612e6660026105db565b90612526565b612e7c6001600160d01b03611214565b8111612e8b5761036290611f31565b610ff390612e9860405190565b6306dfcc6560e41b815291829160d060048401611e95565b90612ed9612edf93612ec0600090565b50612ec96117ad565b92612ed3856122aa565b90613533565b91613114565b9091565b9061034c611702612ef384611482565b93611465565b612f0281613131565b90612f15612f1060206105db565b612ee3565b918252602082015290565b909192612f2d6000611004565b6001600160a01b0381166001600160a01b03841614612fec576001600160a01b0381166001600160a01b03851614612fbb5750612f73846110d485611ac5866001611033565b612f7c57505050565b612fb6612fac611cf27f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361102a565b936104d160405190565b0390a3565b610ff390612fc860405190565b634a1406b160e11b8152918291600483016001600160a01b03909116815260200190565b610ff390612ff960405190565b63e602df0560e01b8152918291600483016001600160a01b03909116815260200190565b92919061302d6104386000611004565b6001600160a01b03851614158061305a575b61304d5761034c9293613175565b610ff3846110fa60405190565b50613064846117e1565b821161303f565b6103626001600160d01b03611214565b906130d36130cd61034c94936130b96130946000611004565b6001600160a01b0381166001600160a01b038416146130f3576001600160a01b031690565b6001600160a01b038516146130d957611533565b91611533565b90612828565b6130ec6130e586612e6c565b600e61293a565b5050611533565b6131066130ff88612e6c565b600e6128df565b50506001600160a01b031690565b9061312c6000612edf9493613127600090565b500190565b6132ba565b61314061314591612782600090565b612adb565b61314f60ff6105db565b1661315a601f6105db565b81116131635790565b604051632cd44ac360e21b8152600490fd5b9291909261318281611aca565b6131ab5761318f84611aca565b61319e579261034c92936133e2565b610ff384612da960405190565b610ff390612da960405190565b634e487b7160e01b600052600060045260246000fd5b9065ffffffffffff90611043565b6114ea6103626103629265ffffffffffff1690565b90613201610362611064926131dc565b82546131ce565b9065ffffffffffff199060301b611043565b61036290611f1b906001600160d01b031682565b9061323e6103626110649261321a565b8254613208565b61034c9161327790602090613269613263825165ffffffffffff1690565b856131f1565b01516001600160d01b031690565b9061322e565b919061328c5761034c91613245565b6131b8565b90815491600160401b831015610f1957826132b491600161034c95018155612cf3565b9061327d565b9192919081546000906132cc826105db565b81111561338b576132f26132e583926117f760016105db565b8560005260206000200190565b016132fc81611f09565b9161330682611f27565b9465ffffffffffff851665ffffffffffff85161161337957879361333165ffffffffffff87166114f5565b03613342575050611094925061322e565b9150915061336561109493613355611ae1565b9384019065ffffffffffff169052565b6001600160d01b0386166020830152613291565b604051632520601d60e01b8152600490fd5b50906133c490611094936133b06133a0611ae1565b65ffffffffffff90931685840152565b6001600160d01b0387166020830152613291565b611f31565b9061034c92916133d76129f6565b9061034c92916133ed565b9061034c92916133c9565b8160006133f981611004565b6001600160a01b0381166001600160a01b0385160361349b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93612fb693612fac9361345b611cf2946104386134548c6113ed6002610f69565b600261104d565b6001600160a01b038316036134815750506110d96134548861347d6002610f69565b0390565b6110d99161348e91611033565b6123a4896103fc83610f69565b9091506134ab61159b8484611033565b8581106134f9577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9385612fb69461345b612fac956104386134ef8c611cf2980390565b6110d48786611033565b83610ff38761350760405190565b63391434e360e21b815293849360048501611b29565b634e487b7160e01b600052605160045260246000fd5b9190918060011461354e5760020361351d5761036291610dcf565b5061036291610da056fea26469706673582212208386d9ed9adf30e66bcdfc5bf711cbd409e21b8c87768b3abb1f2e5f07a7e65464736f6c63430008160033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x77 JUMPI PUSH3 0x23 PUSH3 0x19 PUSH3 0x15A JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH3 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358E PUSH3 0x16FA DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x1D84 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x1DB1 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x1D49 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x2491 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x2470 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x2257 ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x2284 ADD MSTORE PUSH2 0x358E SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0xB4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x7C JUMP JUMPDEST SWAP1 PUSH3 0xD1 PUSH3 0xC9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x92 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH3 0x77 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xD1 DUP3 PUSH3 0xE2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH3 0x77 JUMPI PUSH3 0x11C DUP2 DUP5 PUSH3 0xF4 JUMP JUMPDEST SWAP3 PUSH3 0x12C DUP3 PUSH1 0x20 DUP4 ADD PUSH3 0xF4 JUMP JUMPDEST SWAP3 PUSH3 0xDF PUSH3 0x140 DUP5 PUSH1 0x40 DUP6 ADD PUSH3 0xF4 JUMP JUMPDEST SWAP4 PUSH1 0x80 PUSH3 0x152 DUP3 PUSH1 0x60 DUP8 ADD PUSH3 0xF4 JUMP JUMPDEST SWAP5 ADD PUSH3 0xF4 JUMP JUMPDEST PUSH3 0x17D PUSH3 0x4CC8 DUP1 CODESIZE SUB DUP1 PUSH3 0x171 DUP2 PUSH3 0xBA JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x103 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xB4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x1BB PUSH3 0x1B5 DUP4 PUSH3 0x184 JUMP JUMPDEST PUSH3 0xBA JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH3 0x1CC PUSH1 0x4 PUSH3 0x1A5 JUMP JUMPDEST PUSH4 0x5553565 PUSH1 0xE4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH3 0xDF PUSH3 0x1C0 JUMP JUMPDEST PUSH3 0xDF PUSH3 0xDF PUSH3 0xDF SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xDF PUSH1 0x0 PUSH3 0x1E6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH3 0x22A JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH3 0x202 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH3 0x22A JUMPI JUMP JUMPDEST PUSH3 0x30E SWAP3 PUSH3 0x2BE PUSH3 0x336 SWAP7 SWAP6 SWAP4 PUSH3 0x296 PUSH3 0x2E6 SWAP5 PUSH3 0x286 PUSH3 0x26B PUSH3 0x1DC JUMP JUMPDEST PUSH3 0x275 PUSH3 0x1DC JUMP JUMPDEST PUSH3 0x27F PUSH3 0x1DC JUMP JUMPDEST SWAP2 PUSH3 0x36F JUMP JUMPDEST PUSH3 0x290 PUSH3 0x1F6 JUMP JUMPDEST PUSH3 0x71D JUMP JUMPDEST POP PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x71D JUMP JUMPDEST POP PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x71D JUMP JUMPDEST POP PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH3 0x71D JUMP JUMPDEST POP PUSH32 0xE28434228950B641DBBC0178DE89DAA359A87C6EE0D8399AEACE52A98FE902B9 PUSH3 0x71D JUMP JUMPDEST POP PUSH3 0xD1 PUSH3 0x368 PUSH3 0x353 PUSH3 0x34D PUSH3 0x7CF JUMP JUMPDEST PUSH3 0x218 JUMP JUMPDEST PUSH3 0x362 PUSH4 0xBEBC200 PUSH3 0x1E6 JUMP JUMPDEST PUSH3 0x230 JUMP JUMPDEST CALLER PUSH3 0x7FA JUMP JUMPDEST PUSH3 0xD1 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 PUSH3 0x3A7 JUMP JUMPDEST PUSH3 0x390 PUSH1 0x1 PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH3 0xDF PUSH3 0x384 JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP3 SWAP2 PUSH3 0x3B8 PUSH3 0x39D JUMP JUMPDEST PUSH3 0xD1 SWAP4 SWAP3 SWAP2 PUSH3 0x3F1 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0xD3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x3DB JUMP JUMPDEST PUSH3 0x406 PUSH3 0x446 SWAP5 PUSH3 0x42B SWAP4 SWAP5 PUSH3 0x479 JUMP JUMPDEST PUSH3 0x413 PUSH1 0x9 DUP3 PUSH3 0x872 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x424 PUSH1 0xA DUP5 PUSH3 0x872 JUMP JUMPDEST PUSH2 0x140 MSTORE SWAP1 JUMP JUMPDEST PUSH3 0x43F PUSH3 0x438 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH1 0xE0 MSTORE SWAP1 JUMP JUMPDEST PUSH3 0x453 PUSH3 0x438 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x466 PUSH3 0x90B JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH3 0x474 ADDRESS PUSH3 0x3E6 JUMP JUMPDEST PUSH1 0xC0 MSTORE JUMP JUMPDEST PUSH3 0xD1 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH3 0x4C3 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x4B7 PUSH3 0xDF PUSH3 0x4BF SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x495 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH3 0x4CF SWAP2 PUSH3 0x4DD JUMP JUMPDEST PUSH3 0xD1 PUSH1 0x0 PUSH1 0x5 PUSH3 0x4A4 JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP2 PUSH3 0x6E7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x538 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x532 JUMPI JUMP JUMPDEST PUSH3 0x4FF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x526 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x49A JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x56D PUSH3 0xDF PUSH3 0x4BF SWAP4 PUSH3 0x1E6 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x543 JUMP JUMPDEST PUSH3 0xD1 SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x558 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x590 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x5A0 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x576 JUMP JUMPDEST ADD PUSH3 0x584 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x5B7 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x5CB PUSH3 0xD1 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x5EF JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x584 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x5DF JUMP JUMPDEST SWAP1 PUSH3 0x604 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xB4 JUMPI PUSH3 0x62C DUP3 PUSH3 0x625 DUP6 SLOAD PUSH3 0x515 JUMP JUMPDEST DUP6 PUSH3 0x5A7 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x66B JUMPI PUSH3 0x4BF SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x65F JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x64B JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x681 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x6C2 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x6A8 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x69F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x685 JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP2 PUSH3 0x5FA JUMP JUMPDEST SWAP1 PUSH3 0x6F9 PUSH3 0xD1 SWAP3 PUSH1 0x3 PUSH3 0x6DB JUMP JUMPDEST PUSH1 0x4 PUSH3 0x6DB JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x703 SWAP1 PUSH3 0x3E6 JUMP JUMPDEST PUSH3 0x731 PUSH3 0x72D DUP4 DUP4 PUSH3 0x997 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x7B2 JUMPI PUSH3 0x75E PUSH1 0x1 PUSH3 0x758 DUP5 PUSH1 0x0 PUSH3 0x751 DUP7 PUSH1 0x6 PUSH3 0x701 JUMP JUMPDEST ADD PUSH3 0x711 JUMP JUMPDEST PUSH3 0x4A4 JUMP JUMPDEST PUSH3 0x77D PUSH3 0x776 PUSH3 0x76F CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH3 0x3E6 JUMP JUMPDEST SWAP2 PUSH3 0x3E6 JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH3 0x7A9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x7C9 PUSH3 0xDF PUSH3 0xDF SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0xDF PUSH1 0x12 PUSH3 0x7B9 JUMP JUMPDEST PUSH3 0xD3 PUSH3 0xDF PUSH3 0xDF SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x7DB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x808 PUSH1 0x0 PUSH3 0x7EB JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH3 0x82F JUMPI PUSH3 0xD1 SWAP3 SWAP4 PUSH3 0x9BF JUMP JUMPDEST PUSH3 0x862 DUP5 PUSH3 0x83E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0xDF PUSH1 0xFF PUSH3 0x1E6 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x888 PUSH3 0x884 PUSH1 0x20 PUSH3 0x1E6 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT ISZERO PUSH3 0x89B JUMPI PUSH3 0xDF SWAP2 POP PUSH3 0xA89 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A9 PUSH3 0x8B0 SWAP4 SWAP1 JUMP JUMPDEST ADD PUSH3 0x6DB JUMP JUMPDEST PUSH3 0xDF PUSH3 0xDF PUSH3 0x866 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH3 0xD1 SWAP5 PUSH3 0x8F5 PUSH3 0x8FC SWAP3 PUSH3 0x8EE PUSH1 0x80 SWAP7 PUSH3 0x8E7 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x96F PUSH3 0x93A PUSH1 0xE0 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100 MLOAD SWAP1 PUSH3 0x962 PUSH3 0x94E ADDRESS PUSH3 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH3 0x8BE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH3 0x92 JUMP JUMPDEST PUSH3 0x97C PUSH3 0x438 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x7C9 JUMP JUMPDEST PUSH3 0xDF SWAP1 SLOAD PUSH3 0x980 JUMP JUMPDEST PUSH3 0xDF SWAP2 PUSH1 0x0 PUSH3 0x751 PUSH3 0x9B9 SWAP4 PUSH3 0x9B0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH3 0x701 JUMP JUMPDEST PUSH3 0x98B JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP3 SWAP2 PUSH3 0xB16 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x9E0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9CF JUMP JUMPDEST PUSH3 0xA16 PUSH3 0xA20 PUSH1 0x20 SWAP4 PUSH3 0x1A1 SWAP4 PUSH3 0xA0A DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH3 0x9CC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH3 0xDF SWAP3 SWAP2 ADD SWAP1 PUSH3 0x9F1 JUMP JUMPDEST PUSH3 0xA59 PUSH3 0xA55 PUSH3 0xA4E DUP4 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 LT PUSH3 0xA67 JUMPI POP SWAP1 JUMP JUMPDEST PUSH3 0xA7A SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x8 MUL SHL SWAP1 JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x1E6 JUMP JUMPDEST DUP1 PUSH3 0xA93 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xAA3 PUSH3 0x884 PUSH1 0x1F PUSH3 0x1E6 JUMP JUMPDEST GT PUSH3 0xAD8 JUMPI POP PUSH3 0xDF DUP2 PUSH3 0xAD1 PUSH3 0xACC PUSH3 0xAC6 PUSH3 0xDF SWAP6 PUSH3 0xA3D JUMP JUMPDEST PUSH3 0xA7E JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST OR PUSH3 0x1E6 JUMP JUMPDEST PUSH3 0x862 SWAP1 PUSH3 0xAE7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH3 0xA2A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH3 0xD1 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH3 0xB26 DUP3 DUP3 DUP7 PUSH3 0xBA1 JUMP JUMPDEST PUSH3 0xB36 PUSH3 0xD3 PUSH1 0x0 PUSH3 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH3 0xB53 JUMPI JUMPDEST PUSH3 0xD1 SWAP3 SWAP4 PUSH3 0xC64 JUMP JUMPDEST PUSH3 0xB5D PUSH3 0xC33 JUMP JUMPDEST SWAP4 PUSH3 0xB68 PUSH3 0xC52 JUMP JUMPDEST SWAP5 DUP6 DUP2 GT PUSH3 0xB7A JUMPI POP SWAP4 POP PUSH3 0xB47 JUMP JUMPDEST DUP6 SWAP1 PUSH3 0x862 PUSH3 0xB8A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH3 0xAFE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH3 0xBB4 PUSH3 0xD3 PUSH1 0x0 PUSH3 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO DUP1 PUSH3 0xC0B JUMPI JUMPDEST PUSH3 0xBD8 JUMPI PUSH3 0xD1 SWAP3 SWAP4 PUSH3 0xD49 JUMP JUMPDEST PUSH3 0x862 DUP5 PUSH3 0xBE7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x14884B49 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH3 0xC17 DUP5 PUSH3 0xD27 JUMP JUMPDEST DUP3 GT PUSH3 0xBC7 JUMP JUMPDEST PUSH3 0xDF SWAP1 DUP2 JUMP JUMPDEST PUSH3 0xDF SWAP1 SLOAD PUSH3 0xC1F JUMP JUMPDEST PUSH3 0xDF PUSH1 0x2 PUSH3 0xC27 JUMP JUMPDEST PUSH3 0xDF SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0xDF PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH3 0xC3F JUMP JUMPDEST SWAP1 PUSH3 0xCC6 PUSH3 0xCBF PUSH3 0xD1 SWAP5 SWAP4 PUSH3 0xCA9 PUSH3 0xC83 PUSH1 0x0 PUSH3 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH3 0xCF1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH3 0xCCD JUMPI PUSH3 0xF0F JUMP JUMPDEST SWAP2 PUSH3 0xF0F JUMP JUMPDEST SWAP1 PUSH3 0xF30 JUMP JUMPDEST PUSH3 0xCE9 PUSH3 0xCDC DUP7 PUSH3 0xE3C JUMP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x2 JUMPDEST SWAP1 PUSH3 0xE88 JUMP JUMPDEST POP POP PUSH3 0xF0F JUMP JUMPDEST PUSH3 0xD0B PUSH3 0xD00 DUP9 PUSH3 0xE3C JUMP JUMPDEST PUSH1 0xE JUMPDEST PUSH1 0x1 PUSH3 0xCE2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH3 0x22A JUMPI JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0xD42 PUSH3 0xD3B DUP3 PUSH3 0x107E JUMP JUMPDEST SWAP2 PUSH3 0x109F JUMP JUMPDEST SWAP1 PUSH3 0xD19 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH3 0xD58 DUP2 PUSH3 0x10BA JUMP JUMPDEST PUSH3 0xDAD JUMPI PUSH3 0xD68 DUP5 PUSH3 0x10BA JUMP JUMPDEST PUSH3 0xD7A JUMPI SWAP3 PUSH3 0xD1 SWAP3 SWAP4 PUSH3 0x10F3 JUMP JUMPDEST PUSH3 0x862 DUP5 PUSH3 0xD89 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5FF1C9B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH3 0x862 SWAP1 PUSH3 0xD89 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xDD8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH3 0x22A JUMPI JUMP JUMPDEST PUSH3 0xDF SWAP2 SWAP1 PUSH3 0xDBC JUMP JUMPDEST PUSH3 0x7F6 SWAP1 PUSH3 0x7B9 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH3 0xD1 SWAP3 SWAP5 SWAP4 PUSH3 0xB12 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH3 0xDF7 JUMP JUMPDEST PUSH3 0xE30 PUSH3 0xDF PUSH3 0xDF SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0xE4E PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH3 0xC3F JUMP JUMPDEST DUP2 GT PUSH3 0xE60 JUMPI PUSH3 0xDF SWAP1 PUSH3 0xE20 JUMP JUMPDEST PUSH3 0x862 SWAP1 PUSH3 0xE6F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0xD0 PUSH1 0x4 DUP5 ADD PUSH3 0xE02 JUMP JUMPDEST SWAP1 PUSH3 0xEB9 PUSH3 0xEC0 SWAP4 PUSH3 0xE9B PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH3 0xEA6 PUSH3 0x1100 JUMP JUMPDEST SWAP3 PUSH3 0xEB2 DUP6 PUSH3 0x1124 JUMP JUMPDEST SWAP1 PUSH3 0x16CE JUMP JUMPDEST SWAP2 PUSH3 0x117D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH3 0xED8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH3 0xDCB JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH3 0x22A JUMPI JUMP JUMPDEST PUSH3 0xDF SWAP2 SWAP1 PUSH3 0xEC4 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0xD3 JUMP JUMPDEST PUSH3 0xDF SWAP1 SLOAD PUSH3 0xEF8 JUMP JUMPDEST PUSH3 0xF2A PUSH3 0xDF SWAP2 PUSH3 0xF21 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xC PUSH3 0x711 JUMP JUMPDEST PUSH3 0xF03 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO DUP1 PUSH3 0x1069 JUMPI JUMPDEST PUSH3 0xF5A JUMPI POP POP POP JUMP JUMPDEST PUSH3 0xF94 SWAP1 PUSH3 0xF6B PUSH1 0x0 PUSH3 0x7EB JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x1013 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH3 0xFA8 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH3 0xFF5 PUSH3 0x776 PUSH3 0xFE6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4CA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH3 0xD03 PUSH3 0x884 PUSH3 0xFDF PUSH3 0xFEE SWAP10 PUSH1 0xD PUSH3 0x711 JUMP JUMPDEST SWAP3 PUSH3 0xE3C JUMP JUMPDEST SWAP6 SWAP1 PUSH3 0xC3F JUMP JUMPDEST SWAP5 PUSH3 0xC3F JUMP JUMPDEST SWAP3 PUSH3 0x100E PUSH3 0x1004 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH3 0xAFE JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4CA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH3 0x1050 PUSH3 0x776 PUSH3 0xFE6 PUSH3 0x1041 PUSH3 0xFEE SWAP7 PUSH1 0xD PUSH3 0x711 JUMP JUMPDEST PUSH3 0xCDF PUSH3 0x884 DUP12 PUSH3 0xE3C JUMP JUMPDEST SWAP3 PUSH3 0x105F PUSH3 0x1004 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE PUSH3 0xF87 JUMP JUMPDEST POP PUSH3 0x1076 PUSH1 0x0 PUSH3 0x1E6 JUMP JUMPDEST DUP3 GT PUSH3 0xF50 JUMP JUMPDEST PUSH3 0x1099 PUSH3 0xDF SWAP2 PUSH3 0x1090 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x711 JUMP JUMPDEST PUSH3 0xC27 JUMP JUMPDEST PUSH3 0x1099 PUSH3 0xDF SWAP2 PUSH3 0x10B1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x8 PUSH3 0x711 JUMP JUMPDEST PUSH3 0x9B9 PUSH3 0xDF SWAP2 PUSH3 0x10CC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH3 0x711 JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP3 SWAP2 PUSH3 0x10E6 PUSH3 0x119E JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP3 SWAP2 PUSH3 0x121F JUMP JUMPDEST SWAP1 PUSH3 0xD1 SWAP3 SWAP2 PUSH3 0x10D5 JUMP JUMPDEST PUSH3 0xDF PUSH3 0x1389 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH1 0x30 SHR PUSH3 0xE30 JUMP JUMPDEST PUSH3 0xDF SWAP1 SLOAD PUSH3 0x110A JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH3 0x1135 DUP3 PUSH3 0x1E6 JUMP JUMPDEST DUP4 SUB PUSH3 0x1149 JUMPI POP PUSH3 0xDF SWAP2 POP PUSH3 0xE20 JUMP JUMPDEST PUSH3 0xDF SWAP3 PUSH3 0x116A PUSH3 0x884 DUP5 PUSH3 0x1176 SWAP5 ADD SWAP3 PUSH3 0xD42 PUSH1 0x1 PUSH3 0x1E6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH3 0x1118 JUMP JUMPDEST SWAP1 PUSH3 0x1198 PUSH1 0x0 PUSH3 0xEC0 SWAP5 SWAP4 PUSH3 0x1193 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH3 0x1514 JUMP JUMPDEST PUSH3 0x11A8 PUSH3 0x1639 JUMP JUMPDEST PUSH3 0x11AF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH3 0xD1 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH3 0xB12 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x49A JUMP JUMPDEST SWAP1 PUSH3 0x1209 PUSH3 0xDF PUSH3 0x4BF SWAP3 PUSH3 0x1E6 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x11EA JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x22A JUMPI JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH3 0x122D DUP2 PUSH3 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SUB PUSH3 0x1303 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4C88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH3 0x12D7 SWAP4 PUSH3 0x12BF SWAP4 PUSH3 0x128E PUSH3 0x76F SWAP5 PUSH3 0xD3 PUSH3 0x1286 DUP13 PUSH3 0x1280 PUSH1 0x2 PUSH3 0xC27 JUMP JUMPDEST PUSH3 0x1211 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x11F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH3 0x12DC JUMPI POP POP PUSH3 0x12B9 PUSH3 0x1286 DUP9 PUSH3 0x12B5 PUSH1 0x2 PUSH3 0xC27 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH3 0x3E6 JUMP JUMPDEST SWAP4 PUSH3 0x12CA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH3 0x12B9 SWAP2 PUSH3 0x12EC SWAP2 PUSH3 0x711 JUMP JUMPDEST PUSH3 0x12FC DUP10 PUSH3 0x1A1 DUP4 PUSH3 0xC27 JUMP JUMPDEST SWAP1 PUSH3 0x11F5 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH3 0x1316 PUSH3 0x1099 DUP5 DUP5 PUSH3 0x711 JUMP JUMPDEST DUP6 DUP2 LT PUSH3 0x1362 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4C88 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP6 PUSH3 0x12D7 SWAP5 PUSH3 0x128E PUSH3 0x12BF SWAP6 PUSH3 0xD3 PUSH3 0x1350 DUP13 PUSH3 0x76F SWAP9 SUB SWAP1 JUMP JUMPDEST PUSH3 0x135C DUP8 DUP7 PUSH3 0x711 JUMP JUMPDEST PUSH3 0x11F5 JUMP JUMPDEST DUP4 PUSH3 0x862 DUP8 PUSH3 0x1372 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH3 0x11C1 JUMP JUMPDEST PUSH3 0xDF NUMBER PUSH3 0x166D JUMP JUMPDEST PUSH3 0xDF PUSH1 0x40 PUSH3 0xBA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH3 0x13DB JUMPI PUSH3 0x13D2 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x13A0 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 PUSH3 0x49A JUMP JUMPDEST PUSH3 0x1408 PUSH3 0xDF PUSH3 0xDF SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x1427 PUSH3 0xDF PUSH3 0x4BF SWAP3 PUSH3 0x13F0 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x13E1 JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF NOT SWAP1 PUSH1 0x30 SHL PUSH3 0x49A JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0xE30 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH3 0x146C PUSH3 0xDF PUSH3 0x4BF SWAP3 PUSH3 0x1442 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x142F JUMP JUMPDEST PUSH3 0xD1 SWAP2 PUSH3 0x14AB SWAP1 PUSH1 0x20 SWAP1 PUSH3 0x149D PUSH3 0x1496 DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x1413 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x1458 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x14C4 JUMPI PUSH3 0xD1 SWAP2 PUSH3 0x1474 JUMP JUMPDEST PUSH3 0x4E9 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH3 0xB4 JUMPI DUP3 PUSH3 0x14F6 SWAP2 PUSH1 0x1 PUSH3 0xD1 SWAP6 ADD DUP2 SSTORE PUSH3 0x13B6 JUMP JUMPDEST SWAP1 PUSH3 0x14B2 JUMP JUMPDEST PUSH3 0xDF SWAP1 PUSH3 0x1408 JUMP JUMPDEST PUSH3 0xDF SWAP1 SLOAD PUSH3 0x14FD JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH3 0x1528 DUP3 PUSH3 0x1E6 JUMP JUMPDEST DUP2 GT ISZERO PUSH3 0x15F4 JUMPI PUSH3 0x1553 PUSH3 0x1546 DUP4 SWAP3 PUSH3 0xD42 PUSH1 0x1 PUSH3 0x1E6 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH3 0x155F DUP2 PUSH3 0x1508 JUMP JUMPDEST SWAP2 PUSH3 0x156B DUP3 PUSH3 0x1118 JUMP JUMPDEST SWAP5 PUSH6 0xFFFFFFFFFFFF DUP6 AND PUSH6 0xFFFFFFFFFFFF DUP6 AND GT PUSH3 0x15E2 JUMPI DUP8 SWAP4 PUSH6 0xFFFFFFFFFFFF DUP7 DUP2 AND SWAP2 AND SUB PUSH3 0x15A6 JUMPI POP POP PUSH3 0x884 SWAP3 POP PUSH3 0x1458 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH3 0x15CD PUSH3 0x884 SWAP4 PUSH3 0x15BD PUSH3 0x1394 JUMP JUMPDEST SWAP4 DUP5 ADD SWAP1 PUSH6 0xFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP1 PUSH3 0x1633 SWAP1 PUSH3 0x884 SWAP4 PUSH3 0x161E PUSH3 0x160E PUSH3 0x1394 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP6 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP8 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x14CA JUMP JUMPDEST PUSH3 0xE20 JUMP JUMPDEST PUSH3 0xDF PUSH1 0x5 PUSH3 0x98B JUMP JUMPDEST PUSH3 0xDF PUSH3 0xDF PUSH3 0xDF SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH3 0x1408 PUSH3 0xDF PUSH3 0xDF SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x167E PUSH6 0xFFFFFFFFFFFF PUSH3 0x1645 JUMP JUMPDEST DUP2 GT PUSH3 0x1690 JUMPI PUSH3 0xDF SWAP1 PUSH3 0x165D JUMP JUMPDEST PUSH3 0x862 SWAP1 PUSH3 0x169F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x30 PUSH1 0x4 DUP5 ADD PUSH3 0xE02 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x51 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH1 0x1 EQ PUSH3 0x16ED JUMPI PUSH1 0x2 SUB PUSH3 0x16B8 JUMPI PUSH3 0xDF SWAP2 PUSH3 0xEEC JUMP JUMPDEST POP PUSH3 0xDF SWAP2 PUSH3 0xDEB JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x24BCE60C EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x39D319E5 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x3DA01325 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7B46B80B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xA0821BE3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB3DE4214 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xC79445D0 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xE5962195 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x237 JUMPI PUSH4 0xF1127ED8 SUB PUSH2 0x327 JUMPI PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x327 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x32C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x33F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x34E JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x327 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x3F2 PUSH1 0x20 SWAP4 PUSH2 0x3FC SWAP4 PUSH2 0x3DD DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x362 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x460 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x48F DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST SWAP5 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x48F DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x4DE JUMP JUMPDEST SWAP2 PUSH2 0xF7D JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x54D CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x58C DUP3 DUP7 PUSH2 0x466 JUMP JUMPDEST SWAP5 ADD PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x115D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x5C7 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 PUSH2 0x5E8 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x630 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x1184 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x118C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1226 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6AF CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x56B PUSH2 0x1311 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1438 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x733 PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x760 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x384 PUSH2 0x1571 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x79B PUSH2 0x796 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x7C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1584 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x15A0 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x7F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1673 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x815 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x167D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x56B PUSH2 0x16BA JUMP JUMPDEST SWAP1 PUSH2 0x852 PUSH2 0x84B PUSH2 0x841 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x863 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x880 PUSH2 0x879 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x856 JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0x8E0 PUSH2 0x8D8 PUSH2 0x8F7 SWAP6 PUSH2 0x8CA PUSH2 0x8F0 SWAP6 PUSH2 0x362 SWAP13 SWAP11 PUSH2 0x8BD PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x3C8 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x3C8 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x832 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x914 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x91F PUSH2 0x170F JUMP JUMPDEST SWAP4 PUSH2 0x92F SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x969 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x178D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x97F CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x98A PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x9B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0x17B5 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x17BF JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 PUSH2 0x9F4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xA16 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9FE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0xA37 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x17FD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xA4D CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x4CD JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0xA76 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x327 JUMPI PUSH2 0xAA2 DUP4 DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xAB0 DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0xABE DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0x362 PUSH2 0xACF DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0xA7F JUMP JUMPDEST SWAP4 PUSH1 0xA0 PUSH2 0x48F DUP3 PUSH1 0x80 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xAF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8C JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x183E JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xB0E CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0xE28434228950B641DBBC0178DE89DAA359A87C6EE0D8399AEACE52A98FE902B9 PUSH2 0x4CD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0xB4D CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x18FB JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x327 JUMPI PUSH2 0xB66 DUP3 DUP3 PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xB74 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xB82 DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0xB90 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0x362 PUSH2 0xBA1 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xA7F JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x48F DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xBC4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB52 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1992 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xBE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x4CD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xC1C CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x1A8D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xC32 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x1A97 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x58C DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0xC6F CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x1AAA JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0xC8B CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1ACA JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xCA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x4CD JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0xCFE DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 SWAP1 DUP1 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0xD4C PUSH2 0xD46 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE2 JUMP JUMPDEST SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0xDBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xD7C JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xDF8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE49 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE44 JUMPI JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE39 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xE70 PUSH2 0xE66 DUP4 PUSH2 0xE29 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC2 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE89 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xE9C SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEAE JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEA1 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0xE53 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0xF38 SWAP3 PUSH2 0xF2F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xED7 JUMP JUMPDEST SUB DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x362 PUSH1 0x3 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xF5D SWAP2 SWAP1 CALLER PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xF5D SWAP3 SWAP2 SWAP1 PUSH2 0xF8F DUP4 CALLER JUMPDEST DUP4 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xFBD PUSH2 0x362 SWAP3 PUSH2 0xFB5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST ADD PUSH2 0xF69 JUMP JUMPDEST SWAP1 PUSH2 0xFD4 PUSH2 0xFD0 CALLER PUSH2 0x1C62 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH2 0x34C SWAP2 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB4BE5F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x438 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1021 JUMP JUMPDEST SWAP1 PUSH2 0xF96 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105D PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x5DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x103D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1075 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x111E JUMPI PUSH2 0x108D DUP2 PUSH2 0x17E1 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1098 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x10ED JUMPI PUSH2 0x10E8 PUSH2 0x10DE DUP3 PUSH2 0x10D9 DUP6 PUSH2 0x10D4 PUSH32 0xA065E63C631C86F1B9F66A4A2F63F2093BF1C2168D23290259DBD969E0222A45 SWAP7 PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST SWAP3 PUSH2 0x4D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x10FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x14884B49 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x959D408B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1150 PUSH2 0x114B DUP3 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST SWAP1 PUSH2 0x115A SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x12 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 PUSH2 0x1196 CALLER PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11AE JUMPI PUSH2 0x115A SWAP2 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x11ED PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x115A SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x122E PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0x11FF JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x1268 JUMPI POP PUSH2 0x362 SWAP2 PUSH2 0x125D PUSH2 0x1257 PUSH2 0x362 PUSH2 0x1263 SWAP5 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST SWAP2 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST DUP3 PUSH2 0xFF3 PUSH2 0x1275 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD SWAP1 DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x12CB PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x115A SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x1306 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x34C PUSH2 0x34C PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1347 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1360 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555356503A204D617820737570706C7920657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH32 0x2E8AC5177A616F2AEC08C3048F5021E4E9743ECE034E8D83BA5CAF76688BB475 SWAP1 PUSH2 0x1407 PUSH2 0x13F2 DUP5 PUSH2 0x13ED PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x134C JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x1094 PUSH2 0x362 PUSH2 0x5E8 JUMP JUMPDEST GT ISZERO PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x1411 DUP4 DUP3 PUSH2 0x20BD JUMP JUMPDEST PUSH2 0x1422 PUSH2 0x141C PUSH2 0xF73 JUMP JUMPDEST SWAP2 PUSH2 0x102A JUMP JUMPDEST SWAP3 PUSH2 0x10E8 PUSH2 0x142F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x20FA JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x145E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF19 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1494 PUSH2 0x148F DUP4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x14A3 PUSH1 0x1D PUSH2 0x1482 JUMP JUMPDEST PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1501 PUSH2 0x14F5 PUSH2 0x14EA PUSH2 0x2138 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x150E JUMPI PUSH2 0x362 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x362 SWAP2 PUSH2 0x1542 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xC PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x155E JUMP JUMPDEST PUSH2 0x362 PUSH1 0x5 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x1593 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x144C DUP3 CALLER PUSH2 0xF89 JUMP JUMPDEST SWAP1 PUSH2 0x15BC PUSH2 0xFD0 CALLER PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH2 0x34C SWAP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0x15E3 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x111E JUMPI PUSH2 0x15FB DUP2 PUSH2 0x18FB JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1642 JUMPI PUSH2 0x10DE PUSH32 0x9BED35CB62AD0DBA04F9D5BFEE4B5BC91443E77DA8A65C4C84834C51BB08B0D6 SWAP3 PUSH2 0x10D9 PUSH2 0x1637 DUP7 PUSH2 0x10E8 SWAP6 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x10D4 DUP4 PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xFF3 DUP3 PUSH2 0x164F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x168ECF91 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x16AF PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x34C PUSH2 0x34C PUSH2 0x224A JUMP JUMPDEST PUSH2 0x34C PUSH2 0x1686 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF19 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1494 PUSH2 0x148F DUP4 PUSH2 0x16C2 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x1702 PUSH2 0x16FC DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1717 PUSH2 0x2252 JUMP JUMPDEST SWAP1 PUSH2 0x1720 PUSH2 0x227F JUMP JUMPDEST SWAP1 PUSH2 0x172A ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1734 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x1746 PUSH2 0x1741 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x16EC JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x175D PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x11FF JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1780 JUMPI POP PUSH2 0x1263 PUSH2 0x362 SWAP2 PUSH2 0x125D PUSH2 0x1257 PUSH1 0xE SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xFF3 PUSH2 0x1275 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH1 0x0 PUSH2 0x17A2 PUSH2 0x17A8 SWAP4 PUSH2 0xFB5 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x4 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x17DC PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x17F7 PUSH2 0x17F1 DUP3 PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH2 0x18FB JUMP JUMPDEST SWAP1 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xF5D SWAP2 SWAP1 CALLER PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x34C SWAP5 PUSH2 0x1837 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1827 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 TIMESTAMP GT PUSH2 0x18D4 JUMPI SWAP2 PUSH2 0x18CD SWAP2 PUSH2 0x1559 SWAP4 PUSH2 0x18C8 DUP7 PUSH2 0x18B0 DUP10 PUSH2 0x34C SWAP12 SWAP13 PUSH2 0x18A4 PUSH2 0x188C PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x1808 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x18BB DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0x230E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH2 0xFF3 DUP8 PUSH2 0x18E1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x190A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1961 PUSH2 0x13B8 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x195A PUSH1 0xA0 SWAP7 PUSH2 0x194A PUSH2 0x34C SWAP11 PUSH2 0x193A PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 SWAP1 JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP7 SWAP6 SWAP3 SWAP5 SWAP2 SWAP5 SWAP4 SWAP1 SWAP4 PUSH2 0x19A2 DUP2 SWAP1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x1A4B JUMPI SWAP1 PUSH2 0x18C8 DUP6 PUSH2 0x18B0 DUP11 PUSH2 0x1A03 SWAP8 SWAP7 SWAP6 PUSH2 0x18A4 PUSH2 0x19E1 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x19EB DUP5 PUSH2 0x2383 JUMP JUMPDEST DUP14 PUSH2 0x19F5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1A27 JUMPI POP PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x1B1C JUMP JUMPDEST DUP5 SWAP1 PUSH2 0xFF3 PUSH2 0x1A35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1968 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x1A58 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1A83 PUSH2 0x114B DUP3 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 PUSH2 0x115A SWAP2 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1AA2 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH2 0x1AC5 PUSH2 0x159B SWAP3 PUSH2 0x1ABD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x17A8 PUSH2 0x362 SWAP2 PUSH2 0x1AD9 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x40 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x1AF3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0x1B16 PUSH2 0x1B01 JUMP JUMPDEST POP PUSH2 0x23AA JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x34C SWAP4 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x34C SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x13B8 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1B6B JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1B91 JUMPI SWAP2 PUSH2 0x1B82 PUSH2 0x1B88 SWAP5 SWAP3 PUSH1 0x0 SWAP5 SUB SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x23C2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1B65 JUMP JUMPDEST DUP3 PUSH2 0xFF3 DUP4 PUSH2 0x1B9F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1BC2 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1C31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x1C00 JUMPI PUSH2 0x34C SWAP4 SWAP5 POP PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x1C0D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x1C3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH32 0xE28434228950B641DBBC0178DE89DAA359A87C6EE0D8399AEACE52A98FE902B9 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER SWAP1 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1043 JUMP JUMPDEST SWAP1 PUSH2 0x1CB0 PUSH2 0x362 PUSH2 0x1064 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1CC4 PUSH2 0xFD0 DUP4 DUP4 PUSH2 0x178D JUMP JUMPDEST ISZERO PUSH2 0x1D2C JUMPI PUSH2 0x1CE4 PUSH1 0x1 PUSH2 0x1CDF DUP5 PUSH1 0x0 PUSH2 0x17A2 DUP7 PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1CF8 PUSH2 0x141C PUSH2 0x1CF2 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x102A JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x1D23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1D3C ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1D76 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x1DAE JUMPI JUMPDEST ISZERO PUSH2 0x1DA6 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x244A JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1DE1 DUP3 DUP3 PUSH2 0x178D JUMP JUMPDEST ISZERO PUSH2 0x1D2C JUMPI PUSH2 0x1DFB PUSH1 0x0 PUSH2 0x1CDF DUP5 DUP3 PUSH2 0x17A2 DUP7 PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1E09 PUSH2 0x141C PUSH2 0x1CF2 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x1D23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E3D DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E47 JUMPI POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x10D9 PUSH1 0x0 PUSH2 0x1CDF PUSH2 0x1E5B SWAP5 PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x798117EC059AB8D319461EF2502B1F9D8A47CD966BFD1F3E23B6F26C30BEBB77 PUSH2 0x1E85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x365 SWAP1 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x34C SWAP3 SWAP5 SWAP4 PUSH2 0x13B8 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1ECC PUSH6 0xFFFFFFFFFFFF PUSH2 0x11FF JUMP JUMPDEST DUP2 GT PUSH2 0x1EDB JUMPI PUSH2 0x362 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x1EE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x30 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH1 0x30 SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1F1B PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1F6F SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1F50 DUP5 PUSH2 0x5DB JUMP JUMPDEST DUP5 DUP4 PUSH2 0x1F5C PUSH1 0x5 PUSH2 0x5DB JUMP JUMPDEST DUP2 GT PUSH2 0x1FB1 JUMPI JUMPDEST POP SWAP1 SWAP2 ADD JUMPDEST SWAP5 DUP6 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1F78 DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP2 SUB PUSH2 0x1F89 JUMPI POP PUSH2 0x362 SWAP2 POP PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x362 SWAP3 PUSH2 0x1F9E PUSH2 0x1FAB SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x1F27 JUMP JUMPDEST DUP1 PUSH2 0x17F7 PUSH2 0x1FBE SWAP3 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x14EA DUP4 PUSH2 0x1FD9 DUP5 DUP9 DUP4 ADD JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x1F09 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP10 AND LT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1F68 SWAP3 SWAP4 SWAP5 POP SWAP4 JUMPDEST SWAP3 SWAP2 PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1F68 SWAP3 POP PUSH2 0x2017 SWAP1 PUSH2 0x2011 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x134C JUMP JUMPDEST SWAP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2031 JUMPI POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x10D9 PUSH1 0x1 PUSH2 0x1CDF PUSH2 0x2045 SWAP5 PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH32 0xCA86D8C91CA6D00AFD863578CC633A0901FAD724592F89649629FE65F61410D2 PUSH2 0x1E85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2077 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2086 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1CA0 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x20B0 CALLER PUSH2 0x733 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x206F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x20C9 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x20ED JUMPI PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x1C0D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2106 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x212B JUMPI SWAP3 PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x1C3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 NUMBER PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1043 JUMP JUMPDEST SWAP1 PUSH2 0x2160 PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x102A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x34C SWAP2 PUSH2 0x21DB PUSH2 0x2177 DUP4 PUSH2 0x1533 JUMP JUMPDEST SWAP3 PUSH2 0x218C DUP4 PUSH2 0x2187 DUP4 PUSH1 0xC PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x219E DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x21A7 DUP6 PUSH2 0x102A JUMP JUMPDEST SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH2 0x21D2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x281F JUMP JUMPDEST SWAP2 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x21FB PUSH2 0x21F6 PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x29A6 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH2 0x2211 PUSH2 0x29F6 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2220 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1CA0 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20B0 CALLER PUSH2 0x733 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 PUSH1 0x9 JUMPDEST SWAP1 PUSH2 0x2AB2 JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 PUSH1 0xA PUSH2 0x2279 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x22B9 DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP4 SUB PUSH2 0x22CA JUMPI POP PUSH2 0x362 SWAP2 POP PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x362 SWAP3 PUSH2 0x1FCD PUSH2 0x1094 DUP5 PUSH2 0x1FAB SWAP5 ADD SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x22F1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x362 SWAP4 SWAP2 PUSH2 0x2326 SWAP4 PUSH2 0x2320 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2B19 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x2355 DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SUB PUSH2 0x2361 JUMPI POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x236D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x232F JUMP JUMPDEST PUSH2 0x2392 SWAP1 PUSH1 0x0 JUMPDEST POP PUSH1 0xB PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x239E DUP3 PUSH2 0xF69 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD JUMPDEST SWAP1 PUSH2 0x104D JUMP JUMPDEST SWAP1 PUSH2 0x23BD PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x2D62 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP4 SWAP3 SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x2DCD JUMP JUMPDEST SWAP1 PUSH2 0x23E7 PUSH2 0xFD0 DUP3 DUP5 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x23EF JUMPI POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x23FB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x232F JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x34C SWAP5 PUSH2 0x2443 PUSH2 0x1983 SWAP3 PUSH2 0x243C PUSH1 0x80 SWAP7 PUSH2 0x2435 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x24CF PUSH32 0x0 PUSH32 0x0 PUSH2 0x18A4 PUSH2 0x24BC ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x24DA PUSH2 0x18BB DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x24F2 PUSH2 0x1094 PUSH2 0x362 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x250B PUSH2 0x1094 PUSH2 0x362 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2530 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2540 DUP2 PUSH2 0x5DB JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2782 JUMPI SWAP1 PUSH2 0x268D PUSH2 0x2688 PUSH2 0x362 PUSH2 0x2681 PUSH2 0x264D PUSH2 0x264D PUSH2 0x2677 PUSH2 0x2652 PUSH2 0x264D PUSH2 0x266D PUSH2 0x264D PUSH2 0x264D DUP13 PUSH2 0x3FC PUSH2 0x362 SWAP16 PUSH2 0x2643 PUSH2 0x264D PUSH2 0x265C PUSH2 0x2666 SWAP4 PUSH2 0x2633 PUSH2 0x262D DUP9 PUSH2 0x2591 DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x259F PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x5DB JUMP JUMPDEST DUP12 LT ISZERO PUSH2 0x275A JUMPI JUMPDEST PUSH2 0x25B4 PUSH1 0x1 PUSH1 0x40 SHL PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2738 JUMPI JUMPDEST PUSH2 0x25CA PUSH5 0x100000000 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2716 JUMPI JUMPDEST PUSH2 0x25DE PUSH3 0x10000 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26F4 JUMPI JUMPDEST PUSH2 0x25F1 PUSH2 0x100 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26D2 JUMPI JUMPDEST PUSH2 0x2603 PUSH1 0x10 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26AA JUMPI JUMPDEST PUSH2 0x2618 PUSH2 0x1094 PUSH1 0x4 PUSH2 0x5DB JUMP JUMPDEST LT ISZERO PUSH2 0x2692 JUMPI JUMPDEST PUSH2 0x2629 PUSH1 0x3 PUSH2 0x5DB JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1167 JUMP JUMPDEST SWAP15 DUP16 SWAP13 DUP14 DUP1 SWAP12 DUP2 SWAP8 DUP3 DUP1 SWAP7 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP14 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP11 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP8 PUSH2 0x2526 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP13 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP10 PUSH2 0x2526 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2526 JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x26A5 SWAP1 PUSH2 0x269F DUP6 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x261F JUMP JUMPDEST PUSH2 0x26C1 PUSH2 0x26CC SWAP2 PUSH2 0x26BB PUSH1 0x4 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x2 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x26E3 PUSH2 0x26EE SWAP2 PUSH2 0x26BB PUSH1 0x8 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x4 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH2 0x2705 PUSH2 0x2710 SWAP2 PUSH2 0x26BB PUSH1 0x10 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x8 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x2727 PUSH2 0x2732 SWAP2 PUSH2 0x26BB PUSH1 0x20 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x10 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x2749 PUSH2 0x2754 SWAP2 PUSH2 0x26BB PUSH1 0x40 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x20 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25BC JUMP JUMPDEST POP PUSH2 0x277C PUSH2 0x2771 PUSH2 0x276B PUSH1 0x80 PUSH2 0x1167 JUMP JUMPDEST DUP13 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x40 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25A7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP3 PUSH2 0x2792 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x27F4 JUMPI PUSH2 0x27A6 DUP2 DUP4 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 PUSH2 0x27BD PUSH1 0x0 PUSH2 0x1FD9 DUP5 DUP10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST PUSH2 0x27CE PUSH6 0xFFFFFFFFFFFF DUP8 AND PUSH2 0x14F5 JUMP JUMPDEST GT ISZERO PUSH2 0x27DD JUMPI POP SWAP2 JUMPDEST SWAP2 PUSH2 0x2794 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x27EE SWAP1 PUSH2 0x2011 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x27D7 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP1 JUMP JUMPDEST PUSH2 0x2807 PUSH2 0xFD0 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO DUP1 PUSH2 0x2957 JUMPI JUMPDEST PUSH2 0x2850 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2886 SWAP1 PUSH2 0x285E PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x28F5 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x2899 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x1422 PUSH2 0x141C PUSH2 0x28E8 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP5 PUSH2 0x28DF PUSH2 0x1094 PUSH2 0x28D9 PUSH2 0x28EF SWAP10 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST SWAP3 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP6 SWAP1 PUSH2 0x1214 JUMP JUMPDEST SWAP5 PUSH2 0x1214 JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP2 PUSH2 0x2941 PUSH2 0x141C PUSH2 0x28E8 PUSH2 0x292E PUSH2 0x28EF SWAP7 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x293A PUSH2 0x1094 DUP12 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x28E2 JUMP JUMPDEST SWAP3 PUSH2 0x294E PUSH2 0x142F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE PUSH2 0x2879 JUMP JUMPDEST POP PUSH2 0x2962 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST DUP3 GT PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 SWAP2 PUSH2 0x2977 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x299D PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x29B3 PUSH4 0xFFFFFFFF PUSH2 0x297D JUMP JUMPDEST DUP2 GT PUSH2 0x29C2 JUMPI PUSH2 0x362 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x29CF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x20 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x238A PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x29FE PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x2A04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 PUSH1 0xFF PUSH2 0x5DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x2A33 PUSH2 0xE66 DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A4C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2A5F SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x2A71 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A64 JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0xF38 SWAP3 PUSH2 0x2AA0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2A85 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2A8F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2AC2 PUSH2 0x1094 PUSH2 0x362 PUSH2 0x2A16 JUMP JUMPDEST EQ PUSH2 0x2AD1 JUMPI POP PUSH2 0x362 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH2 0x362 SWAP2 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x34C SWAP5 PUSH2 0x1837 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x2B03 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x2B24 DUP5 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x2B50 PUSH2 0x1094 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x5DB JUMP JUMPDEST GT PUSH2 0x2BD1 JUMPI SWAP1 PUSH2 0x2B72 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x2B69 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2AE4 JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2BCC JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x2B8F DUP4 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2BB8 JUMPI POP PUSH2 0x2BB2 DUP4 PUSH2 0x5DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x2BC4 SWAP1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2B0D JUMP JUMPDEST POP POP POP PUSH2 0x2BDE PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2C05 JUMPI JUMP JUMPDEST PUSH2 0x2BE5 JUMP JUMPDEST SWAP1 PUSH2 0x34C DUP3 PUSH2 0x2BFB JUMP JUMPDEST PUSH2 0x2C1E PUSH1 0x0 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C27 DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C30 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2C3A PUSH1 0x1 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C43 DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2C64 PUSH1 0x2 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C6D DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C9B JUMPI PUSH2 0xFF3 PUSH2 0x2C7E DUP4 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2CAE PUSH2 0x2CA8 PUSH1 0x3 PUSH2 0x2C0A JUMP JUMPDEST SWAP2 PUSH2 0x2C0A JUMP JUMPDEST EQ PUSH2 0x2CB6 JUMPI POP JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2CC3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D0D PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2CDD JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x2D49 PUSH1 0x0 PUSH2 0x2D2C PUSH2 0x1AE1 JUMP JUMPDEST SWAP5 PUSH2 0x1FAB PUSH2 0x2D3B DUP4 DUP4 ADD PUSH2 0x1F09 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP8 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH1 0x0 PUSH2 0x2D7B SWAP3 PUSH2 0x2D74 PUSH2 0x1B01 JUMP JUMPDEST POP ADD PUSH2 0x2CF3 JUMP JUMPDEST POP PUSH2 0x2D59 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D8E DUP6 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x2D9C JUMPI PUSH2 0x34C SWAP4 SWAP5 PUSH2 0x2F20 JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5FF1C9B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2DDB DUP3 DUP3 DUP7 PUSH2 0x301D JUMP JUMPDEST PUSH2 0x2DE8 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x2E02 JUMPI JUMPDEST PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x307B JUMP JUMPDEST PUSH2 0x2E0A PUSH2 0xF73 JUMP JUMPDEST SWAP4 PUSH2 0x2E13 PUSH2 0x306B JUMP JUMPDEST SWAP5 DUP6 DUP2 GT PUSH2 0x2E23 JUMPI POP SWAP4 POP PUSH2 0x2DF8 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xFF3 PUSH2 0x2E31 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x2011 PUSH2 0x362 SWAP3 PUSH2 0x2E56 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 DUP4 AND SWAP3 XOR PUSH2 0x2E66 PUSH1 0x2 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x2E7C PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH2 0x1214 JUMP JUMPDEST DUP2 GT PUSH2 0x2E8B JUMPI PUSH2 0x362 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2E98 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0xD0 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP1 PUSH2 0x2ED9 PUSH2 0x2EDF SWAP4 PUSH2 0x2EC0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2EC9 PUSH2 0x17AD JUMP JUMPDEST SWAP3 PUSH2 0x2ED3 DUP6 PUSH2 0x22AA JUMP JUMPDEST SWAP1 PUSH2 0x3533 JUMP JUMPDEST SWAP2 PUSH2 0x3114 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x1702 PUSH2 0x2EF3 DUP5 PUSH2 0x1482 JUMP JUMPDEST SWAP4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x2F02 DUP2 PUSH2 0x3131 JUMP JUMPDEST SWAP1 PUSH2 0x2F15 PUSH2 0x2F10 PUSH1 0x20 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x2EE3 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2F2D PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2FEC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x2FBB JUMPI POP PUSH2 0x2F73 DUP5 PUSH2 0x10D4 DUP6 PUSH2 0x1AC5 DUP7 PUSH1 0x1 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x2F7C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2FB6 PUSH2 0x2FAC PUSH2 0x1CF2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x102A JUMP JUMPDEST SWAP4 PUSH2 0x4D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2FC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2FF9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x302D PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO DUP1 PUSH2 0x305A JUMPI JUMPDEST PUSH2 0x304D JUMPI PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x10FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP PUSH2 0x3064 DUP5 PUSH2 0x17E1 JUMP JUMPDEST DUP3 GT PUSH2 0x303F JUMP JUMPDEST PUSH2 0x362 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH2 0x1214 JUMP JUMPDEST SWAP1 PUSH2 0x30D3 PUSH2 0x30CD PUSH2 0x34C SWAP5 SWAP4 PUSH2 0x30B9 PUSH2 0x3094 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x30F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x30D9 JUMPI PUSH2 0x1533 JUMP JUMPDEST SWAP2 PUSH2 0x1533 JUMP JUMPDEST SWAP1 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x30EC PUSH2 0x30E5 DUP7 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0xE PUSH2 0x293A JUMP JUMPDEST POP POP PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x3106 PUSH2 0x30FF DUP9 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0xE PUSH2 0x28DF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x312C PUSH1 0x0 PUSH2 0x2EDF SWAP5 SWAP4 PUSH2 0x3127 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3140 PUSH2 0x3145 SWAP2 PUSH2 0x2782 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x314F PUSH1 0xFF PUSH2 0x5DB JUMP JUMPDEST AND PUSH2 0x315A PUSH1 0x1F PUSH2 0x5DB JUMP JUMPDEST DUP2 GT PUSH2 0x3163 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x3182 DUP2 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x31AB JUMPI PUSH2 0x318F DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x319E JUMPI SWAP3 PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x33E2 JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3201 PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x31DC JUMP JUMPDEST DUP3 SLOAD PUSH2 0x31CE JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF NOT SWAP1 PUSH1 0x30 SHL PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1F1B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH2 0x323E PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x321A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3208 JUMP JUMPDEST PUSH2 0x34C SWAP2 PUSH2 0x3277 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x3269 PUSH2 0x3263 DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x31F1 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x322E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x328C JUMPI PUSH2 0x34C SWAP2 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x31B8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xF19 JUMPI DUP3 PUSH2 0x32B4 SWAP2 PUSH1 0x1 PUSH2 0x34C SWAP6 ADD DUP2 SSTORE PUSH2 0x2CF3 JUMP JUMPDEST SWAP1 PUSH2 0x327D JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x32CC DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x338B JUMPI PUSH2 0x32F2 PUSH2 0x32E5 DUP4 SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x32FC DUP2 PUSH2 0x1F09 JUMP JUMPDEST SWAP2 PUSH2 0x3306 DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP5 PUSH6 0xFFFFFFFFFFFF DUP6 AND PUSH6 0xFFFFFFFFFFFF DUP6 AND GT PUSH2 0x3379 JUMPI DUP8 SWAP4 PUSH2 0x3331 PUSH6 0xFFFFFFFFFFFF DUP8 AND PUSH2 0x14F5 JUMP JUMPDEST SUB PUSH2 0x3342 JUMPI POP POP PUSH2 0x1094 SWAP3 POP PUSH2 0x322E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3365 PUSH2 0x1094 SWAP4 PUSH2 0x3355 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 DUP5 ADD SWAP1 PUSH6 0xFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP1 PUSH2 0x33C4 SWAP1 PUSH2 0x1094 SWAP4 PUSH2 0x33B0 PUSH2 0x33A0 PUSH2 0x1AE1 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP6 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP8 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3291 JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33D7 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33ED JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33C9 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x33F9 DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SUB PUSH2 0x349B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x2FB6 SWAP4 PUSH2 0x2FAC SWAP4 PUSH2 0x345B PUSH2 0x1CF2 SWAP5 PUSH2 0x438 PUSH2 0x3454 DUP13 PUSH2 0x13ED PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x3481 JUMPI POP POP PUSH2 0x10D9 PUSH2 0x3454 DUP9 PUSH2 0x347D PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x10D9 SWAP2 PUSH2 0x348E SWAP2 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x23A4 DUP10 PUSH2 0x3FC DUP4 PUSH2 0xF69 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x34AB PUSH2 0x159B DUP5 DUP5 PUSH2 0x1033 JUMP JUMPDEST DUP6 DUP2 LT PUSH2 0x34F9 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 DUP6 PUSH2 0x2FB6 SWAP5 PUSH2 0x345B PUSH2 0x2FAC SWAP6 PUSH2 0x438 PUSH2 0x34EF DUP13 PUSH2 0x1CF2 SWAP9 SUB SWAP1 JUMP JUMPDEST PUSH2 0x10D4 DUP8 DUP7 PUSH2 0x1033 JUMP JUMPDEST DUP4 PUSH2 0xFF3 DUP8 PUSH2 0x3507 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x51 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH1 0x1 EQ PUSH2 0x354E JUMPI PUSH1 0x2 SUB PUSH2 0x351D JUMPI PUSH2 0x362 SWAP2 PUSH2 0xDCF JUMP JUMPDEST POP PUSH2 0x362 SWAP2 PUSH2 0xDA0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xD9 0xED SWAP11 0xDF ADDRESS 0xE6 PUSH12 0xCDFC5BF711CBD409E21B8C87 PUSH23 0x8B3ABB1F2E5F07A7E65464736F6C63430008160033DDF2 MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF 0xDE 0xC2 0xBA 0xCD 0xD2 CREATE JUMPDEST MSIZE 0xDE CALLVALUE 0xDA SWAP12 MSTORE RETURNDATASIZE SELFDESTRUCT DUP12 0xE4 0x2E 0x5E CODESIZE 0xE8 XOR 0xC8 0x2F 0xDB SIGNEXTEND 0xAE PUSH24 0x4387A7240000000000000000000000000000000000000000 ","sourceMap":"866:2876:35:-:0;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;866:2876:35;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;866:2876:35;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;866:2876:35;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::o;:::-;-1:-1:-1;;;;;866:2876:35;;;;;;;;-1:-1:-1;;866:2876:35;;;:::o;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;866:2876:35;;;;;:::o;:::-;;;:::i;:::-;;;;;;;2187:49:0;2232:4;;;:::i;1285:27:35:-;866:2876;;;1285:27;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::o;1570:563::-;1930:33;1570:563;1848:31;1973:37;1570:563;;;1794:44;1889:31;1570:563;;1772:6;;:::i;:::-;1736;;:::i;:::-;1744;;:::i;:::-;1570:563;;:::i;:::-;1805:18;;:::i;:::-;1794:44;:::i;:::-;-1:-1:-1;1076:24:35;1794:44;:::i;1848:31::-;-1:-1:-1;1144:24:35;1794:44;:::i;1889:31::-;-1:-1:-1;1213:25:35;1794:44;:::i;1930:33::-;-1:-1:-1;1285:27:35;1794:44;:::i;1973:37::-;;2097:28;;2109:16;2115:10;;:::i;:::-;2109:16;:::i;:::-;2097:28;:9;:28;:::i;:::-;;:::i;:::-;2085:10;2097:28;:::i;1194:2411:13:-;;;;;;;;;;;;;133:385:6;:::i;866:2876:35:-;;;;:::i;:::-;-1:-1:-1;;;866:2876:35;;;;;:::o;:::-;;;:::i;1577:52:12:-;;;;;1622:3;;:::i;:::-;209:1280:17;;;;;:::i;866:2876:35:-;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;:::i;:::-;;;;:::i;3328:431:24:-;;3601:14;3328:431;3552:11;3328:431;;;:::i;:::-;3401:45;3432:13;3401:45;;:::i;:::-;3393:53;;3467:51;3501:16;3467:51;;:::i;:::-;3456:62;;866:2876:35;;3552:11:24;3542:22;;;866:2876:35;;;3542:22:24;;866:2876:35;;;;3542:22:24;;3528:36;;866:2876:35;;3601:14:24;3591:25;;;866:2876:35;;;3591:25:24;;3574:42;;3644:13;3627:30;;3692:23;;:::i;:::-;3667:48;;3739:13;3747:4;3739:13;:::i;:::-;3725:27;;3328:431::o;133:605:4:-;;;;;;;;;;;;;;;;;;;;930:330:11;:::i;866:2876:35:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;1207:46:19:-;;;;;:::i;:::-;1231:15;1241:5;1231:15;;:::i;448:733:10:-;;;;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;866:2876:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;866:2876:35;;;;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;866:2876:35;;;;;;;;;;;;;;;;-1:-1:-1;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1601:113:8:-;;1667:13;1690:17;1601:113;1667:13;;:::i;:::-;1690:17;;:::i;866:2876:35:-;;;;;;;;;;;:::o;:::-;;;;;:::i;6179:316:0:-;6276:23;6277:22;;;;:::i;:::-;6276:23;;866:2876:35;6276:23:0;6272:217;;;6315:36;6347:4;6315:29;:12;:20;:12;;:6;:12;:::i;:::-;:20;:29;:::i;:::-;:36;:::i;:::-;6370:40;;;735:10:16;6370:40:0;866:2876:35;;6370:40:0;;;:::i;:::-;;;:::i;:::-;;;;866:2876:35;;;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;6473:5;6466:12;:::o;866:2876:35:-;;;;;;;;1285:27;;;;2707:82:8;2773:9;2780:2;2773:9;:::i;866:2876:35:-;;;;;;;;;;;:::i;:::-;;;:::o;7458:208:8:-;;;7539:10;7547:1;7539:10;:::i;:::-;7528:21;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7528:21:8;7524:91;;7653:5;;;;:::i;7524:91::-;7572:32;;;866:2876:35;;;;7572:32:8;-1:-1:-1;;;7572:32:8;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;7572:32:8;;;;1345:111:20;1390:66;;;:::i;2887:340::-;866:2876:35;;3010:24:20;;3032:2;3010:24;:::i;:::-;;866:2876:35;;3010:24:20;;3006:215;;;3057:20;;;;:::i;3006:215::-;3108:38;:32;:46;:32;866:2876:35;;3108:32:20;:38;:46;:::i;:::-;3175:35;3192:17;;:::i;2079:95:24:-;;;;;;;;;;;;;;;;;;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;2079:95:24;;;-1:-1:-1;;;;;866:2876:35;;;;4113:179:24;2079:95;4204:80;4226:11;;2079:95;866:2876:35;;4226:11:24;4239:14;2079:95;4278:4;4204:80;4270:13;4278:4;4270:13;:::i;:::-;866:2876:35;;4204:80:24;;;;;;4255:13;;4204:80;;;:::i;:::-;;;;;;;;;:::i;:::-;4194:91;;;866:2876:35;;;4194:91:24;;4113:179;:::o;866:2876:35:-;;;;;;;;;;:::i;2854:136:0:-;2954:29;2854:136;2954:20;:12;:29;2854:136;2931:4;866:2876:35;;;2931:4:0;2954:12;:6;:12;:::i;:29::-;;:::i;3131:221:35:-;;3339:5;3131:221;;3339:5;:::i;866:2876::-;;;;;;;;-1:-1:-1;;866:2876:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;866:2876:35;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2079:95:24;866:2876:35;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;1708:286:20:-;1816:10;1840:11;;866:2876:35;;;1840:11:20;:16;;1854:2;1840:16;:::i;:::-;;1836:72;;1957:13;1941:45;1957:13;1974:11;1949:22;1957:13;1924:63;1957:13;;:::i;:::-;1949:22;:::i;:::-;1974:11;866:2876:35;;;1974:11:20;1949:36;1941:45;:::i;1836:72::-;1879:18;;;866:2876:35;;;;1879:18:20;-1:-1:-1;;;1879:18:20;;;;;;;;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;;;;2356:413:13;;;;2474:5;;;;;:::i;:::-;2494:18;2502:10;2510:1;2502:10;:::i;2494:18::-;-1:-1:-1;;;;;866:2876:35;;2494:18:13;2490:226;;2356:413;2756:5;;;;:::i;2490:226::-;2545:13;;:::i;:::-;2586:12;;;:::i;:::-;2616;;;;2612:94;;2490:226;;;;;2612:94;2655:36;;;;866:2876:35;;;;2655:36:13;-1:-1:-1;;;2655:36:13;;;;;;;;;:::i;4406:268:34:-;;;;4504:18;4512:10;4520:1;4512:10;:::i;4504:18::-;-1:-1:-1;;;;;866:2876:35;;4504:18:34;;:52;;;4406:268;4500:128;;4661:5;;;;:::i;4500:128::-;4579:38;;;866:2876:35;;;;4579:38:34;-1:-1:-1;;;4579:38:34;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;4504:52:34;4526:22;;;;:::i;:::-;:30;-1:-1:-1;4504:52:34;;866:2876:35;;;;;;;;;;:::i;2849:97:8:-;2927:12;;;:::i;866:2876:35:-;;;;;-1:-1:-1;;;;;866:2876:35;;;2113:103:13;2185:24;-1:-1:-1;;;;;2185:24:13;:::i;7232:399:3:-;;7602:13;7585:15;7617:6;7232:399;;7451:16;7343:10;7351:1;7343:10;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7335:18:3;7331:107;;-1:-1:-1;;;;;866:2876:35;;;7451:16:3;-1:-1:-1;;;;;866:2876:35;;7451:16:3;7447:110;;7585:15;:::i;:::-;7602:13;;:::i;:::-;7617:6;;:::i;7447:110::-;7483:63;7519:26;;;:::i;:::-;7489:17;7483:63;7508:9;7483:63;;;:::i;:::-;7447:110;;7585:15;:::i;7331:107::-;7369:58;7400:26;;;:::i;:::-;7375:17;7369:58;7394:4;7369:58;866:2876:35;7369:58:3;7331:107;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;:::o;3944:148:34:-;4049:36;;4070:15;4049:18;;;:::i;:::-;4070:15;;:::i;:::-;4049:36;;:::i;2180:235:33:-;;;;;2278:13;;;:::i;:::-;2274:44;;2332:11;;;:::i;:::-;2328:40;;2402:5;;;;;:::i;2328:40::-;2352:16;;;866:2876:35;;;;2352:16:33;-1:-1:-1;;;2352:16:33;;2300:18;;;2352:16;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;2274:44:33;2300:18;;;866:2876:35;;;;;;;-1:-1:-1;;;;;866:2876:35;;;-1:-1:-1;;;;;866:2876:35;;;;;;-1:-1:-1;;;;;866:2876:35;;;;:::o;9304:96:3:-;9388:5;;9304:96;9388:5;:::i;866:2876:35:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;4174:218:29;4254:25;-1:-1:-1;;;;;4254:25:29;:::i;:::-;;;4250:105;;4371:14;;;:::i;4250:105::-;4302:42;;;866:2876:35;;;;4302:42:29;-1:-1:-1;;;4302:42:29;;;;;4333:3;4302:42;;;;:::i;9025:273:3:-;;9265:25;9245:46;9025:273;9192:16;866:2876:35;;;9192:16:3;9256:7;;;:::i;:::-;9268:14;;;;:::i;:::-;9265:25;;:::i;:::-;9245:46;;:::i;:::-;9238:53;;9025:273::o;866:2876:35:-;;;-1:-1:-1;;;;;866:2876:35;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;:::o;9406:101:3:-;9495:5;;9406:101;9495:5;:::i;866:2876:35:-;;;;;;;;;;:::i;5539:117:3:-;5630:19;;5539:117;5604:7;866:2876:35;;;5604:7:3;5630:19;:10;:19;:::i;:::-;;:::i;7717:789::-;;;;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7818:10:3;;:24;;;7717:789;7814:686;;7717:789;;;:::o;7814:686::-;8190:16;7870:10;;7878:1;7870:10;:::i;:::-;7862:18;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7862:18:3;7858:315;;7814:686;8190:16;-1:-1:-1;;;;;866:2876:35;;;8190:16:3;-1:-1:-1;;;;;866:2876:35;;8190:16:3;8186:304;;7717:789;;:::o;8186:304::-;8292:24;8431:44;8226:182;8265:143;-1:-1:-1;;;;;;;;;;;8292:24:3;8265:143;8364:26;8292:24;8226:182;8292:24;:20;:24;:::i;:::-;8364:26;;:::i;8265:143::-;8226:182;;;:::i;:::-;;;:::i;8431:44::-;;;;866:2876:35;;;;8431:44:3;;;;;;:::i;:::-;;;;7717:789::o;7858:315::-;-1:-1:-1;;;;;;;;;;;7966:26:3;8112:46;7900:189;7939:150;7966:26;7900:189;7966:26;:20;:26;:::i;:::-;7939:150;8045:26;;;:::i;8112:46::-;;;;866:2876:35;;;;8112:46:3;;;;7858:315;;;7818:24;7832:10;;7841:1;7832:10;:::i;:::-;;;7818:24;;3004:116:8;3095:18;;3004:116;3069:7;866:2876:35;;;3069:7:8;3095:18;:9;:18;:::i;:::-;;:::i;2282:105:34:-;2367:13;;2282:105;2341:7;866:2876:35;;;2341:7:34;2367:13;:7;:13;:::i;1284:105:33:-;1365:17;;1284:105;1342:4;866:2876:35;;;1342:4:33;1365:17;:8;:17;:::i;1439:72:19:-;;1503:1;1439:72;;;;:::i;:::-;1113:145:11;1245:5;1113:145;;1245:5;:::i;1113:145::-;;;;;;:::i;2789:96:3:-;2860:18;;:::i;866:2876:35:-;;;;;;;;;;;;:::i;10310:206:31:-;866:2876:35;;10453:1:31;;10446:8;;;;:::i;:::-;;;:63;;;;;;;:::i;:::-;10461:48;10475:17;10461:41;10494:7;10475:17;10461:41;10475:17;;10494:7;;10500:1;10494:7;:::i;10461:41::-;14439:109;;;;;;14289:265;;10461:41;:48;;:::i;8145:210::-;;8310:38;8318:17;8310:38;8145:210;;8257:16;866:2876:35;;;8257:16:31;8318:17;;866:2876:35;;8310:38:31;;:::i;2002:128:19:-;2067:8;;:::i;:::-;2063:61;;2002:128::o;2063:61::-;866:2876:35;;-1:-1:-1;;;2098:15:19;;;;7572:32:8;866:2876:35;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;866:2876:35;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::o;6008:1107:8:-;6113:1;;6105:10;;;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;6097:18:8;6093:540;;-1:-1:-1;;;;;;;;;;;6233:21:8;7083:25;6233:21;7083:25;6233:21;6647:16;7083:25;6233:21;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;6647:16::-;-1:-1:-1;;;;;866:2876:35;;6647:16:8;6643:425;;6810:21;;;;;;;;:::i;:::-;866:2876:35;;;6810:21:8;7083:25;:::i;:::-;;;866:2876:35;;;;7083:25:8;;;;;866:2876:35;;;;;;;7083:25:8;;;;6008:1107::o;6643:425::-;7021:22;:13;;;;:::i;:::-;:22;;;;;:::i;:::-;;;:::i;6093:540::-;6307:15;;;;;;;;:::i;:::-;6340:19;;;6336:115;;-1:-1:-1;;;;;;;;;;;6589:19:8;;7083:25;6589:19;6647:16;7083:25;6589:19;6571:37;6589:19;;7083:25;6589:19;866:2876:35;;;6589:19:8;6571:15;;;;:::i;:::-;:37;:::i;6336:115::-;6386:50;;;;866:2876:35;;;;6386:50:8;-1:-1:-1;;;6386:50:8;;;;;;;;;:::i;931:109:32:-;1002:31;1020:12;1002:31;:::i;866:2876:35:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;866:2876:35;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;866:2876:35;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;11657:922:31:-;;;;;866:2876:35;;11870:1:31;11864:7;;;;:::i;:::-;;;11860:713;;;11916:28;11936:7;;;;11942:1;11936:7;:::i;:::-;11916:28;14439:109;;;;;;14289:265;;11916:28;11975:9;;;;:::i;:::-;12018:11;;;;:::i;:::-;12103:13;866:2876:35;;;;;;12103:13:31;12099:89;;12251:14;;866:2876:35;;;;;;12251:14:31;12247:163;;12285:19;;;;;;:::i;12247:163::-;12353:41;;;;;12343:52;12353:41;;;:::i;:::-;;;;866:2876:35;;;;;;12353:41:31;-1:-1:-1;;;;;866:2876:35;;12353:41:31;;;866:2876:35;12343:52:31;:::i;12099:89::-;866:2876:35;;-1:-1:-1;;;12143:30:31;;;;7572:32:8;11860:713:31;12489:41;;12479:52;12489:41;12545:17;12489:41;;;;:::i;:::-;866:2876:35;;;;12489:41:31;;;866:2876:35;;12489:41:31;-1:-1:-1;;;;;866:2876:35;;12489:41:31;;;866:2876:35;12343:52:31;:::i;12479:::-;12545:17;:::i;1850:84:19:-;1920:7;;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;14296:213:29;14374:24;14382:16;14374:24;:::i;:::-;;;14370:103;;14489:13;;;:::i;14370:103::-;14421:41;;;866:2876:35;;;;14421:41:29;-1:-1:-1;;;14421:41:29;;4302:42;;;14452:2;14421:41;;;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":922,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":2898,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_addresst_uint256":{"entryPoint":1139,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":2700,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_addresst_uint32":{"entryPoint":3298,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes32":{"entryPoint":1315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_address":{"entryPoint":1392,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes4":{"entryPoint":846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":1126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":3285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":2687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":3799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage_ptr":{"entryPoint":10885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":6504,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":9007,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":6953,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes1":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes1_string_string_uint256_address_bytes32_array_uint256_dyn":{"entryPoint":2184,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address_address_uint256_uint256_uint256":{"entryPoint":6418,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_bytes32_address_uint256_uint256":{"entryPoint":6152,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bytes32_bytes32_bytes32_uint256_address":{"entryPoint":9233,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_uint8_bytes32_bytes32":{"entryPoint":10980,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by_to_uint8_fromStack":{"entryPoint":7820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by_uint256":{"entryPoint":7829,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_rational_by_uint256_to_uint8_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":1024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":3667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage_ptr":{"entryPoint":10784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_589e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Checkpoint208":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Checkpoint208_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_rational_by_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_stringliteral_589e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":5029,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint48":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":5868,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":12003,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Checkpoint208":{"entryPoint":6891,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":5201,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":5850,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":5250,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Checkpoint208":{"entryPoint":6881,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5826,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":5221,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_Checkpoint208_storage_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_Checkpoint208_to_array_struct_Checkpoint208_storage_dyn_ptr":{"entryPoint":12945,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint208":{"entryPoint":3438,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":4940,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint208":{"entryPoint":3498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5577,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_RecoverError":{"entryPoint":11274,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_CUSTODIAN_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DEFAULT_ADMIN_ROLE":{"entryPoint":2548,"id":null,"parameterSlots":0,"returnSlots":1},"constant_DELEGATION_TYPEHASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_FALLBACK_SENTINEL":{"entryPoint":10774,"id":null,"parameterSlots":0,"returnSlots":1},"constant_LIMITER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_SUPPLY":{"entryPoint":1512,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MINTER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_PAUSER_ROLE":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_PERMIT_TYPEHASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_TYPE_HASH":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":4138,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_ptr_to_string":{"entryPoint":10921,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":3903,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":10971,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_0_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1000000000000000000000000000_by_1_to_uint256":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_128_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_16_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_16_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_18446744073709551616_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_1_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_208_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_255_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_256_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_32_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_340282366920938463463374607431768211456_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_3_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_4294967296_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_48_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_4_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_5_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_64_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_8_by_1_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":4100,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":4087,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint208":{"entryPoint":7985,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_3d72_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_9f79_to_string":{"entryPoint":5324,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_Checkpoint208_storage_to_struct_Checkpoint208":{"entryPoint":11609,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":4129,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":4109,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint208_to_uint208":{"entryPoint":12826,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint208_to_uint256":{"entryPoint":4628,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint32":{"entryPoint":10640,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint48":{"entryPoint":7856,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint32_to_uint256":{"entryPoint":10621,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint48_to_uint256":{"entryPoint":4607,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint48_to_uint48":{"entryPoint":12764,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3870,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_ptr":{"entryPoint":10895,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536":{"entryPoint":5273,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":933,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_Checkpoint208_to_struct_Checkpoint":{"entryPoint":12869,"id":null,"parameterSlots":2,"returnSlots":0},"dispatch_internal_in_out":{"entryPoint":13619,"id":null,"parameterSlots":3,"returnSlots":1},"external_fun_CLOCK_MODE":{"entryPoint":1789,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_CUSTODIAN_ROLE":{"entryPoint":2814,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":2566,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DOMAIN_SEPARATOR":{"entryPoint":1568,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_LIMITER_ROLE":{"entryPoint":2621,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_SUPPLY":{"entryPoint":1541,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":3024,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PAUSER_ROLE":{"entryPoint":3216,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowance":{"entryPoint":3161,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":1174,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_availableBalance":{"entryPoint":2521,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":1970,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_blockUser":{"entryPoint":1692,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_blocked":{"entryPoint":3189,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":1765,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnFrom":{"entryPoint":1997,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_checkpoints":{"entryPoint":3376,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_clock":{"entryPoint":2415,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decimals":{"entryPoint":1452,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegate":{"entryPoint":1869,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegateBySig":{"entryPoint":2783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_delegates":{"entryPoint":1816,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_eip712Domain":{"entryPoint":2308,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_freeze":{"entryPoint":1362,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_frozen":{"entryPoint":2871,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastTotalSupply":{"entryPoint":2360,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPastVotes":{"entryPoint":1664,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1335,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVotes":{"entryPoint":2494,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":1427,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":2387,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":1740,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1041,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nonces":{"entryPoint":2047,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_numCheckpoints":{"entryPoint":1920,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":2074,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":1893,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_permit":{"entryPoint":2993,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_remainingSupply":{"entryPoint":3106,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":1595,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":3081,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":873,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":2467,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1202,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":2593,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1287,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unblockUser":{"entryPoint":1640,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unfreeze":{"entryPoint":2022,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":1716,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3625,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":5408,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":5470,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint208":{"entryPoint":7955,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":3938,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint48":{"entryPoint":7936,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3831,"id":null,"parameterSlots":2,"returnSlots":0},"fun_CLOCK_MODE":{"entryPoint":5332,"id":550,"parameterSlots":0,"returnSlots":1},"fun_DOMAIN_SEPARATOR":{"entryPoint":4484,"id":2022,"parameterSlots":0,"returnSlots":1},"fun_EIP712Name":{"entryPoint":8786,"id":3707,"parameterSlots":0,"returnSlots":1},"fun_EIP712Version":{"entryPoint":8831,"id":3719,"parameterSlots":0,"returnSlots":1},"fun__approve":{"entryPoint":11649,"id":9368,"parameterSlots":4,"returnSlots":0},"fun__blockUser":{"entryPoint":8221,"id":9271,"parameterSlots":1,"returnSlots":1},"fun__burn":{"entryPoint":8442,"id":1584,"parameterSlots":2,"returnSlots":0},"fun__checkRole":{"entryPoint":7308,"id":93,"parameterSlots":1,"returnSlots":0},"fun__checkpoints":{"entryPoint":9130,"id":936,"parameterSlots":2,"returnSlots":1},"fun__delegate":{"entryPoint":8551,"id":766,"parameterSlots":2,"returnSlots":0},"fun__mint":{"entryPoint":8381,"id":1551,"parameterSlots":2,"returnSlots":0},"fun__numCheckpoints":{"entryPoint":8673,"id":917,"parameterSlots":1,"returnSlots":1},"fun__pause":{"entryPoint":8778,"id":2467,"parameterSlots":0,"returnSlots":0},"fun__pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun__push":{"entryPoint":11952,"id":971,"parameterSlots":3,"returnSlots":2},"fun__revokeRole":{"entryPoint":7639,"id":294,"parameterSlots":2,"returnSlots":1},"fun__unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun__update":{"entryPoint":12317,"id":9593,"parameterSlots":3,"returnSlots":0},"fun_add":{"entryPoint":3488,"id":985,"parameterSlots":2,"returnSlots":1},"fun_allowance":{"entryPoint":6826,"id":1338,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":9154,"id":9875,"parameterSlots":4,"returnSlots":0},"fun_approve_1362":{"entryPoint":3922,"id":1362,"parameterSlots":2,"returnSlots":1},"fun_approve_1602":{"entryPoint":6940,"id":1602,"parameterSlots":3,"returnSlots":0},"fun_approve_1662":{"entryPoint":12064,"id":1662,"parameterSlots":4,"returnSlots":0},"fun_at":{"entryPoint":11618,"id":8188,"parameterSlots":2,"returnSlots":1},"fun_availableBalance":{"entryPoint":6113,"id":9547,"parameterSlots":1,"returnSlots":1},"fun_average":{"entryPoint":11847,"id":4088,"parameterSlots":2,"returnSlots":1},"fun_balanceOf":{"entryPoint":5508,"id":1297,"parameterSlots":1,"returnSlots":1},"fun_blockNumber":{"entryPoint":8504,"id":8961,"parameterSlots":0,"returnSlots":1},"fun_blockUser":{"entryPoint":4820,"id":9789,"parameterSlots":1,"returnSlots":0},"fun_blockUser_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_blocked":{"entryPoint":6858,"id":9240,"parameterSlots":1,"returnSlots":1},"fun_buildDomainSeparator":{"entryPoint":9290,"id":3637,"parameterSlots":0,"returnSlots":1},"fun_burn":{"entryPoint":5186,"id":1813,"parameterSlots":1,"returnSlots":0},"fun_burnFrom":{"entryPoint":5536,"id":1834,"parameterSlots":2,"returnSlots":0},"fun_byteLength":{"entryPoint":12593,"id":2602,"parameterSlots":1,"returnSlots":1},"fun_checkRole":{"entryPoint":9177,"id":114,"parameterSlots":2,"returnSlots":0},"fun_checkpoints":{"entryPoint":6921,"id":2154,"parameterSlots":2,"returnSlots":1},"fun_clock":{"entryPoint":6061,"id":530,"parameterSlots":0,"returnSlots":1},"fun_decimals":{"entryPoint":4474,"id":1275,"parameterSlots":0,"returnSlots":1},"fun_delegate":{"entryPoint":5455,"id":674,"parameterSlots":1,"returnSlots":0},"fun_delegateBySig":{"entryPoint":6206,"id":731,"parameterSlots":6,"returnSlots":0},"fun_delegates":{"entryPoint":5427,"id":657,"parameterSlots":1,"returnSlots":1},"fun_domainSeparatorV4":{"entryPoint":7475,"id":3616,"parameterSlots":0,"returnSlots":1},"fun_eip712Domain":{"entryPoint":5903,"id":3695,"parameterSlots":0,"returnSlots":7},"fun_freeze":{"entryPoint":4400,"id":9480,"parameterSlots":2,"returnSlots":0},"fun_freeze_inner":{"entryPoint":4200,"id":null,"parameterSlots":2,"returnSlots":0},"fun_frozen":{"entryPoint":6395,"id":9438,"parameterSlots":1,"returnSlots":1},"fun_getPastTotalSupply":{"entryPoint":5973,"id":633,"parameterSlots":1,"returnSlots":1},"fun_getPastVotes":{"entryPoint":4646,"id":601,"parameterSlots":2,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":4004,"id":128,"parameterSlots":1,"returnSlots":1},"fun_getVotes":{"entryPoint":6079,"id":565,"parameterSlots":1,"returnSlots":1},"fun_getVotingUnits":{"entryPoint":10271,"id":2124,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":7351,"id":256,"parameterSlots":2,"returnSlots":1},"fun_grantRole_147":{"entryPoint":4445,"id":147,"parameterSlots":2,"returnSlots":0},"fun_grantRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_hasRole":{"entryPoint":6029,"id":80,"parameterSlots":2,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":8933,"id":3653,"parameterSlots":1,"returnSlots":1},"fun_insert":{"entryPoint":12986,"id":8282,"parameterSlots":3,"returnSlots":2},"fun_isCustodian":{"entryPoint":7266,"id":9816,"parameterSlots":1,"returnSlots":1},"fun_latest":{"entryPoint":8874,"id":8107,"parameterSlots":1,"returnSlots":1},"fun_length":{"entryPoint":10601,"id":8170,"parameterSlots":1,"returnSlots":1},"fun_maxSupply":{"entryPoint":12395,"id":2056,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":5176,"id":9776,"parameterSlots":2,"returnSlots":0},"fun_mint_inner":{"entryPoint":5052,"id":null,"parameterSlots":2,"returnSlots":0},"fun_moveDelegateVotes":{"entryPoint":10280,"id":899,"parameterSlots":3,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":2229,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":3912,"id":1257,"parameterSlots":0,"returnSlots":1},"fun_nonces":{"entryPoint":5757,"id":9891,"parameterSlots":1,"returnSlots":1},"fun_nonces_2012":{"entryPoint":8704,"id":2012,"parameterSlots":1,"returnSlots":1},"fun_nonces_2274":{"entryPoint":10727,"id":2274,"parameterSlots":1,"returnSlots":1},"fun_numCheckpoints":{"entryPoint":5499,"id":2137,"parameterSlots":1,"returnSlots":1},"fun_pause":{"entryPoint":5818,"id":9733,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":5489,"id":2426,"parameterSlots":0,"returnSlots":1},"fun_permit":{"entryPoint":6546,"id":1995,"parameterSlots":7,"returnSlots":0},"fun_push":{"entryPoint":12564,"id":7910,"parameterSlots":3,"returnSlots":2},"fun_recover":{"entryPoint":8974,"id":3443,"parameterSlots":4,"returnSlots":1},"fun_remainingSupply":{"entryPoint":6807,"id":9827,"parameterSlots":0,"returnSlots":1},"fun_renounceRole":{"entryPoint":4492,"id":189,"parameterSlots":2,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":10742,"id":2438,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":10236,"id":2451,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":6797,"id":166,"parameterSlots":2,"returnSlots":0},"fun_revokeRole_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_spendAllowance":{"entryPoint":6992,"id":1710,"parameterSlots":3,"returnSlots":0},"fun_sqrt":{"entryPoint":9525,"id":4815,"parameterSlots":1,"returnSlots":1},"fun_subtract":{"entryPoint":3535,"id":999,"parameterSlots":2,"returnSlots":1},"fun_supportsInterface":{"entryPoint":3545,"id":62,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_3817":{"entryPoint":null,"id":3817,"parameterSlots":1,"returnSlots":1},"fun_symbol":{"entryPoint":6069,"id":1266,"parameterSlots":0,"returnSlots":1},"fun_throwError":{"entryPoint":11284,"id":3492,"parameterSlots":2,"returnSlots":0},"fun_toString":{"entryPoint":12025,"id":2570,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback":{"entryPoint":10930,"id":2669,"parameterSlots":2,"returnSlots":1},"fun_toTypedDataHash":{"entryPoint":null,"id":3793,"parameterSlots":2,"returnSlots":1},"fun_toUint":{"entryPoint":null,"id":7200,"parameterSlots":1,"returnSlots":1},"fun_toUint208":{"entryPoint":11884,"id":5631,"parameterSlots":1,"returnSlots":1},"fun_toUint32":{"entryPoint":10662,"id":6247,"parameterSlots":1,"returnSlots":1},"fun_toUint48":{"entryPoint":7869,"id":6191,"parameterSlots":1,"returnSlots":1},"fun_totalSupply":{"entryPoint":3955,"id":1284,"parameterSlots":0,"returnSlots":1},"fun_transfer":{"entryPoint":7093,"id":1441,"parameterSlots":3,"returnSlots":0},"fun_transferFrom":{"entryPoint":3965,"id":1394,"parameterSlots":3,"returnSlots":1},"fun_transferVotingUnits":{"entryPoint":12411,"id":821,"parameterSlots":3,"returnSlots":0},"fun_transfer_1321":{"entryPoint":6141,"id":1321,"parameterSlots":2,"returnSlots":1},"fun_tryRecover":{"entryPoint":11033,"id":3407,"parameterSlots":4,"returnSlots":3},"fun_unblockUser":{"entryPoint":7732,"id":9301,"parameterSlots":1,"returnSlots":1},"fun_unblockUser_9802":{"entryPoint":4598,"id":9802,"parameterSlots":1,"returnSlots":0},"fun_unblockUser_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_unfreeze":{"entryPoint":5747,"id":9528,"parameterSlots":2,"returnSlots":0},"fun_unfreeze_inner":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":0},"fun_unpause":{"entryPoint":8373,"id":2483,"parameterSlots":0,"returnSlots":0},"fun_unpause_9743":{"entryPoint":4881,"id":9743,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_unsafeAccess":{"entryPoint":null,"id":8401,"parameterSlots":2,"returnSlots":1},"fun_update":{"entryPoint":9166,"id":9851,"parameterSlots":3,"returnSlots":0},"fun_update_1518":{"entryPoint":13293,"id":1518,"parameterSlots":3,"returnSlots":0},"fun_update_1868":{"entryPoint":13282,"id":1868,"parameterSlots":3,"returnSlots":0},"fun_update_2110":{"entryPoint":11725,"id":2110,"parameterSlots":3,"returnSlots":0},"fun_update_9337":{"entryPoint":12661,"id":9337,"parameterSlots":3,"returnSlots":0},"fun_update_inner":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"fun_upperBinaryLookup":{"entryPoint":10118,"id":8334,"parameterSlots":4,"returnSlots":1},"fun_upperLookupRecent":{"entryPoint":7998,"id":8077,"parameterSlots":2,"returnSlots":1},"fun_useCheckedNonce":{"entryPoint":9036,"id":2314,"parameterSlots":2,"returnSlots":0},"fun_useNonce":{"entryPoint":9091,"id":2289,"parameterSlots":1,"returnSlots":1},"getter_fun_CUSTODIAN_ROLE":{"entryPoint":null,"id":9651,"parameterSlots":0,"returnSlots":1},"getter_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":2558,"id":29,"parameterSlots":0,"returnSlots":1},"getter_fun_LIMITER_ROLE":{"entryPoint":null,"id":9646,"parameterSlots":0,"returnSlots":1},"getter_fun_MAX_SUPPLY":{"entryPoint":1533,"id":9658,"parameterSlots":0,"returnSlots":1},"getter_fun_MINTER_ROLE":{"entryPoint":null,"id":9641,"parameterSlots":0,"returnSlots":1},"getter_fun_PAUSER_ROLE":{"entryPoint":null,"id":9636,"parameterSlots":0,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":4147,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":3988,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyCustodian":{"entryPoint":4035,"id":9425,"parameterSlots":2,"returnSlots":0},"modifier_onlyCustodian_9488":{"entryPoint":5551,"id":9425,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole":{"entryPoint":5766,"id":40,"parameterSlots":0,"returnSlots":0},"modifier_onlyRole_139":{"entryPoint":4410,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_158":{"entryPoint":6770,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_9737":{"entryPoint":4829,"id":40,"parameterSlots":0,"returnSlots":0},"modifier_onlyRole_9751":{"entryPoint":4889,"id":40,"parameterSlots":2,"returnSlots":0},"modifier_onlyRole_9782":{"entryPoint":4766,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_onlyRole_9795":{"entryPoint":4544,"id":40,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused":{"entryPoint":8713,"id":2409,"parameterSlots":0,"returnSlots":0},"modifier_whenNotPaused_1857":{"entryPoint":13257,"id":2409,"parameterSlots":3,"returnSlots":0},"modifier_whenPaused":{"entryPoint":8303,"id":2417,"parameterSlots":0,"returnSlots":0},"panic_error_0x00":{"entryPoint":12728,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":3416,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9488,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11237,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3603,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11485,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3809,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x51":{"entryPoint":13597,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_uint208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Checkpoint208":{"entryPoint":11547,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":5417,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":5479,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint208":{"entryPoint":7975,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":3945,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint48":{"entryPoint":7945,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_589e":{"entryPoint":4953,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":807,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":11021,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_left_uint256_uint8":{"entryPoint":9463,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_uint256_uint8":{"entryPoint":9438,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_Checkpoint208__dyn":{"entryPoint":11507,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_Checkpoint208__dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"store_literal_in_memory_589e28ac608f9f143058f2a935e77548174e1807f5c66c589a20fb07312f6b13":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_1_shift":{"entryPoint":7319,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":8513,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":12750,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":4157,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_6":{"entryPoint":12808,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":8528,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":7328,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint208_to_uint208":{"entryPoint":12846,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":4173,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint48_to_uint48":{"entryPoint":12785,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_Checkpoint208_to_struct_Checkpoint":{"entryPoint":12925,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":11259,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":1092,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":812,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":1120,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint32":{"entryPoint":3273,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint8":{"entryPoint":2678,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_div_uint256":{"entryPoint":9510,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_mul_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_uint208":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_uint256":{"entryPoint":5863,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_Checkpoint208":{"entryPoint":6913,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint208":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"3514":[{"length":32,"start":7556}],"3516":[{"length":32,"start":7601}],"3518":[{"length":32,"start":7497}],"3520":[{"length":32,"start":9361}],"3522":[{"length":32,"start":9328}],"3525":[{"length":32,"start":8791}],"3528":[{"length":32,"start":8836}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461032257806306fdde031461031d578063095ea7b31461031857806318160ddd1461031357806323b872dd1461030e578063248a9ca31461030957806324bce60c146103045780632f2ff15d146102ff578063313ce567146102fa57806332cb6b0c146102f55780633644e515146102f057806336568abe146102eb57806339d319e5146102e65780633a46b1a8146102e15780633da01325146102dc5780633f4ba83a146102d757806340c10f19146102d257806342966c68146102cd5780634bf5d7e9146102c8578063587cde1e146102c35780635c19a95c146102be5780635c975abb146102b95780636fcfff45146102b457806370a08231146102af57806379cc6790146102aa5780637b46b80b146102a55780637ecebe00146102a05780638456cb591461029b57806384b0196e146102965780638e539e8c1461029157806391d148541461028c57806391ddadf41461028757806395d89b41146102825780639ab24eb01461027d578063a0821be314610278578063a217fddf14610273578063a9059cbb1461026e578063b3de421414610269578063c3cda52014610264578063c79445d01461025f578063d05166501461025a578063d505accf14610255578063d539139314610250578063d547741f1461024b578063da0239a614610246578063dd62ed3e14610241578063e59621951461023c578063e63ab1e9146102375763f1127ed80361032757610d30565b610c90565b610c75565b610c59565b610c22565b610c09565b610bd0565b610bb1565b610b37565b610afe565b610adf565b610a3d565b610a21565b610a06565b6109d9565b6109be565b6109a3565b61096f565b610953565b610938565b610904565b61081a565b6107ff565b6107e6565b6107cd565b6107b2565b610780565b610765565b61074d565b610718565b6106fd565b6106e5565b6106cc565b6106b4565b61069c565b610680565b610668565b61063b565b610620565b610605565b6105ac565b610593565b610552565b610537565b610507565b6104b2565b610496565b610411565b610369565b600080fd5b6001600160e01b031981165b0361032757565b9050359061034c8261032c565b565b90602082820312610327576103629161033f565b90565b9052565b346103275761039661038461037f36600461034e565b610dd9565b60405191829182901515815260200190565b0390f35b600091031261032757565b60005b8381106103b85750506000910152565b81810151838201526020016103a8565b6103e96103f26020936103fc936103dd815190565b80835293849260200190565b958691016103a5565b601f01601f191690565b0190565b6020808252610362929101906103c8565b346103275761042136600461039a565b61039661042c610f48565b60405191829182610400565b6001600160a01b031690565b6001600160a01b038116610338565b9050359061034c82610444565b80610338565b9050359061034c82610460565b91906040838203126103275761036290602061048f8286610453565b9401610466565b34610327576103966103846104ac366004610473565b90610f52565b34610327576104c236600461039a565b6103966104cd610f73565b6040515b9182918290815260200190565b9091606082840312610327576103626104f78484610453565b93604061048f8260208701610453565b346103275761039661038461051d3660046104de565b91610f7d565b906020828203126103275761036291610466565b34610327576103966104cd61054d366004610523565b610fa4565b346103275761056b610565366004610473565b90611130565b604051005b91906040838203126103275761036290602061058c8286610466565b9401610453565b346103275761056b6105a6366004610570565b9061115d565b34610327576105bc36600461039a565b6103966105c761117a565b6040519182918260ff909116815260200190565b6103626103626103629290565b6103626b033b2e3c9fd0803ce80000006105db565b6103626105e8565b346103275761061536600461039a565b6103966104cd6105fd565b346103275761063036600461039a565b6103966104cd611184565b346103275761056b61064e366004610570565b9061118c565b906020828203126103275761036291610453565b346103275761056b61067b366004610654565b6111f6565b34610327576103966104cd610696366004610473565b90611226565b346103275761056b6106af366004610654565b6112d4565b34610327576106c436600461039a565b61056b611311565b346103275761056b6106df366004610473565b90611438565b346103275761056b6106f8366004610523565b611442565b346103275761070d36600461039a565b61039661042c6114d4565b346103275761039661073361072e366004610654565b611533565b604051918291826001600160a01b03909116815260200190565b346103275761056b610760366004610654565b61154f565b346103275761077536600461039a565b610396610384611571565b346103275761039661079b610796366004610654565b61157b565b6040519182918263ffffffff909116815260200190565b34610327576103966104cd6107c8366004610654565b611584565b346103275761056b6107e0366004610473565b906115a0565b346103275761056b6107f9366004610473565b90611673565b34610327576103966104cd610815366004610654565b61167d565b346103275761082a36600461039a565b61056b6116ba565b9061085261084b610841845190565b8084529260200190565b9260200190565b9060005b8181106108635750505090565b9091926108806108796001928651815260200190565b9460200190565b929101610856565b939591946108e06108d86108f7956108ca6108f0956103629c9a6108bd60e08c019260008d01906001600160f81b0319169052565b8a820360208c01526103c8565b9088820360408a01526103c8565b976060870152565b6001600160a01b03166080850152565b60a0830152565b60c0818403910152610832565b346103275761091436600461039a565b61039661091f61170f565b9361092f97959793919360405190565b97889788610888565b34610327576103966104cd61094e366004610523565b611755565b3461032757610396610384610969366004610570565b9061178d565b346103275761097f36600461039a565b61039661098a6117ad565b6040519182918265ffffffffffff909116815260200190565b34610327576109b336600461039a565b61039661042c6117b5565b34610327576103966104cd6109d4366004610654565b6117bf565b34610327576103966104cd6109ef366004610654565b6117e1565b61036260006105db565b6103626109f4565b3461032757610a1636600461039a565b6103966104cd6109fe565b3461032757610396610384610a37366004610473565b906117fd565b3461032757610a4d36600461039a565b6103967ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c6104cd565b60ff8116610338565b9050359061034c82610a76565b909160c08284031261032757610aa28383610453565b92610ab08160208501610466565b92610abe8260408301610466565b92610362610acf8460608501610a7f565b9360a061048f8260808701610466565b346103275761056b610af2366004610a8c565b9493909392919261183e565b3461032757610b0e36600461039a565b6103967fe28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b96104cd565b34610327576103966104cd610b4d366004610654565b6118fb565b60e08183031261032757610b668282610453565b92610b748360208401610453565b92610b828160408501610466565b92610b908260608301610466565b92610362610ba18460808501610a7f565b9360c061048f8260a08701610466565b346103275761056b610bc4366004610b52565b95949094939193611992565b3461032757610be036600461039a565b6103967f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66104cd565b346103275761056b610c1c366004610570565b90611a8d565b3461032757610c3236600461039a565b6103966104cd611a97565b91906040838203126103275761036290602061058c8286610453565b34610327576103966104cd610c6f366004610c3d565b90611aaa565b3461032757610396610384610c8b366004610654565b611aca565b3461032757610ca036600461039a565b6103967f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104cd565b63ffffffff8116610338565b9050359061034c82610cc9565b919060408382031261032757610362906020610cfe8286610453565b9401610cd5565b60408101929161034c9190805165ffffffffffff1682526020908101516001600160d01b0316910152565b3461032757610396610d4c610d46366004610ce2565b90611b09565b60405191829182610d05565b634e487b7160e01b600052601160045260246000fd5b610d89906001600160d01b03165b916001600160d01b031690565b01906001600160d01b038211610d9b57565b610d58565b6103629190610d6e565b610dbc906001600160d01b0316610d7c565b9003906001600160d01b038211610d9b57565b6103629190610daa565b637965db0b60e01b6001600160e01b0319821614908115610df8575090565b61036291506001600160e01b0319166301ffc9a760e01b1490565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610e49575b6020831014610e4457565b610e13565b91607f1691610e39565b80546000939291610e70610e6683610e29565b8085529360200190565b9160018116908115610ec25750600114610e8957505050565b610e9c9192939450600052602060002090565b916000925b818410610eae5750500190565b805484840152602090930192600101610ea1565b92949550505060ff1916825215156020020190565b9061036291610e53565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610f1957604052565b610ee1565b9061034c610f3892610f2f60405190565b93848092610ed7565b0383610ef7565b61036290610f1e565b6103626003610f3f565b610f5d919033611b1c565b600190565b6103629081565b6103629054610f62565b6103626002610f69565b610f5d929190610f8f83335b83611b50565b611bb5565b905b600052602052604060002090565b6001610fbd61036292610fb5600090565b506006610f94565b01610f69565b90610fd4610fd033611c62565b1590565b610fe15761034c91611068565b60405163bb4be5f360e01b8152600490fd5b0390fd5b6104386103626103629290565b61036290610ff7565b61036290610438906001600160a01b031682565b6103629061100d565b61036290611021565b90610f969061102a565b90600019905b9181191691161790565b9061105d610362611064926105db565b825461103d565b9055565b6110756104386000611004565b6001600160a01b0382161461111e5761108d816117e1565b8290611098565b9190565b106110ed576110e86110de826110d9856110d47fa065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45966008611033565b61104d565b61102a565b926104d160405190565b0390a2565b610ff3906110fa60405190565b6314884b4960e01b8152918291600483016001600160a01b03909116815260200190565b60405163959d408b60e01b8152600490fd5b9061034c91610fc3565b9061034c9161115061114b82610fa4565b611c8c565b9061115a91611cb7565b50565b9061034c9161113a565b6111746103626103629290565b60ff1690565b6103626012611167565b610362611d33565b9061119633610438565b6001600160a01b038216036111ae5761115a91611dd7565b60405163334bd91960e11b8152600490fd5b61034c906111ed7ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c611c8c565b61115a90611e34565b61034c906111c0565b6103626103626103629265ffffffffffff1690565b6103629081906001600160d01b031681565b61122e6117ad565b611237816111ff565b83101561126857506103629161125d61125761036261126394600d611033565b91611ebd565b90611f3e565b611214565b82610ff361127560405190565b637669fc0f60e11b81529283926004840190815265ffffffffffff909116602082015260400190565b61034c906112cb7ff7b34cf87af24ce01c1aff9f518b133989851466d994e0016fc14651fa02826c611c8c565b61115a9061201d565b61034c9061129e565b6113067f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611c8c565b61034c61034c6120b5565b61034c6112dd565b61034c91906113477f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6611c8c565b6113bc565b91908201809211610d9b57565b1561136057565b60405162461bcd60e51b815260206004820152601960248201527f555356503a204d617820737570706c79206578636565646564000000000000006044820152606490fd5b90815260408101929161034c9160200152565b0152565b7f2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb475906114076113f2846113ed610f73565b61134c565b6114006110946103626105e8565b1115611359565b61141183826120bd565b61142261141c610f73565b9161102a565b926110e861142f60405190565b928392836113a5565b9061034c91611319565b61034c90336120fa565b6120fa565b9061034c61145e60405190565b9283610ef7565b67ffffffffffffffff8111610f1957602090601f01601f19160190565b9061149461148f83611465565b611451565b918252565b6114a3601d611482565b7f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b610362611499565b6114dc6117ad565b6115016114f56114ea612138565b65ffffffffffff1690565b9165ffffffffffff1690565b0361150e576103626114cc565b6040516301bfc1c560e61b8152600490fd5b61036290610438565b6103629054611520565b61154a61036291611542600090565b50600c611033565b611529565b61034c9033612167565b612167565b61036290611174565b610362905461155e565b6103626005611567565b610362906121e1565b61159b61036291611593600090565b506000611033565b610f69565b61034c919061144c8233610f89565b906115bc610fd033611c62565b610fe15761034c916115d6565b91908203918211610d9b57565b6115e36104386000611004565b6001600160a01b0382161461111e576115fb816118fb565b828110611642576110de7f9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6926110d9611637866110e8956115c9565b6110d4836008611033565b610ff38261164f60405190565b63168ecf9160e31b8152918291600483016001600160a01b03909116815260200190565b9061034c916115af565b61036290612200565b6116af7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611c8c565b61034c61034c61224a565b61034c611686565b67ffffffffffffffff8111610f195760208091020190565b9061149461148f836116c2565b369037565b9061034c6117026116fc846116da565b936116c2565b601f1901602084016116e7565b611717612252565b9061172061227f565b9061172a3061102a565b61173460006105db565b61174661174160006105db565b6116ec565b600f60f81b9594934693929190565b61175d6117ad565b611766816111ff565b82101561178057506112636103629161125d611257600e90565b90610ff361127560405190565b6103629160006117a26117a893610fb5600090565b01611033565b611567565b610362612138565b6103626004610f3f565b6112636117dc610362610362936117d4600090565b50600d611033565b6122aa565b610362906117f76117f182611584565b916118fb565b906115c9565b610f5d919033611bb5565b6113b861034c94611837606094989795611827608086019a6000870152565b6001600160a01b03166020850152565b6040830152565b919594919390928642116118d457916118cd91611559936118c8866118b08961034c9b9c6118a461188c7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf90565b9161189660405190565b958694602086019485611808565b90810382520382610ef7565b6118c26118bb825190565b9160200190565b206122e5565b61230e565b918261234c565b610ff3876118e160405190565b632341d78760e11b81529182916004830190815260200190565b61159b6103629161190a600090565b506008611033565b91946119616113b89298979561195a60a09661194a61034c9a61193a60c08a019e60008b0152565b6001600160a01b03166020890152565b6001600160a01b03166040870152565b6060850152565b6080830152565b6001600160a01b03909116815260408101929161034c916020905b01906001600160a01b03169052565b9695929491949390936119a28190565b4211611a4b57906118c8856118b08a611a039796956118a46119e17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c990565b916119eb84612383565b8d6119f560405190565b978896602088019687611912565b6001600160a01b0385166001600160a01b03821603611a27575061034c9293611b1c565b8490610ff3611a3560405190565b6325c0072360e11b815292839260048401611968565b610ff390611a5860405190565b63313c898160e11b81529182916004830190815260200190565b9061034c91611a8361114b82610fa4565b9061115a91611dd7565b9061034c91611a72565b610362611aa26105e8565b6117f7610f73565b61036291611ac561159b92611abd600090565b506001611033565b611033565b6117a861036291611ad9600090565b506007611033565b6103626040611451565b611af3611ae1565b906000825260006020830152565b610362611aeb565b9061036291611b16611b01565b506123aa565b9160019161034c936123c2565b6001600160a01b03909116815260608101939261034c9290916040916113b8906020830152565b91611b5b8284611aaa565b6000198103611b6b575b50505050565b818110611b915791611b82611b8894926000940390565b916123c2565b38808080611b65565b82610ff383611b9f60405190565b637dc7a0d960e11b815293849360048501611b29565b929190611bc26000611004565b936001600160a01b0385166001600160a01b03821614611c31576001600160a01b0385166001600160a01b03831614611c005761034c9394506123ce565b610ff385611c0d60405190565b63ec442f0560e01b8152918291600483016001600160a01b03909116815260200190565b610ff385611c3e60405190565b634b637e8f60e11b8152918291600483016001600160a01b03909116815260200190565b610362907fe28434228950b641dbbc0178de89daa359a87c6ee0d8399aeace52a98fe902b961178d565b61034c9033906123d9565b9060ff90611043565b90611cb061036261106492151590565b8254611c97565b611cc4610fd0838361178d565b15611d2c57611ce46001611cdf8460006117a2866006610f94565b611ca0565b611cf861141c611cf2339390565b9361102a565b917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d611d2360405190565b600090a4600190565b5050600090565b611d3c3061102a565b611d766001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916001600160a01b031690565b1480611dae575b15611da6577f000000000000000000000000000000000000000000000000000000000000000090565b61036261244a565b507f00000000000000000000000000000000000000000000000000000000000000004614611d7d565b611de1828261178d565b15611d2c57611dfb6000611cdf84826117a2866006610f94565b611e0961141c611cf2339390565b917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b611d2360405190565b611e3d81611aca565b9081611e47575090565b806110d96000611cdf611e5b946007611033565b7f798117ec059ab8d319461ef2502b1f9d8a47cd966bfd1f3e23b6f26c30bebb77611e8560405190565b600090a290565b61036590611167565b91602061034c9294936113b860408201966000830190611e8c565b6114ea6103626103629290565b611ecc65ffffffffffff6111ff565b8111611edb5761036290611eb0565b610ff390611ee860405190565b6306dfcc6560e41b8152918291603060048401611e95565b610362906114ea565b6103629054611f00565b6103629060301c5b6001600160d01b031690565b6103629054611f13565b611f1b6103626103629290565b8054611f6f90600092611f50846105db565b8483611f5c60056105db565b8111611fb1575b509091015b9485612786565b611f78826105db565b8103611f8957506103629150611f31565b61036292611f9e611fab926117f760016105db565b9060005260206000200190565b01611f27565b806117f7611fbe92612535565b611fdf6114ea83611fd9848883015b60005260206000200190565b01611f09565b65ffffffffffff89161015611ffe57611f6892939450935b9291611f63565b611f6892506120179061201160016105db565b9061134c565b92611ff7565b61202681611aca565b908115612031575090565b806110d96001611cdf612045946007611033565b7fca86d8c91ca6d00afd863578cc633a0901fad724592f89649629fe65f61410d2611e8560405190565b6120776127fc565b61034c61208660006005611ca0565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120b033610733565b0390a1565b61034c61206f565b91906120c96000611004565b926001600160a01b0384166001600160a01b038216146120ed5761034c92936123ce565b610ff384611c0d60405190565b91906121066000611004565b926001600160a01b0384166001600160a01b0382161461212b579261034c92936123ce565b610ff384611c3e60405190565b61036243611ebd565b906001600160a01b0390611043565b906121606103626110649261102a565b8254612141565b61034c916121db61217783611533565b9261218c8361218783600c611033565b612150565b6121958161102a565b61219e8561102a565b6121a78561102a565b917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f6121d260405190565b600090a461281f565b91612828565b6121fb6121f6610362610362936117d4600090565b612969565b6129a6565b610362906129e7565b6122116129f6565b61034c61222060016005611ca0565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120b033610733565b61034c612209565b6103627f000000000000000000000000000000000000000000000000000000000000000060095b90612ab2565b6103627f0000000000000000000000000000000000000000000000000000000000000000600a612279565b8054906000906122b9826105db565b83036122ca57506103629150611f31565b61036292611fcd61109484611fab9401926117f760016105db565b610362906122f1611d33565b6042916040519161190160f01b8352600283015260228201522090565b91610362939161232693612320600090565b50612b19565b90929192612c14565b6001600160a01b03909116815260408101929161034c9160200152565b61235581612383565b91829003612361575050565b610ff361236d60405190565b6301d4b62360e61b81529283926004840161232f565b6123929060005b50600b611033565b61036261239e82610f69565b91600183015b9061104d565b906123bd610362610362936117d4611b01565b612d62565b9061034c939291612d81565b9061034c9291612dcd565b906123e7610fd0828461178d565b6123ef575050565b610ff36123fb60405190565b63e2517d3f60e01b81529283926004840161232f565b9095949261034c946124436119839261243c60809661243560a088019c6000890152565b6020870152565b6040850152565b6060830152565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6124cf7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006118a46124bc3061102a565b6040519586946020860194469286612411565b6124da6118bb825190565b2090565b610362906124f26110946103629460ff1690565b901c90565b6103629061250b6110946103629460ff1690565b901b90565b634e487b7160e01b600052601260045260246000fd5b8115612530570490565b612510565b6001612540816105db565b821115612782579061268d61268861036261268161264d61264d61267761265261264d61266d61264d61264d8c6103fc6103629f61264361264d61265c6126669361263361262d88612591846105db565b9061259f600160801b6105db565b8b101561275a575b6125b4600160401b6105db565b811015612738575b6125ca6401000000006105db565b811015612716575b6125de620100006105db565b8110156126f4575b6125f16101006105db565b8110156126d2575b61260360106105db565b8110156126aa575b61261861109460046105db565b1015612692575b61262960036105db565b0290565b91611167565b9e8f9c8d809b81978280966124de565b6103fc818d612526565b6124de565b6103fc818a612526565b6103fc8187612526565b8092612526565b6103fc818c612526565b6103fc8189612526565b8094612526565b821190565b900390565b6126a59061269f85611167565b906124f7565b61261f565b6126c16126cc916126bb6004611167565b906124de565b9161269f6002611167565b9061260b565b6126e36126ee916126bb6008611167565b9161269f6004611167565b906125f9565b612705612710916126bb6010611167565b9161269f6008611167565b906125e6565b612727612732916126bb6020611167565b9161269f6010611167565b906125d2565b612749612754916126bb6040611167565b9161269f6020611167565b906125bc565b5061277c61277161276b6080611167565b8c6124de565b9161269f6040611167565b906125a7565b5090565b93919092612792600090565b505b808210156127f4576127a68183612e47565b906127bd6000611fd9848960005260206000200190565b6127ce65ffffffffffff87166114f5565b11156127dd5750915b91612794565b9291506127ee9061201160016105db565b906127d7565b925050915090565b612807610fd0611571565b61280d57565b604051638dfc202b60e01b8152600490fd5b61036290611584565b9091906001600160a01b0383166001600160a01b038216141580612957575b61285057505050565b6128869061285e6000611004565b906001600160a01b0382166001600160a01b038216036128f5575b506001600160a01b031690565b6001600160a01b03831603612899575050565b8161142261141c6128e87fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724946128df6110946128d96128ef99600d611033565b92612e6c565b60015b90612eb0565b9590611214565b94611214565b7fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248161294161141c6128e861292e6128ef96600d611033565b61293a6110948b612e6c565b60026128e2565b9261294e61142f60405190565b0390a238612879565b5061296260006105db565b8211612847565b600061036291612977600090565b50015490565b6103626103626103629263ffffffff1690565b61299d6103626103629290565b63ffffffff1690565b6129b363ffffffff61297d565b81116129c25761036290612990565b610ff3906129cf60405190565b6306dfcc6560e41b8152918291602060048401611e95565b61159b6103629161238a600090565b6129fe611571565b612a0457565b60405163d93c066560e01b8152600490fd5b61036260ff6105db565b80546000939291612a33610e6683610e29565b9160018116908115610ec25750600114612a4c57505050565b612a5f9192939450600052602060002090565b916000925b818410612a715750500190565b805484840152602090930192600101612a64565b9061036291612a20565b9061034c610f3892612aa060405190565b93848092612a85565b61036290612a8f565b9081612ac2611094610362612a16565b14612ad1575061036290612ef9565b6103629150612aa9565b610362906105db565b6113b861034c94611837606094989795612b03608086019a6000870152565b60ff166020850152565b6040513d6000823e3d90fd5b9091612b2484612adb565b612b506110947f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a06105db565b11612bd15790612b7260209460009493612b6960405190565b94859485612ae4565b838052039060015afa15612bcc57600051600091612b8f83611004565b6001600160a01b0381166001600160a01b03841614612bb85750612bb2836105db565b91929190565b915091612bc4906105db565b909160019190565b612b0d565b505050612bde6000611004565b9160039190565b634e487b7160e01b600052602160045260246000fd5b60041115612c0557565b612be5565b9061034c82612bfb565b612c1e6000612c0a565b612c2782612c0a565b03612c30575050565b612c3a6001612c0a565b612c4382612c0a565b03612c5a5760405163f645eedf60e01b8152600490fd5b612c646002612c0a565b612c6d82612c0a565b03612c9b57610ff3612c7e83612adb565b60405163fce698f760e01b81529182916004830190815260200190565b612cae612ca86003612c0a565b91612c0a565b14612cb65750565b610ff390612cc360405190565b6335e2f38360e21b81529182916004830190815260200190565b634e487b7160e01b600052603260045260246000fd5b8054821015612d1657612d0d600191600052602060002090565b91020190600090565b612cdd565b9061034c612d496000612d2c611ae1565b94611fab612d3b838301611f09565b65ffffffffffff1687840152565b6001600160d01b03166020840152565b61036290612d1b565b610362916000612d7b92612d74611b01565b5001612cf3565b50612d59565b93929190612d8e85611aca565b612d9c5761034c9394612f20565b610ff385612da960405190565b635ff1c9b960e11b8152918291600483016001600160a01b03909116815260200190565b929190612ddb82828661301d565b612de86104386000611004565b6001600160a01b03851614612e02575b61034c929361307b565b612e0a610f73565b93612e1361306b565b94858111612e2357509350612df8565b8590610ff3612e3160405190565b630e58ae9360e11b8152928392600484016113a5565b61201161036292612e56600090565b508083169218612e6660026105db565b90612526565b612e7c6001600160d01b03611214565b8111612e8b5761036290611f31565b610ff390612e9860405190565b6306dfcc6560e41b815291829160d060048401611e95565b90612ed9612edf93612ec0600090565b50612ec96117ad565b92612ed3856122aa565b90613533565b91613114565b9091565b9061034c611702612ef384611482565b93611465565b612f0281613131565b90612f15612f1060206105db565b612ee3565b918252602082015290565b909192612f2d6000611004565b6001600160a01b0381166001600160a01b03841614612fec576001600160a01b0381166001600160a01b03851614612fbb5750612f73846110d485611ac5866001611033565b612f7c57505050565b612fb6612fac611cf27f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361102a565b936104d160405190565b0390a3565b610ff390612fc860405190565b634a1406b160e11b8152918291600483016001600160a01b03909116815260200190565b610ff390612ff960405190565b63e602df0560e01b8152918291600483016001600160a01b03909116815260200190565b92919061302d6104386000611004565b6001600160a01b03851614158061305a575b61304d5761034c9293613175565b610ff3846110fa60405190565b50613064846117e1565b821161303f565b6103626001600160d01b03611214565b906130d36130cd61034c94936130b96130946000611004565b6001600160a01b0381166001600160a01b038416146130f3576001600160a01b031690565b6001600160a01b038516146130d957611533565b91611533565b90612828565b6130ec6130e586612e6c565b600e61293a565b5050611533565b6131066130ff88612e6c565b600e6128df565b50506001600160a01b031690565b9061312c6000612edf9493613127600090565b500190565b6132ba565b61314061314591612782600090565b612adb565b61314f60ff6105db565b1661315a601f6105db565b81116131635790565b604051632cd44ac360e21b8152600490fd5b9291909261318281611aca565b6131ab5761318f84611aca565b61319e579261034c92936133e2565b610ff384612da960405190565b610ff390612da960405190565b634e487b7160e01b600052600060045260246000fd5b9065ffffffffffff90611043565b6114ea6103626103629265ffffffffffff1690565b90613201610362611064926131dc565b82546131ce565b9065ffffffffffff199060301b611043565b61036290611f1b906001600160d01b031682565b9061323e6103626110649261321a565b8254613208565b61034c9161327790602090613269613263825165ffffffffffff1690565b856131f1565b01516001600160d01b031690565b9061322e565b919061328c5761034c91613245565b6131b8565b90815491600160401b831015610f1957826132b491600161034c95018155612cf3565b9061327d565b9192919081546000906132cc826105db565b81111561338b576132f26132e583926117f760016105db565b8560005260206000200190565b016132fc81611f09565b9161330682611f27565b9465ffffffffffff851665ffffffffffff85161161337957879361333165ffffffffffff87166114f5565b03613342575050611094925061322e565b9150915061336561109493613355611ae1565b9384019065ffffffffffff169052565b6001600160d01b0386166020830152613291565b604051632520601d60e01b8152600490fd5b50906133c490611094936133b06133a0611ae1565b65ffffffffffff90931685840152565b6001600160d01b0387166020830152613291565b611f31565b9061034c92916133d76129f6565b9061034c92916133ed565b9061034c92916133c9565b8160006133f981611004565b6001600160a01b0381166001600160a01b0385160361349b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93612fb693612fac9361345b611cf2946104386134548c6113ed6002610f69565b600261104d565b6001600160a01b038316036134815750506110d96134548861347d6002610f69565b0390565b6110d99161348e91611033565b6123a4896103fc83610f69565b9091506134ab61159b8484611033565b8581106134f9577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9385612fb69461345b612fac956104386134ef8c611cf2980390565b6110d48786611033565b83610ff38761350760405190565b63391434e360e21b815293849360048501611b29565b634e487b7160e01b600052605160045260246000fd5b9190918060011461354e5760020361351d5761036291610dcf565b5061036291610da056fea26469706673582212208386d9ed9adf30e66bcdfc5bf711cbd409e21b8c87768b3abb1f2e5f07a7e65464736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x24BCE60C EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x39D319E5 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x3DA01325 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x7B46B80B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xA0821BE3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB3DE4214 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xC79445D0 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xE5962195 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x237 JUMPI PUSH4 0xF1127ED8 SUB PUSH2 0x327 JUMPI PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xC22 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x9D9 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST SUB PUSH2 0x327 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x32C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x33F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x34E JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x327 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x3F2 PUSH1 0x20 SWAP4 PUSH2 0x3FC SWAP4 PUSH2 0x3DD DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x362 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x444 JUMP JUMPDEST DUP1 PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0x460 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x48F DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST SWAP5 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 PUSH2 0x4F7 DUP5 DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x48F DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x4DE JUMP JUMPDEST SWAP2 PUSH2 0xF7D JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x54D CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x58C DUP3 DUP7 PUSH2 0x466 JUMP JUMPDEST SWAP5 ADD PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x115D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x5C7 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 PUSH2 0x5E8 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x615 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x5FD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x630 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x1184 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x118C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP2 PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1226 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6AF CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x56B PUSH2 0x1311 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1438 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1442 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x733 PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x760 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x154F JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x775 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x384 PUSH2 0x1571 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x79B PUSH2 0x796 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x7C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1584 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x7E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x15A0 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0x7F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x1673 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x815 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x167D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x56B PUSH2 0x16BA JUMP JUMPDEST SWAP1 PUSH2 0x852 PUSH2 0x84B PUSH2 0x841 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x863 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x880 PUSH2 0x879 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x856 JUMP JUMPDEST SWAP4 SWAP6 SWAP2 SWAP5 PUSH2 0x8E0 PUSH2 0x8D8 PUSH2 0x8F7 SWAP6 PUSH2 0x8CA PUSH2 0x8F0 SWAP6 PUSH2 0x362 SWAP13 SWAP11 PUSH2 0x8BD PUSH1 0xE0 DUP13 ADD SWAP3 PUSH1 0x0 DUP14 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x3C8 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x3C8 JUMP JUMPDEST SWAP8 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x832 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x914 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x91F PUSH2 0x170F JUMP JUMPDEST SWAP4 PUSH2 0x92F SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0x969 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x178D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x97F CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x98A PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x9B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x42C PUSH2 0x17B5 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x17BF JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9EF CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 PUSH2 0x9F4 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xA16 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x9FE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0xA37 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST SWAP1 PUSH2 0x17FD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xA4D CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x4CD JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0xA76 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x327 JUMPI PUSH2 0xAA2 DUP4 DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xAB0 DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0xABE DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0x362 PUSH2 0xACF DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0xA7F JUMP JUMPDEST SWAP4 PUSH1 0xA0 PUSH2 0x48F DUP3 PUSH1 0x80 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xAF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8C JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x183E JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xB0E CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0xE28434228950B641DBBC0178DE89DAA359A87C6EE0D8399AEACE52A98FE902B9 PUSH2 0x4CD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0xB4D CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x18FB JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x327 JUMPI PUSH2 0xB66 DUP3 DUP3 PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xB74 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x453 JUMP JUMPDEST SWAP3 PUSH2 0xB82 DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0xB90 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0x466 JUMP JUMPDEST SWAP3 PUSH2 0x362 PUSH2 0xBA1 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xA7F JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x48F DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xBC4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB52 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x1992 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xBE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x4CD JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x56B PUSH2 0xC1C CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP1 PUSH2 0x1A8D JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xC32 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH2 0x4CD PUSH2 0x1A97 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0x58C DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x4CD PUSH2 0xC6F CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 PUSH2 0x1AAA JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0x384 PUSH2 0xC8B CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x1ACA JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0xCA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x396 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x4CD JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x338 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x34C DUP3 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x327 JUMPI PUSH2 0x362 SWAP1 PUSH1 0x20 PUSH2 0xCFE DUP3 DUP7 PUSH2 0x453 JUMP JUMPDEST SWAP5 ADD PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 SWAP1 DUP1 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x327 JUMPI PUSH2 0x396 PUSH2 0xD4C PUSH2 0xD46 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE2 JUMP JUMPDEST SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0xDBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xD7C JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0x362 SWAP2 SWAP1 PUSH2 0xDAA JUMP JUMPDEST PUSH4 0x7965DB0B PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xDF8 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE49 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE44 JUMPI JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE39 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xE70 PUSH2 0xE66 DUP4 PUSH2 0xE29 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC2 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE89 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xE9C SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEAE JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEA1 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0xE53 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0xF38 SWAP3 PUSH2 0xF2F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xED7 JUMP JUMPDEST SUB DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x362 PUSH1 0x3 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0xF5D SWAP2 SWAP1 CALLER PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xF5D SWAP3 SWAP2 SWAP1 PUSH2 0xF8F DUP4 CALLER JUMPDEST DUP4 PUSH2 0x1B50 JUMP JUMPDEST PUSH2 0x1BB5 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xFBD PUSH2 0x362 SWAP3 PUSH2 0xFB5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST ADD PUSH2 0xF69 JUMP JUMPDEST SWAP1 PUSH2 0xFD4 PUSH2 0xFD0 CALLER PUSH2 0x1C62 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH2 0x34C SWAP2 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB4BE5F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x438 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1021 JUMP JUMPDEST SWAP1 PUSH2 0xF96 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105D PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x5DB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x103D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1075 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x111E JUMPI PUSH2 0x108D DUP2 PUSH2 0x17E1 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1098 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT PUSH2 0x10ED JUMPI PUSH2 0x10E8 PUSH2 0x10DE DUP3 PUSH2 0x10D9 DUP6 PUSH2 0x10D4 PUSH32 0xA065E63C631C86F1B9F66A4A2F63F2093BF1C2168D23290259DBD969E0222A45 SWAP7 PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST PUSH2 0x102A JUMP JUMPDEST SWAP3 PUSH2 0x4D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x10FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x14884B49 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x959D408B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1150 PUSH2 0x114B DUP3 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST SWAP1 PUSH2 0x115A SWAP2 PUSH2 0x1CB7 JUMP JUMPDEST POP JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x12 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1D33 JUMP JUMPDEST SWAP1 PUSH2 0x1196 CALLER PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11AE JUMPI PUSH2 0x115A SWAP2 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x11ED PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x115A SWAP1 PUSH2 0x1E34 JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x122E PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0x11FF JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x1268 JUMPI POP PUSH2 0x362 SWAP2 PUSH2 0x125D PUSH2 0x1257 PUSH2 0x362 PUSH2 0x1263 SWAP5 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST SWAP2 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST DUP3 PUSH2 0xFF3 PUSH2 0x1275 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD SWAP1 DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x12CB PUSH32 0xF7B34CF87AF24CE01C1AFF9F518B133989851466D994E0016FC14651FA02826C PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x115A SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x34C SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x1306 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x34C PUSH2 0x34C PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1347 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1360 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555356503A204D617820737570706C7920657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH32 0x2E8AC5177A616F2AEC08C3048F5021E4E9743ECE034E8D83BA5CAF76688BB475 SWAP1 PUSH2 0x1407 PUSH2 0x13F2 DUP5 PUSH2 0x13ED PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x134C JUMP JUMPDEST PUSH2 0x1400 PUSH2 0x1094 PUSH2 0x362 PUSH2 0x5E8 JUMP JUMPDEST GT ISZERO PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x1411 DUP4 DUP3 PUSH2 0x20BD JUMP JUMPDEST PUSH2 0x1422 PUSH2 0x141C PUSH2 0xF73 JUMP JUMPDEST SWAP2 PUSH2 0x102A JUMP JUMPDEST SWAP3 PUSH2 0x10E8 PUSH2 0x142F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1319 JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x20FA JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x145E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF19 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1494 PUSH2 0x148F DUP4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x14A3 PUSH1 0x1D PUSH2 0x1482 JUMP JUMPDEST PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1501 PUSH2 0x14F5 PUSH2 0x14EA PUSH2 0x2138 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SUB PUSH2 0x150E JUMPI PUSH2 0x362 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x154A PUSH2 0x362 SWAP2 PUSH2 0x1542 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xC PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x155E JUMP JUMPDEST PUSH2 0x362 PUSH1 0x5 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x1593 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x144C DUP3 CALLER PUSH2 0xF89 JUMP JUMPDEST SWAP1 PUSH2 0x15BC PUSH2 0xFD0 CALLER PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH2 0x34C SWAP2 PUSH2 0x15D6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD9B JUMPI JUMP JUMPDEST PUSH2 0x15E3 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x111E JUMPI PUSH2 0x15FB DUP2 PUSH2 0x18FB JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1642 JUMPI PUSH2 0x10DE PUSH32 0x9BED35CB62AD0DBA04F9D5BFEE4B5BC91443E77DA8A65C4C84834C51BB08B0D6 SWAP3 PUSH2 0x10D9 PUSH2 0x1637 DUP7 PUSH2 0x10E8 SWAP6 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x10D4 DUP4 PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0xFF3 DUP3 PUSH2 0x164F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x168ECF91 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x16AF PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x34C PUSH2 0x34C PUSH2 0x224A JUMP JUMPDEST PUSH2 0x34C PUSH2 0x1686 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF19 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1494 PUSH2 0x148F DUP4 PUSH2 0x16C2 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x1702 PUSH2 0x16FC DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1717 PUSH2 0x2252 JUMP JUMPDEST SWAP1 PUSH2 0x1720 PUSH2 0x227F JUMP JUMPDEST SWAP1 PUSH2 0x172A ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1734 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x1746 PUSH2 0x1741 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x16EC JUMP JUMPDEST PUSH1 0xF PUSH1 0xF8 SHL SWAP6 SWAP5 SWAP4 CHAINID SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x175D PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x11FF JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1780 JUMPI POP PUSH2 0x1263 PUSH2 0x362 SWAP2 PUSH2 0x125D PUSH2 0x1257 PUSH1 0xE SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xFF3 PUSH2 0x1275 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH1 0x0 PUSH2 0x17A2 PUSH2 0x17A8 SWAP4 PUSH2 0xFB5 PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x2138 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x4 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x1263 PUSH2 0x17DC PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x17F7 PUSH2 0x17F1 DUP3 PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH2 0x18FB JUMP JUMPDEST SWAP1 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xF5D SWAP2 SWAP1 CALLER PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x34C SWAP5 PUSH2 0x1837 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1827 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 TIMESTAMP GT PUSH2 0x18D4 JUMPI SWAP2 PUSH2 0x18CD SWAP2 PUSH2 0x1559 SWAP4 PUSH2 0x18C8 DUP7 PUSH2 0x18B0 DUP10 PUSH2 0x34C SWAP12 SWAP13 PUSH2 0x18A4 PUSH2 0x188C PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1896 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 PUSH2 0x1808 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x18BB DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0x230E JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH2 0xFF3 DUP8 PUSH2 0x18E1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x190A PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x1033 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1961 PUSH2 0x13B8 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x195A PUSH1 0xA0 SWAP7 PUSH2 0x194A PUSH2 0x34C SWAP11 PUSH2 0x193A PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 SWAP1 JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP7 SWAP6 SWAP3 SWAP5 SWAP2 SWAP5 SWAP4 SWAP1 SWAP4 PUSH2 0x19A2 DUP2 SWAP1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x1A4B JUMPI SWAP1 PUSH2 0x18C8 DUP6 PUSH2 0x18B0 DUP11 PUSH2 0x1A03 SWAP8 SWAP7 SWAP6 PUSH2 0x18A4 PUSH2 0x19E1 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x19EB DUP5 PUSH2 0x2383 JUMP JUMPDEST DUP14 PUSH2 0x19F5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP7 DUP8 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1A27 JUMPI POP PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x1B1C JUMP JUMPDEST DUP5 SWAP1 PUSH2 0xFF3 PUSH2 0x1A35 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1968 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x1A58 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1A83 PUSH2 0x114B DUP3 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 PUSH2 0x115A SWAP2 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP2 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1AA2 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0xF73 JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH2 0x1AC5 PUSH2 0x159B SWAP3 PUSH2 0x1ABD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x17A8 PUSH2 0x362 SWAP2 PUSH2 0x1AD9 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x40 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x1AF3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x362 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0x1B16 PUSH2 0x1B01 JUMP JUMPDEST POP PUSH2 0x23AA JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x34C SWAP4 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x34C SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x13B8 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x1B5B DUP3 DUP5 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1B6B JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1B91 JUMPI SWAP2 PUSH2 0x1B82 PUSH2 0x1B88 SWAP5 SWAP3 PUSH1 0x0 SWAP5 SUB SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x23C2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1B65 JUMP JUMPDEST DUP3 PUSH2 0xFF3 DUP4 PUSH2 0x1B9F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1BC2 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1C31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x1C00 JUMPI PUSH2 0x34C SWAP4 SWAP5 POP PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x1C0D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x1C3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH32 0xE28434228950B641DBBC0178DE89DAA359A87C6EE0D8399AEACE52A98FE902B9 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x34C SWAP1 CALLER SWAP1 PUSH2 0x23D9 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1043 JUMP JUMPDEST SWAP1 PUSH2 0x1CB0 PUSH2 0x362 PUSH2 0x1064 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1CC4 PUSH2 0xFD0 DUP4 DUP4 PUSH2 0x178D JUMP JUMPDEST ISZERO PUSH2 0x1D2C JUMPI PUSH2 0x1CE4 PUSH1 0x1 PUSH2 0x1CDF DUP5 PUSH1 0x0 PUSH2 0x17A2 DUP7 PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1CF8 PUSH2 0x141C PUSH2 0x1CF2 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP4 PUSH2 0x102A JUMP JUMPDEST SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH2 0x1D23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1D3C ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1D76 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x1DAE JUMPI JUMPDEST ISZERO PUSH2 0x1DA6 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x244A JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1DE1 DUP3 DUP3 PUSH2 0x178D JUMP JUMPDEST ISZERO PUSH2 0x1D2C JUMPI PUSH2 0x1DFB PUSH1 0x0 PUSH2 0x1CDF DUP5 DUP3 PUSH2 0x17A2 DUP7 PUSH1 0x6 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x1E09 PUSH2 0x141C PUSH2 0x1CF2 CALLER SWAP4 SWAP1 JUMP JUMPDEST SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH2 0x1D23 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E3D DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1E47 JUMPI POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x10D9 PUSH1 0x0 PUSH2 0x1CDF PUSH2 0x1E5B SWAP5 PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x798117EC059AB8D319461EF2502B1F9D8A47CD966BFD1F3E23B6F26C30BEBB77 PUSH2 0x1E85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x365 SWAP1 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x34C SWAP3 SWAP5 SWAP4 PUSH2 0x13B8 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1ECC PUSH6 0xFFFFFFFFFFFF PUSH2 0x11FF JUMP JUMPDEST DUP2 GT PUSH2 0x1EDB JUMPI PUSH2 0x362 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x1EE8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x30 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH1 0x30 SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 SLOAD PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1F1B PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x1F6F SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1F50 DUP5 PUSH2 0x5DB JUMP JUMPDEST DUP5 DUP4 PUSH2 0x1F5C PUSH1 0x5 PUSH2 0x5DB JUMP JUMPDEST DUP2 GT PUSH2 0x1FB1 JUMPI JUMPDEST POP SWAP1 SWAP2 ADD JUMPDEST SWAP5 DUP6 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x1F78 DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP2 SUB PUSH2 0x1F89 JUMPI POP PUSH2 0x362 SWAP2 POP PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x362 SWAP3 PUSH2 0x1F9E PUSH2 0x1FAB SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x1F27 JUMP JUMPDEST DUP1 PUSH2 0x17F7 PUSH2 0x1FBE SWAP3 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x1FDF PUSH2 0x14EA DUP4 PUSH2 0x1FD9 DUP5 DUP9 DUP4 ADD JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x1F09 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP10 AND LT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1F68 SWAP3 SWAP4 SWAP5 POP SWAP4 JUMPDEST SWAP3 SWAP2 PUSH2 0x1F63 JUMP JUMPDEST PUSH2 0x1F68 SWAP3 POP PUSH2 0x2017 SWAP1 PUSH2 0x2011 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x134C JUMP JUMPDEST SWAP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2031 JUMPI POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x10D9 PUSH1 0x1 PUSH2 0x1CDF PUSH2 0x2045 SWAP5 PUSH1 0x7 PUSH2 0x1033 JUMP JUMPDEST PUSH32 0xCA86D8C91CA6D00AFD863578CC633A0901FAD724592F89649629FE65F61410D2 PUSH2 0x1E85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2077 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2086 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1CA0 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x20B0 CALLER PUSH2 0x733 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x206F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x20C9 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x20ED JUMPI PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x1C0D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2106 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x212B JUMPI SWAP3 PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x1C3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 NUMBER PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1043 JUMP JUMPDEST SWAP1 PUSH2 0x2160 PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x102A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x34C SWAP2 PUSH2 0x21DB PUSH2 0x2177 DUP4 PUSH2 0x1533 JUMP JUMPDEST SWAP3 PUSH2 0x218C DUP4 PUSH2 0x2187 DUP4 PUSH1 0xC PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x219E DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x21A7 DUP6 PUSH2 0x102A JUMP JUMPDEST SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH2 0x21D2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG4 PUSH2 0x281F JUMP JUMPDEST SWAP2 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x21FB PUSH2 0x21F6 PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x29A6 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH2 0x2211 PUSH2 0x29F6 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2220 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1CA0 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20B0 CALLER PUSH2 0x733 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 PUSH1 0x9 JUMPDEST SWAP1 PUSH2 0x2AB2 JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 PUSH1 0xA PUSH2 0x2279 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x22B9 DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP4 SUB PUSH2 0x22CA JUMPI POP PUSH2 0x362 SWAP2 POP PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x362 SWAP3 PUSH2 0x1FCD PUSH2 0x1094 DUP5 PUSH2 0x1FAB SWAP5 ADD SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x22F1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x42 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x362 SWAP4 SWAP2 PUSH2 0x2326 SWAP4 PUSH2 0x2320 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2B19 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x34C SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x2355 DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SUB PUSH2 0x2361 JUMPI POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x236D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x232F JUMP JUMPDEST PUSH2 0x2392 SWAP1 PUSH1 0x0 JUMPDEST POP PUSH1 0xB PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x239E DUP3 PUSH2 0xF69 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP4 ADD JUMPDEST SWAP1 PUSH2 0x104D JUMP JUMPDEST SWAP1 PUSH2 0x23BD PUSH2 0x362 PUSH2 0x362 SWAP4 PUSH2 0x17D4 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x2D62 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP4 SWAP3 SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x2DCD JUMP JUMPDEST SWAP1 PUSH2 0x23E7 PUSH2 0xFD0 DUP3 DUP5 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x23EF JUMPI POP POP JUMP JUMPDEST PUSH2 0xFF3 PUSH2 0x23FB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x232F JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x34C SWAP5 PUSH2 0x2443 PUSH2 0x1983 SWAP3 PUSH2 0x243C PUSH1 0x80 SWAP7 PUSH2 0x2435 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x24CF PUSH32 0x0 PUSH32 0x0 PUSH2 0x18A4 PUSH2 0x24BC ADDRESS PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD SWAP5 CHAINID SWAP3 DUP7 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x24DA PUSH2 0x18BB DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x24F2 PUSH2 0x1094 PUSH2 0x362 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHR SWAP1 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x250B PUSH2 0x1094 PUSH2 0x362 SWAP5 PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2530 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2540 DUP2 PUSH2 0x5DB JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x2782 JUMPI SWAP1 PUSH2 0x268D PUSH2 0x2688 PUSH2 0x362 PUSH2 0x2681 PUSH2 0x264D PUSH2 0x264D PUSH2 0x2677 PUSH2 0x2652 PUSH2 0x264D PUSH2 0x266D PUSH2 0x264D PUSH2 0x264D DUP13 PUSH2 0x3FC PUSH2 0x362 SWAP16 PUSH2 0x2643 PUSH2 0x264D PUSH2 0x265C PUSH2 0x2666 SWAP4 PUSH2 0x2633 PUSH2 0x262D DUP9 PUSH2 0x2591 DUP5 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x259F PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x5DB JUMP JUMPDEST DUP12 LT ISZERO PUSH2 0x275A JUMPI JUMPDEST PUSH2 0x25B4 PUSH1 0x1 PUSH1 0x40 SHL PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2738 JUMPI JUMPDEST PUSH2 0x25CA PUSH5 0x100000000 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2716 JUMPI JUMPDEST PUSH2 0x25DE PUSH3 0x10000 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26F4 JUMPI JUMPDEST PUSH2 0x25F1 PUSH2 0x100 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26D2 JUMPI JUMPDEST PUSH2 0x2603 PUSH1 0x10 PUSH2 0x5DB JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x26AA JUMPI JUMPDEST PUSH2 0x2618 PUSH2 0x1094 PUSH1 0x4 PUSH2 0x5DB JUMP JUMPDEST LT ISZERO PUSH2 0x2692 JUMPI JUMPDEST PUSH2 0x2629 PUSH1 0x3 PUSH2 0x5DB JUMP JUMPDEST MUL SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1167 JUMP JUMPDEST SWAP15 DUP16 SWAP13 DUP14 DUP1 SWAP12 DUP2 SWAP8 DUP3 DUP1 SWAP7 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP14 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP11 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP8 PUSH2 0x2526 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP13 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP10 PUSH2 0x2526 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2526 JUMP JUMPDEST DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x26A5 SWAP1 PUSH2 0x269F DUP6 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x261F JUMP JUMPDEST PUSH2 0x26C1 PUSH2 0x26CC SWAP2 PUSH2 0x26BB PUSH1 0x4 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x2 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x26E3 PUSH2 0x26EE SWAP2 PUSH2 0x26BB PUSH1 0x8 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x4 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH2 0x2705 PUSH2 0x2710 SWAP2 PUSH2 0x26BB PUSH1 0x10 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x8 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x2727 PUSH2 0x2732 SWAP2 PUSH2 0x26BB PUSH1 0x20 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x10 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x2749 PUSH2 0x2754 SWAP2 PUSH2 0x26BB PUSH1 0x40 PUSH2 0x1167 JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x20 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25BC JUMP JUMPDEST POP PUSH2 0x277C PUSH2 0x2771 PUSH2 0x276B PUSH1 0x80 PUSH2 0x1167 JUMP JUMPDEST DUP13 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x269F PUSH1 0x40 PUSH2 0x1167 JUMP JUMPDEST SWAP1 PUSH2 0x25A7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP3 PUSH2 0x2792 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x27F4 JUMPI PUSH2 0x27A6 DUP2 DUP4 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 PUSH2 0x27BD PUSH1 0x0 PUSH2 0x1FD9 DUP5 DUP10 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST PUSH2 0x27CE PUSH6 0xFFFFFFFFFFFF DUP8 AND PUSH2 0x14F5 JUMP JUMPDEST GT ISZERO PUSH2 0x27DD JUMPI POP SWAP2 JUMPDEST SWAP2 PUSH2 0x2794 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x27EE SWAP1 PUSH2 0x2011 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x27D7 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP SWAP1 JUMP JUMPDEST PUSH2 0x2807 PUSH2 0xFD0 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO DUP1 PUSH2 0x2957 JUMPI JUMPDEST PUSH2 0x2850 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2886 SWAP1 PUSH2 0x285E PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x28F5 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x2899 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x1422 PUSH2 0x141C PUSH2 0x28E8 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP5 PUSH2 0x28DF PUSH2 0x1094 PUSH2 0x28D9 PUSH2 0x28EF SWAP10 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST SWAP3 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST SWAP6 SWAP1 PUSH2 0x1214 JUMP JUMPDEST SWAP5 PUSH2 0x1214 JUMP JUMPDEST PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP2 PUSH2 0x2941 PUSH2 0x141C PUSH2 0x28E8 PUSH2 0x292E PUSH2 0x28EF SWAP7 PUSH1 0xD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x293A PUSH2 0x1094 DUP12 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x28E2 JUMP JUMPDEST SWAP3 PUSH2 0x294E PUSH2 0x142F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 CODESIZE PUSH2 0x2879 JUMP JUMPDEST POP PUSH2 0x2962 PUSH1 0x0 PUSH2 0x5DB JUMP JUMPDEST DUP3 GT PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 SWAP2 PUSH2 0x2977 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x299D PUSH2 0x362 PUSH2 0x362 SWAP3 SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x29B3 PUSH4 0xFFFFFFFF PUSH2 0x297D JUMP JUMPDEST DUP2 GT PUSH2 0x29C2 JUMPI PUSH2 0x362 SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x29CF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x20 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH2 0x159B PUSH2 0x362 SWAP2 PUSH2 0x238A PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x29FE PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x2A04 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x362 PUSH1 0xFF PUSH2 0x5DB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x2A33 PUSH2 0xE66 DUP4 PUSH2 0xE29 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEC2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2A4C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2A5F SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x2A71 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A64 JUMP JUMPDEST SWAP1 PUSH2 0x362 SWAP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0xF38 SWAP3 PUSH2 0x2AA0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2A85 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2A8F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2AC2 PUSH2 0x1094 PUSH2 0x362 PUSH2 0x2A16 JUMP JUMPDEST EQ PUSH2 0x2AD1 JUMPI POP PUSH2 0x362 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH2 0x362 SWAP2 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x34C SWAP5 PUSH2 0x1837 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x2B03 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x2B24 DUP5 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x2B50 PUSH2 0x1094 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 PUSH2 0x5DB JUMP JUMPDEST GT PUSH2 0x2BD1 JUMPI SWAP1 PUSH2 0x2B72 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x2B69 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2AE4 JUMP JUMPDEST DUP4 DUP1 MSTORE SUB SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2BCC JUMPI PUSH1 0x0 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x2B8F DUP4 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2BB8 JUMPI POP PUSH2 0x2BB2 DUP4 PUSH2 0x5DB JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x2BC4 SWAP1 PUSH2 0x5DB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2B0D JUMP JUMPDEST POP POP POP PUSH2 0x2BDE PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2C05 JUMPI JUMP JUMPDEST PUSH2 0x2BE5 JUMP JUMPDEST SWAP1 PUSH2 0x34C DUP3 PUSH2 0x2BFB JUMP JUMPDEST PUSH2 0x2C1E PUSH1 0x0 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C27 DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C30 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2C3A PUSH1 0x1 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C43 DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x2C64 PUSH1 0x2 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x2C6D DUP3 PUSH2 0x2C0A JUMP JUMPDEST SUB PUSH2 0x2C9B JUMPI PUSH2 0xFF3 PUSH2 0x2C7E DUP4 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2CAE PUSH2 0x2CA8 PUSH1 0x3 PUSH2 0x2C0A JUMP JUMPDEST SWAP2 PUSH2 0x2C0A JUMP JUMPDEST EQ PUSH2 0x2CB6 JUMPI POP JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2CC3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D0D PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2CDD JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x2D49 PUSH1 0x0 PUSH2 0x2D2C PUSH2 0x1AE1 JUMP JUMPDEST SWAP5 PUSH2 0x1FAB PUSH2 0x2D3B DUP4 DUP4 ADD PUSH2 0x1F09 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP8 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH2 0x362 SWAP2 PUSH1 0x0 PUSH2 0x2D7B SWAP3 PUSH2 0x2D74 PUSH2 0x1B01 JUMP JUMPDEST POP ADD PUSH2 0x2CF3 JUMP JUMPDEST POP PUSH2 0x2D59 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D8E DUP6 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x2D9C JUMPI PUSH2 0x34C SWAP4 SWAP5 PUSH2 0x2F20 JUMP JUMPDEST PUSH2 0xFF3 DUP6 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5FF1C9B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2DDB DUP3 DUP3 DUP7 PUSH2 0x301D JUMP JUMPDEST PUSH2 0x2DE8 PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x2E02 JUMPI JUMPDEST PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x307B JUMP JUMPDEST PUSH2 0x2E0A PUSH2 0xF73 JUMP JUMPDEST SWAP4 PUSH2 0x2E13 PUSH2 0x306B JUMP JUMPDEST SWAP5 DUP6 DUP2 GT PUSH2 0x2E23 JUMPI POP SWAP4 POP PUSH2 0x2DF8 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xFF3 PUSH2 0x2E31 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x2011 PUSH2 0x362 SWAP3 PUSH2 0x2E56 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP1 DUP4 AND SWAP3 XOR PUSH2 0x2E66 PUSH1 0x2 PUSH2 0x5DB JUMP JUMPDEST SWAP1 PUSH2 0x2526 JUMP JUMPDEST PUSH2 0x2E7C PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH2 0x1214 JUMP JUMPDEST DUP2 GT PUSH2 0x2E8B JUMPI PUSH2 0x362 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2E98 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0xD0 PUSH1 0x4 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP1 PUSH2 0x2ED9 PUSH2 0x2EDF SWAP4 PUSH2 0x2EC0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2EC9 PUSH2 0x17AD JUMP JUMPDEST SWAP3 PUSH2 0x2ED3 DUP6 PUSH2 0x22AA JUMP JUMPDEST SWAP1 PUSH2 0x3533 JUMP JUMPDEST SWAP2 PUSH2 0x3114 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH2 0x34C PUSH2 0x1702 PUSH2 0x2EF3 DUP5 PUSH2 0x1482 JUMP JUMPDEST SWAP4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x2F02 DUP2 PUSH2 0x3131 JUMP JUMPDEST SWAP1 PUSH2 0x2F15 PUSH2 0x2F10 PUSH1 0x20 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x2EE3 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2F2D PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x2FEC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x2FBB JUMPI POP PUSH2 0x2F73 DUP5 PUSH2 0x10D4 DUP6 PUSH2 0x1AC5 DUP7 PUSH1 0x1 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x2F7C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2FB6 PUSH2 0x2FAC PUSH2 0x1CF2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x102A JUMP JUMPDEST SWAP4 PUSH2 0x4D1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2FC8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2FF9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x302D PUSH2 0x438 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO DUP1 PUSH2 0x305A JUMPI JUMPDEST PUSH2 0x304D JUMPI PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x3175 JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x10FA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP PUSH2 0x3064 DUP5 PUSH2 0x17E1 JUMP JUMPDEST DUP3 GT PUSH2 0x303F JUMP JUMPDEST PUSH2 0x362 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB PUSH2 0x1214 JUMP JUMPDEST SWAP1 PUSH2 0x30D3 PUSH2 0x30CD PUSH2 0x34C SWAP5 SWAP4 PUSH2 0x30B9 PUSH2 0x3094 PUSH1 0x0 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x30F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x30D9 JUMPI PUSH2 0x1533 JUMP JUMPDEST SWAP2 PUSH2 0x1533 JUMP JUMPDEST SWAP1 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x30EC PUSH2 0x30E5 DUP7 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0xE PUSH2 0x293A JUMP JUMPDEST POP POP PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x3106 PUSH2 0x30FF DUP9 PUSH2 0x2E6C JUMP JUMPDEST PUSH1 0xE PUSH2 0x28DF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x312C PUSH1 0x0 PUSH2 0x2EDF SWAP5 SWAP4 PUSH2 0x3127 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x32BA JUMP JUMPDEST PUSH2 0x3140 PUSH2 0x3145 SWAP2 PUSH2 0x2782 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x314F PUSH1 0xFF PUSH2 0x5DB JUMP JUMPDEST AND PUSH2 0x315A PUSH1 0x1F PUSH2 0x5DB JUMP JUMPDEST DUP2 GT PUSH2 0x3163 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x3182 DUP2 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x31AB JUMPI PUSH2 0x318F DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0x319E JUMPI SWAP3 PUSH2 0x34C SWAP3 SWAP4 PUSH2 0x33E2 JUMP JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFF3 SWAP1 PUSH2 0x2DA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF SWAP1 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x362 PUSH2 0x362 SWAP3 PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3201 PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x31DC JUMP JUMPDEST DUP3 SLOAD PUSH2 0x31CE JUMP JUMPDEST SWAP1 PUSH6 0xFFFFFFFFFFFF NOT SWAP1 PUSH1 0x30 SHL PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x362 SWAP1 PUSH2 0x1F1B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 PUSH2 0x323E PUSH2 0x362 PUSH2 0x1064 SWAP3 PUSH2 0x321A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x3208 JUMP JUMPDEST PUSH2 0x34C SWAP2 PUSH2 0x3277 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x3269 PUSH2 0x3263 DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x31F1 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x322E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x328C JUMPI PUSH2 0x34C SWAP2 PUSH2 0x3245 JUMP JUMPDEST PUSH2 0x31B8 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xF19 JUMPI DUP3 PUSH2 0x32B4 SWAP2 PUSH1 0x1 PUSH2 0x34C SWAP6 ADD DUP2 SSTORE PUSH2 0x2CF3 JUMP JUMPDEST SWAP1 PUSH2 0x327D JUMP JUMPDEST SWAP2 SWAP3 SWAP2 SWAP1 DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x32CC DUP3 PUSH2 0x5DB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x338B JUMPI PUSH2 0x32F2 PUSH2 0x32E5 DUP4 SWAP3 PUSH2 0x17F7 PUSH1 0x1 PUSH2 0x5DB JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 JUMP JUMPDEST ADD PUSH2 0x32FC DUP2 PUSH2 0x1F09 JUMP JUMPDEST SWAP2 PUSH2 0x3306 DUP3 PUSH2 0x1F27 JUMP JUMPDEST SWAP5 PUSH6 0xFFFFFFFFFFFF DUP6 AND PUSH6 0xFFFFFFFFFFFF DUP6 AND GT PUSH2 0x3379 JUMPI DUP8 SWAP4 PUSH2 0x3331 PUSH6 0xFFFFFFFFFFFF DUP8 AND PUSH2 0x14F5 JUMP JUMPDEST SUB PUSH2 0x3342 JUMPI POP POP PUSH2 0x1094 SWAP3 POP PUSH2 0x322E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x3365 PUSH2 0x1094 SWAP4 PUSH2 0x3355 PUSH2 0x1AE1 JUMP JUMPDEST SWAP4 DUP5 ADD SWAP1 PUSH6 0xFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP SWAP1 PUSH2 0x33C4 SWAP1 PUSH2 0x1094 SWAP4 PUSH2 0x33B0 PUSH2 0x33A0 PUSH2 0x1AE1 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP4 AND DUP6 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP8 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3291 JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33D7 PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33ED JUMP JUMPDEST SWAP1 PUSH2 0x34C SWAP3 SWAP2 PUSH2 0x33C9 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x33F9 DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SUB PUSH2 0x349B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x2FB6 SWAP4 PUSH2 0x2FAC SWAP4 PUSH2 0x345B PUSH2 0x1CF2 SWAP5 PUSH2 0x438 PUSH2 0x3454 DUP13 PUSH2 0x13ED PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x3481 JUMPI POP POP PUSH2 0x10D9 PUSH2 0x3454 DUP9 PUSH2 0x347D PUSH1 0x2 PUSH2 0xF69 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x10D9 SWAP2 PUSH2 0x348E SWAP2 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x23A4 DUP10 PUSH2 0x3FC DUP4 PUSH2 0xF69 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x34AB PUSH2 0x159B DUP5 DUP5 PUSH2 0x1033 JUMP JUMPDEST DUP6 DUP2 LT PUSH2 0x34F9 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 DUP6 PUSH2 0x2FB6 SWAP5 PUSH2 0x345B PUSH2 0x2FAC SWAP6 PUSH2 0x438 PUSH2 0x34EF DUP13 PUSH2 0x1CF2 SWAP9 SUB SWAP1 JUMP JUMPDEST PUSH2 0x10D4 DUP8 DUP7 PUSH2 0x1033 JUMP JUMPDEST DUP4 PUSH2 0xFF3 DUP8 PUSH2 0x3507 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1B29 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x51 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH1 0x1 EQ PUSH2 0x354E JUMPI PUSH1 0x2 SUB PUSH2 0x351D JUMPI PUSH2 0x362 SWAP2 PUSH2 0xDCF JUMP JUMPDEST POP PUSH2 0x362 SWAP2 PUSH2 0xDA0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 DUP7 0xD9 0xED SWAP11 0xDF ADDRESS 0xE6 PUSH12 0xCDFC5BF711CBD409E21B8C87 PUSH23 0x8B3ABB1F2E5F07A7E65464736F6C634300081600330000 ","sourceMap":"866:2876:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;;;;866:2876:35;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;866:2876:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;866:2876:35;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;:::o;:::-;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;866:2876:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1360:58;1397:21;;;:::i;1360:58::-;;;:::i;866:2876::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;866:2876:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;2187:49:0:-;2232:4;;;:::i;2187:49::-;;;:::i;866:2876:35:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;1213:25;866:2876;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;1285:27;866:2876;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;1144:24;866:2876;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;1076:24;866:2876;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;-1:-1:-1;;;;;866:2876:35;;;;;;-1:-1:-1;;;;;866:2876:35;;;;:::o;:::-;;:::i;9304:96:3:-;9388:5;;9304:96;9388:5;:::i;866:2876:35:-;;;-1:-1:-1;;;;;866:2876:35;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;:::o;9406:101:3:-;9495:5;;9406:101;9495:5;:::i;2565:202:0:-;-1:-1:-1;;;;;;;;;866:2876:35;;2673:47:0;:87;;;;;2666:94;2565:202;:::o;2673:87::-;2724:36;;;-1:-1:-1;;;;;;866:2876:35;-1:-1:-1;;;862:40:26;;763:146;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;866:2876:35;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;1779:89:8:-;1849:12;1856:5;1849:12;:::i;3998:186::-;4150:5;;;735:10:16;4150:5:8;:::i;:::-;4173:4;3998:186;:::o;866:2876:35:-;;;;;;;;;;:::i;2849:97:8:-;2927:12;;;:::i;4776:244::-;4986:5;;;4776:244;4950:5;4986;735:10:16;4897:12:8;4950:5;;:::i;:::-;4986;:::i;866:2876:35:-;;;;;;;;;;;:::o;3810:120:0:-;3901:22;:12;:22;3810:120;3875:7;866:2876:35;;;3875:7:0;3901:12;:6;:12;:::i;:::-;:22;;:::i;2088:112:34:-;;2127:27;2128:26;735:10:16;2128:26:34;:::i;:::-;2127:27;;866:2876:35;2127:27:34;2123:59;;2192:1;;;:::i;2123:59::-;866:2876:35;;-1:-1:-1;;;2163:19:34;;;;;;;;;866:2876:35;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;;866:2876:35;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2718:314:34:-;2809:18;2817:10;2825:1;2817:10;:::i;2809:18::-;-1:-1:-1;;;;;866:2876:35;;2809:18:34;2805:55;;2874:22;;;:::i;:::-;:31;;;866:2876:35;2874:31:34;;866:2876:35;;2874:31:34;;2870:82;;2999:26;;2962:13;:22;:13;;2999:26;2962:13;:7;:13;:::i;:::-;:22;:::i;:::-;2999:26;:::i;:::-;;;866:2876:35;;;;2999:26:34;;;;2718:314::o;2870:82::-;2914:38;;;866:2876:35;;;;2914:38:34;-1:-1:-1;;;2914:38:34;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;2805:55:34;866:2876:35;;-1:-1:-1;;;2836:24:34;;;;2163:19;2718:314;;;;;:::i;2422:76:0:-;;2490:1;2422:76;2475:4;4300:18;;;:::i;:::-;2475:4;:::i;:::-;4226:136;4330:25;4226:136;4330:25;:::i;:::-;;4226:136::o;:::-;;;;;:::i;866:2876:35:-;;;;;;;;;;;;2707:82:8;2773:9;2780:2;2773:9;:::i;2659:112:12:-;2744:20;;:::i;5328:245:0:-;;5421:34;735:10:16;5443:12:0;656:96:16;5421:34:0;-1:-1:-1;;;;;866:2876:35;;5421:34:0;5417:102;;5529:37;;;:::i;5417:102::-;866:2876:35;;-1:-1:-1;;;5478:30:0;;;;2163:19:34;2422:76:0;2490:1;;2475:4;1213:25:35;2475:4:0;:::i;:::-;2723:18:35;2648:100;2723:18;:::i;2648:100::-;;;;:::i;866:2876::-;;;;;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;3922:364:3;4054:7;;:::i;:::-;4075:29;;;:::i;:::-;;;;4071:115;;4202:29;4195:84;4202:29;4250:28;4202:47;:29;:77;:29;:20;:29;:::i;:47::-;4250:28;;:::i;:::-;4202:77;;:::i;:::-;4195:84;:::i;4071:115::-;4127:48;;;866:2876:35;;;;4127:48:3;-1:-1:-1;;;4127:48:3;;;;;;;;866:2876:35;;;;;;;;;;;;;;;2422:76:0;2490:1;;2475:4;1213:25:35;2475:4:0;:::i;:::-;2619:16:35;2546:96;2619:16;:::i;2546:96::-;;;;:::i;2422:76:0:-;2475:4;1076:24:35;2475:4:0;:::i;:::-;2490:1;2216:75:35;;:::i;:::-;;;:::i;2422:76:0:-;2490:1;;2422:76;2475:4;1144:24:35;2475:4:0;:::i;:::-;2490:1;:::i;866:2876:35:-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;866:2876:35;;;;;;;;;;;;;;;;;;;2163:19:34;866:2876:35;;;;;;;;;;;;;;;;;;;2297:243;2494:39;2297:243;2378:74;2386:22;:13;;;:::i;:::-;:22;:::i;:::-;:36;;2412:10;;:::i;2386:36::-;;;2378:74;:::i;:::-;2472:6;;;;:::i;:::-;2494:39;2519:13;;:::i;:::-;2494:39;;:::i;:::-;;;;866:2876;;;;2494:39;;;;;;:::i;2297:243::-;;;;;:::i;618:87:10:-;692:5;;735:10:16;692:5:10;:::i;678:12::-;692:5;:::i;866:2876:35:-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;866:2876:35;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::o;:::-;;;:::i;3040:272:3:-;3169:7;;:::i;:::-;:29;;3180:18;;:::i;:::-;866:2876:35;;;;3169:29:3;;866:2876:35;;;;3169:29:3;;3165:93;;3267:38;;:::i;3165:93::-;866:2876:35;;-1:-1:-1;;;3221:26:3;;;;2163:19:34;866:2876:35;;;;;;;;;;:::i;5539:117:3:-;5630:19;;5539:117;5604:7;866:2876:35;;;5604:7:3;5630:19;:10;:19;:::i;:::-;;:::i;5738:138::-;5859:9;;735:10:16;5859:9:3;:::i;5818:12::-;5859:9;:::i;866:2876:35:-;;;;;;;;;;:::i;1850:84:19:-;1920:7;;;:::i;3237:126:13:-;3332:24;;;:::i;3004:116:8:-;3095:18;;3004:116;3069:7;866:2876:35;;;3069:7:8;3095:18;:9;:18;:::i;:::-;;:::i;1021:158:10:-;1166:5;;1021:158;1135:5;1021:158;735:10:16;1121:12:10;656:96:16;2088:112:34;;2127:27;2128:26;735:10:16;2128:26:34;:::i;2127:27::-;2123:59;;2192:1;;;:::i;866:2876:35:-;;;;;;;;;;:::o;3349:366:34:-;3442:18;3450:10;3458:1;3450:10;:::i;3442:18::-;-1:-1:-1;;;;;866:2876:35;;3442:18:34;3438:55;;3526:12;;;:::i;:::-;3552:21;;;3548:70;;3680:28;;3644:21;3628:37;3644:21;;3680:28;3644:21;;:::i;:::-;3628:13;;:7;:13;:::i;3548:70::-;3582:36;;;866:2876:35;;;;3582:36:34;-1:-1:-1;;;3582:36:34;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;3349:366:34;;;;;:::i;3592:148:35:-;3714:19;;;:::i;2422:76:0:-;2475:4;1076:24:35;2475:4:0;:::i;:::-;2490:1;2139:71:35;;:::i;:::-;;;:::i;866:2876::-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;866:2876:35;;;;;:::i;5144:557:24:-;5533:13;;:::i;:::-;5560:16;;;:::i;:::-;5625:4;5617:13;5625:4;5617:13;:::i;:::-;5644:10;5652:1;5644:10;:::i;:::-;5668:16;;5652:1;5668:16;:::i;:::-;;:::i;:::-;-1:-1:-1;;;5482:212:24;;5590:13;;5482:212;;;5144:557;:::o;4922:341:3:-;5043:7;;:::i;:::-;5064:29;;;:::i;:::-;;;;5060:115;;5191:35;:65;5184:72;5191:35;5227:28;5191:35;:17;866:2876:35;;5060:115:3;5116:48;;;866:2876:35;;;;2854:136:0;2954:29;2854:136;2954:20;:12;:29;2854:136;2931:4;866:2876:35;;;2954:12:0;:20;:29;:::i;:::-;;:::i;2789:96:3:-;2860:18;;:::i;1981:93:8:-;2053:14;2060:7;2053:14;:::i;3402:135:3:-;3492:38;:36;:29;3485:45;3402:135;3466:7;866:2876:35;;;3466:7:3;3492:29;:20;:29;:::i;:36::-;:38;:::i;3944:148:34:-;4049:36;;4070:15;4049:18;;;:::i;:::-;4070:15;;:::i;:::-;4049:36;;:::i;3315:178:8:-;3459:5;;;735:10:16;4986:5:8;:::i;2063:71:3:-;;;;;;;;;;;;;;;;;;866:2876:35;;2063:71:3;-1:-1:-1;;;;;866:2876:35;2063:71:3;;;866:2876:35;;2063:71:3;;;;866:2876:35;;5954:554:3;;;;;;;;;6141:15;:24;6137:91;;6319:19;6254:168;6319:19;6457:5;6319:19;6281:86;6319:19;6308:57;6319:19;6491:9;6319:19;;6308:57;6319:19;2063:71;2008:126;;6319:19;6308:57;;866:2876:35;;;;6308:57:3;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;6298:68;;;866:2876:35;;;6298:68:3;;866:2876:35;;;;6298:68:3;;6281:86;:::i;:::-;6254:168;:::i;:::-;6457:5;;;:::i;6137:91::-;6188:29;;;866:2876:35;;;;6188:29:3;-1:-1:-1;;;6188:29:3;;;;;;;;866:2876:35;;;;;;;2282:105:34;2367:13;;2282:105;2341:7;866:2876:35;;;2341:7:34;2367:13;:7;:13;:::i;1024:95:12:-;;;;;;;;;;;;;;;;;;;;;;;866:2876:35;;1024:95:12;-1:-1:-1;;;;;866:2876:35;1024:95:12;;;866:2876:35;;1024:95:12;-1:-1:-1;;;;;866:2876:35;1024:95:12;;;866:2876:35;;1024:95:12;;;;866:2876:35;;1024:95:12;;;;866:2876:35;;1024:95:12;-1:-1:-1;;;;;866:2876:35;;;;;1024:95:12;;;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;1683:672:12;;;;;;;;;;1886:26;;866:2876:35;;1886:26:12;:15;:26;1882:97;;2031:15;2125:28;2031:15;2020:78;2031:15;2181:28;2031:15;;;2020:78;2031:15;1024:95;973:146;;2031:15;2071:16;;;;:::i;:::-;2020:78;;866:2876:35;;;;2020:78:12;;;;;;;;;;:::i;2181:28::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;2223:15:12;2219:88;;2342:5;;;;;:::i;2219:88::-;2261:35;;;;866:2876:35;;;;2261:35:12;-1:-1:-1;;;2261:35:12;;;;;;;;;:::i;1882:97::-;1935:33;;;866:2876:35;;;;1935:33:12;-1:-1:-1;;;1935:33:12;;;;;;;;866:2876:35;;;;;;;2422:76:0;;2490:1;2422:76;2475:4;4717:18;;;:::i;2475:4::-;4642:138;4747:26;4642:138;4747:26;:::i;4642:138::-;;;;;:::i;2951:107:35:-;3025:26;:10;;:::i;:::-;3038:13;;:::i;3551:140:8:-;3657:27;3551:140;3657:18;:27;3551:140;3631:7;866:2876:35;;;3631:7:8;3657:18;:11;:18;:::i;:::-;:27;:::i;1284:105:33:-;1365:17;;1284:105;1342:4;866:2876:35;;;1342:4:33;1365:17;:8;:17;:::i;866:2876:35:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;3440:163:13:-;;3570:26;3440:163;3519:32;;:::i;:::-;3570:26;;:::i;8726:128:8:-;;8842:4;8726:128;8842:4;8726:128;8842:4;:::i;866:2876:35:-;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;10415:477:8;;10541:25;;;;:::i;:::-;-1:-1:-1;;10580:37:8;;10576:310;;10415:477;;;;;:::o;10576:310::-;10637:24;;;10633:130;;10829:24;;10855:5;10829:24;;10855:5;10829:24;866:2876:35;;;10829:24:8;10855:5;;:::i;:::-;10576:310;;;;;;10633:130;10688:60;;;;866:2876:35;;;;10688:60:8;-1:-1:-1;;;10688:60:8;;;;;;;;;:::i;5393:300::-;;;;5484:10;5492:1;5484:10;:::i;:::-;5476:18;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;5476:18:8;5472:86;;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;5571:16:8;5567:86;;5680:5;;;;;:::i;5567:86::-;5610:32;;;866:2876:35;;;;5610:32:8;-1:-1:-1;;;5610:32:8;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;5472:86:8;5517:30;;;866:2876:35;;;;5517:30:8;-1:-1:-1;;;5517:30:8;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;2754:127;2845:29;;1285:27;2845:29;:::i;3199:103:0:-;3282:12;;735:10:16;3282:12:0;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;;;;;:::i;6179:316:0:-;6276:23;6277:22;;;;:::i;6276:23::-;6272:217;;;6315:36;6347:4;6315:29;:12;:20;:12;;:6;:12;:::i;:29::-;:36;:::i;:::-;6370:40;;;735:10:16;6370:40:0;866:2876:35;;6370:40:0;;;:::i;:::-;;;;866:2876:35;;;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;6473:5;6466:12;:::o;3845:262:24:-;3921:13;3929:4;3921:13;:::i;:::-;:28;-1:-1:-1;;;;;3938:11:24;866:2876:35;3921:28:24;-1:-1:-1;;;;;866:2876:35;;;3921:28:24;;:63;;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;4067:23;;:::i;3921:63::-;-1:-1:-1;3970:14:24;3953:13;:31;3921:63;;6730:317:0;6828:22;;;;:::i;:::-;6824:217;;;6866:37;6898:5;6866:29;:12;;;;:6;:12;:::i;:37::-;6922:40;;;735:10:16;6370:40:0;866:2876:35;;6922:40:0;;;;866:2876:35;;;;1875:250:33;1970:13;;;:::i;:::-;1993:100;;;;2102:16;1875:250;:::o;1993:100::-;2022:14;:22;2039:5;2022:14;2063:19;2022:14;:8;:14;:::i;2063:19::-;;;866:2876:35;;;;2063:19:33;;;;1875:250;:::o;866:2876:35:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;14296:213:29;14374:24;14382:16;14374:24;:::i;:::-;;;14370:103;;14489:13;;;:::i;14370:103::-;14421:41;;;866:2876:35;;;;14421:41:29;-1:-1:-1;;;14421:41:29;;;;;14452:2;14421:41;;;;:::i;866:2876:35:-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;:::i;:::-;;;;;;;9584:606:31;866:2876:35;;10049:53:31;;9751:1;9737:15;;;;:::i;:::-;9762:18;;9795:7;9801:1;9795:7;:::i;:::-;;;9791:234;;9584:606;-1:-1:-1;10068:17:31;;;10049:53;;;;:::i;:::-;10120:8;;;:::i;:::-;;;:63;;;;;;;:::i;:::-;10135:48;10168:7;;10135:41;10168:7;;10174:1;10168:7;:::i;:::-;10135:41;14439:109;;;;;;14289:265;;10135:41;:48;;:::i;9791:234::-;9838:14;;9832:20;9838:14;;:::i;9832:20::-;9870:48;9876:42;9890:17;9876:37;9890:17;;;;9876:37;14439:109;;;;;;14289:265;;9876:37;:42;;:::i;9870:48::-;866:2876:35;;;9870:48:31;9866:149;;;10049:53;9938:10;;;;9866:149;;9791:234;;;;9866:149;10049:53;9993:7;;;;;9999:1;9993:7;:::i;:::-;;;:::i;:::-;9866:149;;;1508:246:33;1601:13;;;:::i;:::-;1628:10;;;1624:98;;1731:16;1508:246;:::o;1624:98::-;1654:14;:21;1671:4;1654:14;1694:17;1654:14;:8;:14;:::i;1694:17::-;;;866:2876:35;;;;1689:66:19;;;:::i;:::-;1747:1;2768:15;2778:5;2768:15;;:::i;:::-;2798:22;;735:10:16;2807:12:19;656:96:16;2798:22:19;;;;2710:117::o;:::-;;;:::i;7458:208:8:-;;;7539:10;7547:1;7539:10;:::i;:::-;7528:21;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7528:21:8;7524:91;;7653:5;;;;:::i;7524:91::-;7572:32;;;866:2876:35;;;;7984:206:8;;;8065:10;8073:1;8065:10;:::i;:::-;8054:21;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;8054:21:8;8050:89;;8177:5;;;;;:::i;8050:89::-;8098:30;;;866:2876:35;;;;931:109:32;1002:31;1020:12;1002:31;:::i;866:2876:35:-;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;:::i;:::-;;;;:::i;6686:312:3:-;6966:24;6686:312;6966:24;6790:18;;;:::i;:::-;6818:19;:31;:19;;;:10;:19;:::i;:::-;:31;:::i;:::-;6865:48;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;866:2876:35;;;;6865:48:3;;;;6966:24;:::i;:::-;;;:::i;8581:162::-;8697:38;:36;:29;8679:57;8581:162;8654:6;866:2876:35;;;8697:36:3;:38;:::i;:::-;8679:57;:::i;2409:143:12:-;2526:19;;;:::i;1439:72:19:-;;;:::i;:::-;1503:1;2522:14;2532:4;2522:14;;:::i;:::-;2551:20;;735:10:16;2558:12:19;656:96:16;2463:115:19;;;:::i;6021:126:24:-;6099:41;:5;6126:13;6099:41;;;:::i;6473:135::-;6554:47;:8;6584:16;6554:47;866:2876:35;10310:206:31;866:2876:35;;10453:1:31;;10446:8;;;;:::i;:::-;;;:63;;;;;;;:::i;:::-;10461:48;10475:17;10461:41;10494:7;10475:17;10461:41;10475:17;;10494:7;;10500:1;10494:7;:::i;4917:176:24:-;5020:66;;5053:20;;:::i;:::-;3445:249:25;;;;;-1:-1:-1;;;3445:249:25;;;;;;;;;;;3326:374;;6887:260:23;;7105:8;6887:260;;7051:25;6887:260;6972:7;866:2876:35;;;6972:7:23;7051:25;;:::i;:::-;7105:8;;;;;:::i;866:2876:35:-;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;;;;;;;1265:222:17;1366:16;;;:::i;:::-;1396;;;;1392:89;;1265:222;;:::o;1392:89::-;1435:35;;866:2876:35;;;;1435:35:17;-1:-1:-1;;;1435:35:17;;;;;;;;;:::i;759:395::-;1121:14;;866:2876:35;819:7:17;1121:14;:7;:14;:::i;:::-;:16;;;;:::i;:::-;;866:2876:35;;;1121:16:17;;;:::i;8820:199:3:-;;8975:32;:29;:37;8820:199;8924:32;;:::i;8975:::-;:37;:::i;3358:228:35:-;;3569:9;3358:228;;;3569:9;:::i;3131:221::-;;3339:5;3131:221;;3339:5;:::i;3432:197:0:-;;3519:23;3520:22;;;;:::i;3519:23::-;3515:108;;3432:197;;:::o;3515:108::-;3565:47;;866:2876:35;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;;;;;;;;:::i;2079:95:24:-;;;;;;;;;;;;;;;;;;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;2079:95:24;;;;866:2876:35;;4113:179:24;2079:95;4204:80;4239:14;4226:11;4204:80;4270:13;4278:4;4270:13;:::i;:::-;866:2876:35;;4204:80:24;;;;;;4255:13;;4204:80;;;:::i;:::-;4194:91;;;866:2876:35;;;4194:91:24;;4113:179;:::o;866:2876:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;18080:5181:28:-;18246:1;18241:6;;;:::i;:::-;;;;18237:53;;19217:14;23216:28;23232:11;23237:6;22827:18;22388:11;22828;22717:18;22278;22718:11;22607:18;22279:11;22608;19217:14;22613:6;23211:33;19217:14;20373:13;22499:11;22387:18;22498;19217:14;20373:13;20374:6;19217:14;19245;;;:::i;:::-;19285:8;19278:16;-1:-1:-1;;;19278:16:28;:::i;:::-;;;;19274:92;;18080:5181;19383:15;-1:-1:-1;;;19383:15:28;:::i;:::-;;;;19379:90;;18080:5181;19486:15;19493:7;19486:15;:::i;:::-;;;;19482:90;;18080:5181;19589:15;19596:7;19589:15;:::i;:::-;;;;19585:89;;18080:5181;19691:14;19698:6;19691:14;:::i;:::-;;;;19687:87;;18080:5181;19791:14;19798:6;19791:14;:::i;:::-;;;;19787:87;;18080:5181;19891:14;;19898:6;19891:14;:::i;:::-;;;19887:61;;18080:5181;20374:6;:1;:6;:::i;:::-;866:2876:35;;;20374:6:28;20373:13;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;22284:6;;;;:::i;22279:11::-;22278:18;:::i;:::-;22393:6;;;;:::i;22387:18::-;22504:6;;;;:::i;22498:18::-;22493:23;;22613:6;:::i;22607:18::-;22723:6;;;;:::i;22717:18::-;22833:6;;;;:::i;22827:18::-;22822:23;;23237:6;:::i;23232:11::-;;;;34795:145:29;23216:28:28;23211:33;866:2876:35;;;19887:61:28;19925:8;;;;;:::i;:::-;;;:::i;:::-;19887:61;;19787:87;19825:8;19851;19825;;19832:1;19825:8;:::i;:::-;;;:::i;:::-;19851;;19858:1;19851:8;:::i;:::-;19787:87;;;19687;19725:8;19751;19725;;19732:1;19725:8;:::i;:::-;19751;;19758:1;19751:8;:::i;:::-;19687:87;;;19585:89;19624:9;19651:8;19624:9;;19631:2;19624:9;:::i;:::-;19651:8;;19658:1;19651:8;:::i;:::-;19585:89;;;19482:90;19521:9;19548;19521;;19528:2;19521:9;:::i;:::-;19548;;19555:2;19548:9;:::i;:::-;19482:90;;;19379;19418:9;19445;19418;;19425:2;19418:9;:::i;:::-;19445;;19452:2;19445:9;:::i;:::-;19379:90;;;19274:92;19314:10;19342:9;19314:10;;19321:3;19314:10;:::i;:::-;;;:::i;:::-;19342:9;;19349:2;19342:9;:::i;:::-;19274:92;;;18237:53;18267:8;;:::o;12929:433:31:-;;;;;13086:7;866:2876:35;;;13086:7:31;13105:230;;13112:10;;;;;;13152:23;;;;:::i;:::-;13193:24;:29;;:24;;;14439:109;;;;;;14289:265;;13193:29;:35;866:2876:35;;;13193:35:31;866:2876:35;13193:35:31;;13189:136;;;13248:10;13189:136;;13105:230;;;13189:136;13303:7;;;;;;13309:1;13303:7;:::i;:::-;13189:136;;;13112:10;;;;;;12929:433;:::o;2202:126:19:-;2264:9;2265:8;;:::i;2264:9::-;2260:62;;2202:126::o;2260:62::-;866:2876:35;;-1:-1:-1;;;2296:15:19;;;;2163:19:34;3029:133:13;3137:18;;;:::i;7717:789:3:-;;;;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7818:10:3;;:24;;;7717:789;7814:686;;7717:789;;;:::o;7814:686::-;8190:16;7870:10;;7878:1;7870:10;:::i;:::-;7862:18;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7862:18:3;7858:315;;7814:686;8190:16;-1:-1:-1;;;;;866:2876:35;;;8190:16:3;-1:-1:-1;;;;;866:2876:35;;8190:16:3;8186:304;;7717:789;;:::o;8186:304::-;8292:24;8431:44;8226:182;8265:143;8431:44;8292:24;8265:143;8364:26;8292:24;8226:182;8292:24;:20;:24;:::i;:::-;8364:26;;:::i;8265:143::-;8338:4;8265:143;;;:::i;:::-;8226:182;;;:::i;:::-;;;:::i;7858:315::-;8112:46;7966:26;8112:46;7900:189;7939:150;7966:26;7900:189;7966:26;:20;:26;:::i;:::-;7939:150;8045:26;;;:::i;7939:150::-;8014:9;7939:150;866:2876:35;8112:46:3;;;;866:2876:35;;;;8112:46:3;;;;7858:315;;;7818:24;7832:10;;7841:1;7832:10;:::i;:::-;;;7818:24;;11152:119:31;11240:17;:24;11152:119;11214:7;866:2876:35;;;11214:7:31;11240:17;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;15296:213:29;15374:24;15382:16;15374:24;:::i;:::-;;;15370:103;;15489:13;;;:::i;15370:103::-;15421:41;;;866:2876:35;;;;15421:41:29;-1:-1:-1;;;15421:41:29;;14421;;;15452:2;15421:41;;;;:::i;538:107:17:-;624:14;;538:107;598:7;866:2876:35;;;2002:128:19;2067:8;;:::i;:::-;2063:61;;2002:128::o;2063:61::-;866:2876:35;;-1:-1:-1;;;2098:15:19;;;;2163:19:34;1345:111:20;1390:66;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;866:2876:35;;;;;;;1390:66:20;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;866:2876:35;;;;1390:66:20;;;;;;:::i;:::-;;;;:::i;3358:267::-;;3481:25;:46;;3510:17;;:::i;3481:46::-;;3477:142;;3550:15;;;;:::i;3477:142::-;3596:12;;;;:::i;866:2876:35:-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:23;;;6270:10;;;:::i;:::-;:79;;6283:66;6270:79;:::i;:::-;;6266:164;;6541:24;;;;;;;;866:2876:35;;;;6541:24:23;;;;;;:::i;:::-;;;;;;;;;;;;;;6597:1;6589:10;;;;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;6579:20:23;6575:113;;6736:10;;;;:::i;:::-;6698:49;;;5203:1551;:::o;6575:113::-;6666:10;;;;;;:::i;:::-;6615:62;;6635:29;6615:62;;:::o;6541:24::-;;:::i;6266:164::-;6373:10;;;;6381:1;6373:10;:::i;:::-;6365:54;6385:30;6365:54;;:::o;866:2876:35:-;;;;;;;;;;;;;;-1:-1:-1;866:2876:35;;;:::o;:::-;;:::i;:::-;;;;;:::i;7280:532:23:-;7366:29;7375:20;7366:29;:::i;:::-;;;;:::i;:::-;;7362:444;;7411:7;;:::o;7362:444::-;7462:38;7471:29;7462:38;:::i;:::-;;;;:::i;:::-;;7458:348;;866:2876:35;;-1:-1:-1;;;7523:23:23;;;;2163:19:34;7458:348:23;7567:44;7576:35;7567:44;:::i;:::-;;;;:::i;:::-;;7563:243;;7634:46;7662:17;;;:::i;:::-;866:2876:35;;-1:-1:-1;;;7634:46:23;;;;;;;;866:2876:35;;;;;;;7563:243:23;7701:39;;7710:30;7701:39;:::i;:::-;;;:::i;:::-;;7697:109;;7563:243;7280:532::o;7697:109::-;7763:32;;;866:2876:35;;;;7763:32:23;-1:-1:-1;;;7763:32:23;;;;;;;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;:::i;11343:138:31:-;11445:29;11343:138;11452:17;:22;11343:138;11413:20;;:::i;:::-;11452:17;;:22;:::i;:::-;11445:29;;:::i;2471:228:33:-;;;;;2592:14;;;:::i;:::-;2588:46;;2682:9;;;;:::i;2588:46::-;2615:19;;;866:2876:35;;;;2615:19:33;-1:-1:-1;;;2615:19:33;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;2356:413:13;;;;2474:5;;;;;:::i;:::-;2494:18;2502:10;2510:1;2502:10;:::i;2494:18::-;-1:-1:-1;;;;;866:2876:35;;2494:18:13;2490:226;;2356:413;2756:5;;;;:::i;2490:226::-;2545:13;;:::i;:::-;2586:12;;;:::i;:::-;2616;;;;2612:94;;2490:226;;;;;2612:94;2655:36;;;;866:2876:35;;;;2655:36:13;-1:-1:-1;;;2655:36:13;;;;;;;;;:::i;3595:153:28:-;3730:11;3720:21;3595:153;3657:7;866:2876:35;;;3657:7:28;3721:5;;;;3731;;3730:11;3740:1;3730:11;:::i;:::-;;;:::i;4174:218:29:-;4254:25;-1:-1:-1;;;;;4254:25:29;:::i;:::-;;;4250:105;;4371:14;;;:::i;4250:105::-;4302:42;;;866:2876:35;;;;4302:42:29;-1:-1:-1;;;4302:42:29;;14421:41;;;4333:3;4302:42;;;;:::i;9025:273:3:-;;9265:25;9245:46;9025:273;9192:16;866:2876:35;;;9192:16:3;9256:7;;;:::i;:::-;9268:14;;;;:::i;:::-;9265:25;;:::i;:::-;9245:46;;:::i;:::-;9238:53;;9025:273::o;866:2876:35:-;;;;;;;:::i;:::-;;;:::i;2078:378:20:-;2176:16;;;:::i;:::-;2300:14;;;2311:2;2300:14;:::i;:::-;;:::i;:::-;2324:106;;;2311:2;2324:106;;;2078:378;:::o;9701:432:8:-;;;;9822:10;9830:1;9822:10;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;9813:19:8;9809:89;;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;9911:21:8;9907:90;;10006:18;:35;:18;:27;:18;;;:11;:18;:::i;:35::-;10051:76;;9701:432;;;:::o;10051:76::-;10085:31;;;;;;:::i;:::-;;;866:2876:35;;;;10085:31:8;;;;9701:432::o;9907:90::-;9955:31;;;866:2876:35;;;;9955:31:8;-1:-1:-1;;;9955:31:8;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;9809:89:8;9855:32;;;866:2876:35;;;;9855:32:8;-1:-1:-1;;;9855:32:8;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;4406:268:34;;;;4504:18;4512:10;4520:1;4512:10;:::i;4504:18::-;-1:-1:-1;;;;;866:2876:35;;4504:18:34;;:52;;;4406:268;4500:128;;4661:5;;;;:::i;4500:128::-;4579:38;;;866:2876:35;;;;4504:52:34;4526:22;;;;:::i;:::-;:30;-1:-1:-1;4504:52:34;;2113:103:13;2185:24;-1:-1:-1;;;;;2185:24:13;:::i;7232:399:3:-;;7602:13;7585:15;7617:6;7232:399;;7451:16;7343:10;7351:1;7343:10;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;7335:18:3;7331:107;;-1:-1:-1;;;;;866:2876:35;;;7451:16:3;-1:-1:-1;;;;;866:2876:35;;7451:16:3;7447:110;;7585:15;:::i;:::-;7602:13;;:::i;:::-;7617:6;;:::i;7447:110::-;7483:63;7519:26;;;:::i;:::-;7489:17;7483:63;866:2876:35;7483:63:3;7447:110;;7585:15;:::i;7331:107::-;7369:58;7400:26;;;:::i;:::-;7375:17;7369:58;866:2876:35;7369:58:3;7331:107;;-1:-1:-1;;;;;866:2876:35;;;8145:210:31;;8310:38;8318:17;8310:38;8145:210;;8257:16;866:2876:35;;;8257:16:31;8318:17;;866:2876:35;;8310:38:31;;:::i;2528:245:20:-;2633:24;2625:33;2528:245;2589:7;866:2876:35;;;2633:24:20;2625:33;:::i;:::-;:40;2661:4;2625:40;:::i;:::-;;2679:11;2688:2;2679:11;:::i;:::-;;;2675:69;;2528:245;:::o;2675:69::-;866:2876:35;;-1:-1:-1;;;2713:20:20;;;;2163:19:34;2180:235:33;;;;;2278:13;;;:::i;:::-;2274:44;;2332:11;;;:::i;:::-;2328:40;;2402:5;;;;;:::i;2328:40::-;2352:16;;;866:2876:35;;;;2274:44:33;2300:18;;;866:2876:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;866:2876:35;;;;;;;;;;-1:-1:-1;;;;;866:2876:35;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;866:2876:35;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;866:2876:35;;;;;;;;;;;;;;;:::i;:::-;;;:::i;11657:922:31:-;;;;;866:2876:35;;11870:1:31;11864:7;;;;:::i;:::-;;;11860:713;;;11916:28;11936:7;;;;11942:1;11936:7;:::i;:::-;11916:28;14439:109;;;;;;14289:265;;11916:28;11975:9;;;;:::i;:::-;12018:11;;;;:::i;:::-;12103:13;866:2876:35;;;;;;12103:13:31;12099:89;;12251:14;;;866:2876:35;;;12251:14:31;866:2876:35;12251:14:31;;12247:163;;12285:19;;;;;;:::i;12247:163::-;12353:41;;;;;12343:52;12353:41;;;:::i;:::-;;;;866:2876:35;;;;;;12353:41:31;-1:-1:-1;;;;;866:2876:35;;12353:41:31;;;866:2876:35;12343:52:31;:::i;12099:89::-;866:2876:35;;-1:-1:-1;;;12143:30:31;;;;2163:19:34;11860:713:31;12489:41;;12479:52;12489:41;12545:17;12489:41;;;;:::i;:::-;866:2876:35;;;;12489:41:31;;;866:2876:35;;12489:41:31;-1:-1:-1;;;;;866:2876:35;;12489:41:31;;;866:2876:35;12343:52:31;:::i;12479:::-;12545:17;:::i;1439:72:19:-;;1503:1;1439:72;;;;:::i;:::-;1113:145:11;1245:5;1113:145;;1245:5;:::i;1113:145::-;;;;;;:::i;6008:1107:8:-;6113:1;;6105:10;;;:::i;:::-;-1:-1:-1;;;;;866:2876:35;;-1:-1:-1;;;;;866:2876:35;;6097:18:8;6093:540;;7083:25;6233:21;7083:25;6233:21;7083:25;6233:21;6647:16;7083:25;6233:21;;;;;;;:::i;:::-;;;:::i;6647:16::-;-1:-1:-1;;;;;866:2876:35;;6647:16:8;6643:425;;6810:21;;;;;;;;:::i;:::-;866:2876:35;;;6643:425:8;7021:22;:13;;;;:::i;:::-;:22;;;;;:::i;6093:540::-;6307:15;;;;;;;;:::i;:::-;6340:19;;;6336:115;;7083:25;6589:19;;7083:25;6589:19;6647:16;7083:25;6589:19;6571:37;6589:19;;7083:25;6589:19;866:2876:35;;;6589:19:8;6571:15;;;;:::i;6336:115::-;6386:50;;;;866:2876:35;;;;6386:50:8;-1:-1:-1;;;6386:50:8;;;;;;;;;:::i;866:2876:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","CUSTODIAN_ROLE()":"c79445d0","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","LIMITER_ROLE()":"b3de4214","MAX_SUPPLY()":"32cb6b0c","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","availableBalance(address)":"a0821be3","balanceOf(address)":"70a08231","blockUser(address)":"3da01325","blocked(address)":"e5962195","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","freeze(address,uint256)":"24bce60c","frozen(address)":"d0516650","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","remainingSupply()":"da0239a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unblockUser(address)":"39d319e5","unfreeze(address,uint256)":"7b46b80b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limiter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"custodian\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20Blocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20FreezeAddressZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20InsufficientFrozenBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ERC20InsufficientUnfrozenBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20NotCustodian\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserUnblocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSTODIAN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIMITER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"blockUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"blocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unblockUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"guardcolombia@gmail.com, telegram @wanagrow \",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20Blocked(address)\":[{\"details\":\"The operation failed because the user is blocked.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20FreezeAddressZero()\":[{\"details\":\"Error thrown when trying to freeze tokens for address zero.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InsufficientFrozenBalance(address)\":[{\"details\":\"The operation failed because the user has insufficient frozen balance.\"}],\"ERC20InsufficientUnfrozenBalance(address)\":[{\"details\":\"The operation failed because the user has insufficient unfrozen balance.\"}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20NotCustodian()\":[{\"details\":\"Error thrown when a non-custodian account attempts to perform a custodian-only operation.\"}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokensFrozen(address,uint256)\":{\"details\":\"Emitted when tokens are frozen for a user.\",\"params\":{\"amount\":\"The amount of tokens that were frozen.\",\"user\":\"The address of the user whose tokens were frozen.\"}},\"TokensUnfrozen(address,uint256)\":{\"details\":\"Emitted when tokens are unfrozen for a user.\",\"params\":{\"amount\":\"The amount of tokens that were unfrozen.\",\"user\":\"The address of the user whose tokens were unfrozen.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"UserBlocked(address)\":{\"details\":\"Emitted when a user is blocked.\"},\"UserUnblocked(address)\":{\"details\":\"Emitted when a user is unblocked.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"availableBalance(address)\":{\"details\":\"Returns the available (unfrozen) balance of an account.\",\"params\":{\"account\":\"The address to query the available balance of.\"},\"returns\":{\"available\":\"The amount of tokens available for transfer.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"blocked(address)\":{\"details\":\"Returns the blocked status of an account.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"freeze(address,uint256)\":{\"details\":\"Adjusts the amount of tokens frozen for a user.\",\"params\":{\"amount\":\"The amount of tokens frozen. Requirements: - The user must have sufficient unfrozen balance. - The user cannot be address(0).\",\"user\":\"The address of the user whose tokens to freeze.\"}},\"frozen(address)\":{\"details\":\"Returns the amount of tokens frozen for a user.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unfreeze(address,uint256)\":{\"details\":\"Unfreezes tokens for a user.\",\"params\":{\"amount\":\"The amount of tokens to unfreeze. Requirements: - The user must have sufficient frozen balance. - The user cannot be address(0).\",\"user\":\"The address of the user whose tokens to unfreeze.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USVP.sol\":\"USVP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x9128a324d265044430e5fa4a6a2853e92d6a62a2a5a69c2fc623f5b7b8cf3f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1122c2c8c19d717e45a9c00ccedd9fcd3b61eab6a291469a3d6200671d3e6f25\",\"dweb:/ipfs/QmYEjVC6ttBK1YSECdJmH69LtD2mahbVW27JLv6TUdWKiU\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/Blocklist.sol\":{\"keccak256\":\"0xe8aee3283f4de7cab9bf88aaf7d39c81bcdafcfcb8fbe7392171892f34523d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ea43a9c318854299457e15e7380188e43e186c4c3a33bf2ec101f22ba81bcd7\",\"dweb:/ipfs/QmbiNb9mWh2mZZHQ9Gpi3TD6ZCDbyR2KBPwpVdhRtEr4gx\"]},\"contracts/Custodian.sol\":{\"keccak256\":\"0xf52b63373090a4e13dbf06242bdd075ba796a2f73c7bdff50aba3f8d8424a8dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7fa14d9abfa489e8f3871f964c82f03653af73e17de1a9d69f2f4b59bcc620\",\"dweb:/ipfs/QmQTbXBY1LYBagEcho9CLRmkmHZUUfpW6vYG6xyeyTjGrz\"]},\"contracts/USVP.sol\":{\"keccak256\":\"0xcdc14b8939851bbf32bd1eb167f89bb9a3747ed683ba50a7ec43da1c91fb988c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0358a32041543b023df61113f8556d818e4655463561e942e994d77641eab356\",\"dweb:/ipfs/QmcDEReAu6Mz9EeodWbYyb6TzYP6NFPQNxgJbBn7ccNqh8\"]}},\"version\":1}"}}}}}